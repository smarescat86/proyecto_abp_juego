%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: monkeysss.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Elaine Leong
%%CreationDate: 9/08/13
%%BoundingBox: 0 0 836 806
%%HiResBoundingBox: 0 0 835.3643 805.7676
%%CropBox: 0 0 835.3643 805.7676
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-repair">Print</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:description>
            <rdf:Alt/>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li/>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2013-08-09T20:01:09+10:00</xmp:MetadataDate>
         <xmp:ModifyDate>2013-08-09T20:01:09+10:00</xmp:ModifyDate>
         <xmp:CreateDate>2013-08-09T20:01:09+10:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>248</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEAyADIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAAyAAAAAEA&#xA;AQDIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA+AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXn/nr829O0CeTT&#xA;dNiXUNWTaUE0hhPhIw3Zv8kfeMxc2qENhuXO0+iM9ztF5je/mt+YF3IW/SYtkrURW8MaqPpZWf7z&#xA;mDLVzPV2MdFiHREaX+cHnqxkUz3UepQjrDcRqpI9njCNX51ww1kxz3Yz0GM8hT1/yT+YGj+a7d/q&#xA;4NtqEIrc2Ehq6jpyVhTmle/3gZscOcTG3N1Wo00sZ35Mny5x3YqhtT1Ky0ywnv72UQ2tsheWRuwH&#xA;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&#xA;sQMGPDGPJOXUzyfUdmSZa0OxV//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:B9D24723BF2168118083B14EA10B2280</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:B9D24723BF2168118083B14EA10B2280</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:B8D24723BF2168118083B14EA10B2280</stRef:instanceID>
            <stRef:documentID>xmp.did:B8D24723BF2168118083B14EA10B2280</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B7D24723BF2168118083B14EA10B2280</stEvt:instanceID>
                  <stEvt:when>2013-08-09T20:00+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B8D24723BF2168118083B14EA10B2280</stEvt:instanceID>
                  <stEvt:when>2013-08-09T20:00:37+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B9D24723BF2168118083B14EA10B2280</stEvt:instanceID>
                  <stEvt:when>2013-08-09T20:01:09+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>296.999959</stDim:w>
            <stDim:h>296.999959</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=36 M=83 Y=100 K=27</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>36.111099</xmpG:cyan>
                           <xmpG:magenta>82.870399</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>26.851904</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=28 M=63 Y=86 K=15</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>28.171396</xmpG:cyan>
                           <xmpG:magenta>63.000000</xmpG:magenta>
                           <xmpG:yellow>85.999992</xmpG:yellow>
                           <xmpG:black>14.914298</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=30 Y=50 K=0</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>30.000002</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=5 Y=32 K=0</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>5.000001</xmpG:magenta>
                           <xmpG:yellow>32.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=73 Y=91 K=18</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>34.931499</xmpG:cyan>
                           <xmpG:magenta>72.945198</xmpG:magenta>
                           <xmpG:yellow>91.438400</xmpG:yellow>
                           <xmpG:black>18.493198</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=65 Y=90 K=35</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>65.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>35.000004</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=36 M=76 Y=95 K=19</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>36.361198</xmpG:cyan>
                           <xmpG:magenta>75.930702</xmpG:magenta>
                           <xmpG:yellow>95.180702</xmpG:yellow>
                           <xmpG:black>19.250000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=38 Y=63 K=0</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>37.941200</xmpG:magenta>
                           <xmpG:yellow>63.235302</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=70 Y=100 K=50</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>50.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=29 M=10 Y=100 K=10</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>28.999996</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=66 M=10 Y=100 K=10</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>66.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=46 M=10 Y=100 K=10</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>45.999996</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=58 Y=12 K=0</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>58.055599</xmpG:magenta>
                           <xmpG:yellow>12.222200</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=37 M=78 Y=98 K=20</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>37.305599</xmpG:cyan>
                           <xmpG:magenta>77.902802</xmpG:magenta>
                           <xmpG:yellow>97.652802</xmpG:yellow>
                           <xmpG:black>19.750000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=59 Y=81 K=14</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>26.410698</xmpG:cyan>
                           <xmpG:magenta>59.062500</xmpG:magenta>
                           <xmpG:yellow>80.625000</xmpG:yellow>
                           <xmpG:black>13.982100</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=97 Y=100 K=0</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>97.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=76 Y=85 K=0</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>76.000000</xmpG:magenta>
                           <xmpG:yellow>85.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=44 M=12 Y=0 K=0</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>44.000000</xmpG:cyan>
                           <xmpG:magenta>12.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=57 M=15 Y=0 K=0</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>56.700005</xmpG:cyan>
                           <xmpG:magenta>15.463602</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=38 M=80 Y=100 K=33</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>38.202297</xmpG:cyan>
                           <xmpG:magenta>79.775299</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>33.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=34 M=71 Y=89 K=18</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>34.000004</xmpG:cyan>
                           <xmpG:magenta>71.000000</xmpG:magenta>
                           <xmpG:yellow>89.000000</xmpG:yellow>
                           <xmpG:black>18.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=37 M=77 Y=96 K=19</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>36.774899</xmpG:cyan>
                           <xmpG:magenta>76.794601</xmpG:magenta>
                           <xmpG:yellow>96.263702</xmpG:yellow>
                           <xmpG:black>19.469101</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=38 M=80 Y=100 K=20</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>38.202297</xmpG:cyan>
                           <xmpG:magenta>80.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>20.224703</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -805.768 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 805.768 li
835.364 805.768 li
835.364 0 li
cp
clp
[1 0 0 1 0 0 ]ct
803.354 348.798 mo
805.894 347.737 806.188 346.436 806.795 343.615 cv
812.776 346.961 818.633 341.637 816.643 334.963 cv
814.334 327.224 797.406 325.958 791.199 323.367 cv
786.603 321.452 782.232 319.482 777.438 318.675 cv
775.312 327.841 768.405 334.521 779.498 341.476 cv
785.752 345.399 796.481 351.669 803.354 348.798 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.361111 .828704 1 .268519 cmyk
f
778.393 383.147 mo
765.043 386.657 765.572 357.367 773.114 349.507 cv
776.24 346.251 783.101 338.699 787.494 341.224 cv
791.44 343.492 791.393 351.731 791.196 356.551 cv
790.76 367.15 786.857 380.924 778.393 383.147 cv
cp
f
793.76 303.19 mo
794.392 300.112 793.511 298.944 791.583 296.447 cv
797.802 293.21 796.932 284.137 790.356 281.396 cv
782.733 278.22 771.771 293.014 766.027 296.982 cv
761.779 299.918 757.619 302.613 754.148 306.493 cv
760.324 314.752 761.682 325.729 773.824 320.239 cv
780.676 317.144 792.051 311.519 793.76 303.19 cv
cp
f
791.044 347.61 mo
784.938 362.139 770.255 371.863 754.622 372.372 cv
741.052 372.811 718.604 370.206 716.568 356.384 cv
714.827 344.564 713.276 328.434 724.29 319.463 cv
738.823 307.625 756.284 304.829 773.903 310.521 cv
788.676 315.295 797.214 332.929 791.044 347.61 cv
cp
.367749 .767946 .962637 .194691 cmyk
f
751.813 366.4 mo
738.03 366.4 723.629 363.032 722.521 355.508 cv
720.688 343.06 720.094 330.642 728.091 324.127 cv
736.587 317.206 746.153 313.696 756.521 313.696 cv
761.588 313.696 766.813 314.552 772.053 316.246 cv
777.632 318.049 782.34 322.366 784.966 328.09 cv
787.538 333.697 787.732 339.962 785.498 345.281 cv
780.383 357.449 767.896 365.922 754.429 366.358 cv
753.59 366.386 752.714 366.4 751.813 366.4 cv
cp
.281714 .63 .86 .149143 cmyk
f
763.077 331.335 mo
757.546 338.029 754.969 346.763 755.061 355.292 cv
755.105 359.63 754.842 366.688 756.263 372.257 cv
771.271 371.149 785.152 361.626 791.044 347.61 cv
794.489 339.411 793.344 330.293 789.092 323.006 cv
788.455 322.848 787.805 322.703 787.123 322.585 cv
777.849 320.999 769.027 324.133 763.077 331.335 cv
cp
0 .3 .5 0 cmyk
f
777.013 354.094 mo
777.062 355.46 775.993 356.609 774.626 356.658 cv
773.26 356.708 772.111 355.64 772.063 354.275 cv
772.012 352.908 773.08 351.76 774.446 351.709 cv
775.813 351.659 776.961 352.729 777.013 354.094 cv
cp
0 .05 .32 0 cmyk
f
715.691 328.919 mo
711.957 316.999 699.628 289.772 682.46 299.75 cv
677.487 302.642 669.266 313.949 674.008 319.704 cv
678.4 325.033 684.322 315.638 687.756 313.049 cv
701.308 302.844 704.743 340.495 708.193 348.718 cv
714.868 364.619 728.733 377.158 746.193 368.857 cv
748.321 367.842 750.377 366.634 752.407 365.438 cv
747.02 355.635 735.282 363.248 727.233 354.994 cv
720.711 348.305 718.394 337.54 715.691 328.919 cv
cp
.361111 .828704 1 .268519 cmyk
f
729.663 381.089 mo
729.731 389.089 744.668 386.345 748.525 384.119 cv
755.027 380.371 764.008 366.82 760.007 357.904 cv
756.916 351.012 749.539 346.102 739.493 347.265 cv
733.689 347.937 720.627 357.55 723.625 363.507 cv
725.563 367.354 731.306 364.642 730.425 370.487 cv
729.83 374.415 729.62 376.223 729.663 381.089 cv
cp
.382023 .8 1 .202247 cmyk
f
734.68 310.42 mo
744.76 312.561 739.613 324.494 739.339 331.639 cv
739.069 338.667 745.688 344.256 743.692 351.371 cv
741.561 358.947 733.069 360.708 726.922 357.855 cv
719.316 354.319 715.875 346.234 726.565 345.613 cv
717.851 345.617 717.862 330.364 718.361 326.773 cv
719.397 319.313 727.365 308.863 734.68 310.42 cv
cp
.349315 .729452 .914384 .184932 cmyk
f
832.435 255.931 mo
832.725 263.832 826.437 270.476 818.395 270.77 cv
810.352 271.063 803.598 264.896 803.309 256.992 cv
803.02 249.091 809.308 242.449 817.349 242.155 cv
825.394 241.861 832.146 248.028 832.435 255.931 cv
cp
.361111 .828704 1 .268519 cmyk
f
826.636 256.783 mo
826.844 262.479 821.876 267.284 815.545 267.515 cv
809.214 267.746 803.911 263.316 803.703 257.619 cv
803.494 251.923 808.459 247.119 814.792 246.886 cv
821.124 246.656 826.429 251.085 826.636 256.783 cv
cp
0 .3 .5 0 cmyk
f
756.591 210.603 mo
725.873 211.723 701.621 235.991 700.892 265.517 cv
700.181 265.447 699.461 265.405 698.728 265.432 cv
690.119 265.747 683.394 272.857 683.702 281.313 cv
684.009 289.769 691.237 296.369 699.843 296.055 cv
702.775 295.948 705.477 295.04 707.767 293.572 cv
717.874 311.792 737.979 323.847 760.692 323.019 cv
792.581 321.854 817.515 295.746 816.383 264.704 cv
815.249 233.662 788.481 209.438 756.591 210.603 cv
cp
.34 .71 .89 .18 cmyk
f
758.49 317.04 mo
739.476 317.04 722.057 306.929 713.028 290.654 cv
712.223 289.201 710.851 288.146 709.239 287.739 cv
708.755 287.616 708.261 287.555 707.767 287.555 cv
706.627 287.555 705.5 287.88 704.522 288.505 cv
703.052 289.449 701.356 289.98 699.624 290.043 cv
699.501 290.048 699.378 290.05 699.254 290.05 cv
694.088 290.05 689.896 286.115 689.713 281.094 cv
689.526 275.965 693.668 271.637 698.946 271.444 cv
699.188 271.441 li
699.504 271.441 699.858 271.46 700.299 271.504 cv
700.495 271.523 700.695 271.534 700.892 271.534 cv
702.353 271.534 703.771 271.001 704.874 270.025 cv
706.128 268.918 706.865 267.337 706.905 265.666 cv
707.562 239.158 729.481 217.611 756.81 216.615 cv
757.474 216.591 758.135 216.578 758.794 216.578 cv
786.726 216.578 809.38 237.814 810.371 264.923 cv
810.858 278.3 805.956 291.081 796.569 300.91 cv
787.14 310.785 774.32 316.499 760.473 317.005 cv
759.808 317.029 759.15 317.04 758.492 317.04 cv
758.49 317.04 li
cp
.281714 .63 .86 .149143 cmyk
f
704.056 280.57 mo
704.269 286.393 705.595 291.071 699.67 291.287 cv
693.744 291.503 688.766 286.957 688.554 281.134 cv
688.342 275.313 692.974 270.418 698.9 270.201 cv
704.827 269.985 703.843 274.749 704.056 280.57 cv
cp
0 .3 .5 0 cmyk
f
816.342 269.284 mo
815.003 298.272 790.998 321.914 760.692 323.019 cv
742.729 323.676 726.391 316.273 715.343 304.136 cv
713.165 293.006 715.012 281.321 724.427 274.226 cv
715.534 257.252 724.359 235.033 746.631 240.058 cv
751.443 241.143 755.62 244.032 759.356 247.147 cv
764.401 238.039 775.415 229.47 786.575 232.904 cv
786.575 232.904 802.326 237.075 799.422 255.601 cv
799.422 255.601 814.856 255.242 816.342 269.284 cv
cp
f
809.446 267.36 mo
809.911 269.214 804.612 272.152 797.599 273.925 cv
790.59 275.696 784.527 275.633 784.059 273.779 cv
783.593 271.927 788.891 268.988 795.905 267.213 cv
802.916 265.443 808.977 265.509 809.446 267.36 cv
cp
level3{
gsave
clp
[10.0385 -1.06645 -1.32089 5.78258 796.752 270.57 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ
!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ
!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ
!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ!1\uJ
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!)7tD!)7tD!)7tD!)7tD!)7tD!)7tD!)7tD!)7tD!)7tD!)7tD!)7tD!)A%E!)A%E!)A%E!)J+F!)J+F
!)J+F!)S1G!)S1G!)\7H!)\7H!)e=I!)nCJ!)nFK!*"LL!*+RM!*4XN!*=^O!*=^O!*FdP!*OmR!*b$T
!*k*U!*t0V!+(6W!+1?Y!+CK[!+LQ\!+^]^!+gc_!,$rb!,.#c!,@/e!,R>h!,dJj!-!Vl!-3bn!-Eqq
!-X(s!-j4u!.'D#!.9P%!.K\'!.fq+!/$(-!/?=1!/QI3!/l[6!02p:!0N-=!0`<@!1&NC!1AcG!1\uJ
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.104294 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.0385 -1.06645 -1.32089 5.78258 796.752 270.57 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~S"#n:S"#n:S"#n:S"#n:S"#n:S"#n:S"#n:R[TY3Q^3o%P`q8nOcb`dNfB$WMi*@ILkg_>KnY24JqAQ)
J:E#rI=-EhH[:!`G^+FVG'8"NFE;MDEcH)<E,TZ4D/F**CMR["BkV0mB4kjhAn>OaA7T1[@U`bS@:3JM
?X@&F?<piB>[1N=>?b<9>$5!1=BJ[,='&I(<`W7%<`W4#<E3!t<)Z^o;c6Lk;GpCj;,L1f:f'tb:f'ta
:JXb^:JX_\:/4PZ:/4PZ:/+GW9he>V9he>V9MA,R9MA,R9MA,R9MA,R9MA,R9MA,R9MA,R9MA,R9MA,R
~>
<~Mi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3IMMMd:KMMd7IM2@(GM26tDLkpkCLkpkCLPLY?
LPLY>L5(G;L5(G;L5(D9KnY57KnY57KnP,4KS5#3KS5#3KS5#3K7ef/K7ef/K7ef.JqAT+JqAT+JqAT+
JqAT+Jq8K(JUrB'JUrB'JUrB'JUrB&J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#It)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
750.243 279.375 mo
750.528 281.264 744.969 283.675 737.814 284.762 cv
730.669 285.845 724.641 285.193 724.355 283.302 cv
724.068 281.414 729.628 279.002 736.78 277.917 cv
743.93 276.834 749.955 277.486 750.243 279.375 cv
cp
level3{
gsave
clp
[10.0951 -.0891971 -1.87533 5.62817 737.298 281.339 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.0951 -.0891971 -1.87533 5.62817 737.298 281.339 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
748.895 287.527 mo
748.895 287.527 769.124 275.817 789.568 278.936 cv
789.568 278.936 793.595 304.513 773.643 308.297 cv
773.643 308.297 752.414 312.08 748.895 287.527 cv
cp
0 0 0 0 cmyk
f
748.694 268.286 mo
749.196 272.208 747.785 275.619 745.545 275.906 cv
743.306 276.191 741.081 273.245 740.581 269.324 cv
740.079 265.4 741.49 261.99 743.73 261.703 cv
745.974 261.417 748.194 264.365 748.694 268.286 cv
cp
.4 .65 .9 .35 cmyk
f
790.965 261.127 mo
791.466 265.049 790.055 268.461 787.813 268.748 cv
785.573 269.034 783.351 266.086 782.85 262.165 cv
782.347 258.243 783.76 254.831 786.001 254.545 cv
788.241 254.259 790.463 257.206 790.965 261.127 cv
cp
f
773.734 268.782 mo
774.288 271.061 771.618 273.662 767.772 274.596 cv
763.927 275.528 760.361 274.435 759.81 272.158 cv
759.259 269.879 761.929 267.275 765.773 266.344 cv
769.618 265.412 773.182 266.504 773.734 268.782 cv
cp
.34 .71 .89 .18 cmyk
f
439.513 535.216 mo
427.115 519.351 440.307 494.052 424.174 480.833 cv
420.003 477.418 409.705 474.054 409.725 482.357 cv
409.741 488.853 419.237 495.66 422.087 501.289 cv
426.174 509.369 424.689 519.21 426.149 527.854 cv
427.729 537.215 433.671 544.798 440.728 551.138 cv
453.831 562.908 477.361 566.961 489 550.852 cv
490.158 549.253 491.306 547.649 492.342 545.965 cv
484.128 539.282 475.448 551 464.819 550.652 cv
454.339 550.313 445.675 543.1 439.513 535.216 cv
cp
.361111 .828704 1 .268519 cmyk
f
451.067 473.429 mo
451.067 473.429 405.788 502.789 466.632 528.613 cv
466.632 528.613 452.837 586.273 509.787 575.66 cv
509.787 575.66 564.267 576.366 537.381 526.491 cv
537.381 526.491 589.026 518.708 551.53 483.334 cv
451.067 473.429 li
cp
.367749 .767946 .962637 .194691 cmyk
f
496.848 570.947 mo
487.563 570.947 481.011 568.362 476.813 563.044 cv
469.114 553.286 471.076 535.894 472.483 530.013 cv
473.166 527.157 471.687 524.224 468.982 523.076 cv
451.376 515.602 441.677 507.267 440.933 498.968 cv
440.214 490.965 448.1 483.165 452.716 479.638 cv
548.855 489.116 li
556.74 496.92 560.276 503.683 558.839 508.279 cv
556.631 515.332 542.823 519.585 536.484 520.541 cv
534.548 520.832 532.873 522.047 531.999 523.803 cv
531.123 525.555 531.155 527.623 532.085 529.348 cv
536.896 538.273 541.612 550.627 536.746 558.781 cv
531.616 567.373 516.949 569.644 509.911 569.644 cv
509.911 569.644 509.856 569.644 509.832 569.644 cv
509.456 569.644 509.05 569.679 508.686 569.744 cv
504.406 570.543 500.424 570.947 496.848 570.947 cv
cp
.281714 .63 .86 .149143 cmyk
f
529.396 546.652 mo
529.396 559.938 517.608 570.708 503.066 570.708 cv
488.525 570.708 476.738 559.938 476.738 546.652 cv
476.738 533.371 488.525 522.602 503.066 522.602 cv
517.608 522.602 529.396 533.371 529.396 546.652 cv
cp
0 .3 .5 0 cmyk
f
493.666 540.026 mo
504.076 539.529 512.972 548.913 516.205 557.681 cv
524.956 581.396 498.044 586.237 481.262 577.179 cv
474.376 573.464 468.814 565.28 470.805 556.711 cv
473.431 545.409 485.587 540.412 493.666 540.026 cv
cp
.349315 .729452 .914384 .184932 cmyk
f
538.007 546.473 mo
539.126 544.358 541.472 538.425 544.349 538.512 cv
548.454 538.635 547.865 542.324 547.757 544.968 cv
551.683 536.924 561.183 541.993 556.538 549.954 cv
560.893 546.349 564.558 550.148 563.115 555.03 cv
561.873 559.232 557.811 562.571 555.188 565.95 cv
550.708 571.726 539.451 582.712 531.278 576.605 cv
522.526 570.07 534.584 552.939 538.007 546.473 cv
cp
.361111 .828704 1 .268519 cmyk
f
506.045 541.606 mo
508.954 539.128 513.107 540.548 513.792 544.65 cv
514.392 535.956 523.011 537.11 522.384 545.457 cv
522.364 545.724 522.592 546.328 522.363 545.436 cv
524.99 539.154 531.112 538.923 533.061 544.644 cv
535.267 551.121 531.226 558.989 530.304 565.412 cv
529.336 572.166 529.292 579.115 521.087 580.566 cv
514.247 581.772 509.63 577.689 507.135 571.868 cv
504.277 565.2 498.896 547.705 506.045 541.606 cv
cp
.363612 .759307 .951807 .1925 cmyk
f
560.248 452.953 mo
559.735 452.953 559.229 452.987 558.729 453.035 cv
553.118 427.396 530.295 408.204 502.976 408.204 cv
471.445 408.204 445.886 433.763 445.886 465.293 cv
445.886 506.177 471.445 522.382 502.976 522.382 cv
526.969 522.382 547.49 507.571 555.937 486.601 cv
557.314 486.986 558.755 487.207 560.248 487.207 cv
569.401 487.207 576.822 479.54 576.822 470.08 cv
576.822 460.622 569.401 452.953 560.248 452.953 cv
cp
.34 .71 .89 .18 cmyk
f
498.236 516.118 mo
478.546 516.118 445.515 509.416 445.515 464.557 cv
445.515 436.125 469.165 412.996 498.236 412.996 cv
522.82 412.996 544.475 430.021 549.724 453.478 cv
550.382 456.417 553.044 458.476 556.067 458.476 cv
556.265 458.476 556.468 458.465 556.671 458.447 cv
556.992 458.419 557.317 458.395 557.646 458.395 cv
563.545 458.395 568.343 463.335 568.343 469.413 cv
568.343 475.49 563.545 480.434 557.646 480.434 cv
556.769 480.434 555.849 480.305 554.917 480.051 cv
554.337 479.893 553.75 479.819 553.173 479.819 cv
550.582 479.819 548.159 481.344 547.146 483.8 cv
539.063 503.431 519.863 516.118 498.236 516.118 cv
cp
.281714 .63 .86 .149143 cmyk
f
571.298 470.08 mo
571.298 476.386 566.351 481.498 560.248 481.498 cv
554.147 481.498 558.751 477.116 558.751 470.812 cv
558.751 464.508 554.147 458.663 560.248 458.663 cv
566.351 458.663 571.298 463.775 571.298 470.08 cv
cp
0 .3 .5 0 cmyk
f
466.881 456.822 mo
466.881 465.975 459.462 473.395 450.308 473.395 cv
441.153 473.395 433.734 465.975 433.734 456.822 cv
433.734 447.666 441.153 440.247 450.308 440.247 cv
459.462 440.247 466.881 447.666 466.881 456.822 cv
cp
.34 .71 .89 .18 cmyk
f
462.837 456.822 mo
462.837 463.129 457.721 468.243 451.413 468.243 cv
445.105 468.243 439.99 463.129 439.99 456.822 cv
439.99 450.514 445.105 445.398 451.413 445.398 cv
457.721 445.398 462.837 450.514 462.837 456.822 cv
cp
0 .379412 .632353 0 cmyk
f
531.15 470.08 mo
531.15 470.08 539.241 456.16 525.626 439.144 cv
512.367 422.568 486.401 438.59 486.401 438.59 cv
477.042 424.441 465.8 426.13 458.375 429.675 cv
450.566 439.439 445.886 451.817 445.886 465.293 cv
445.886 506.177 471.445 522.382 502.976 522.382 cv
517.681 522.382 531.08 516.819 541.201 507.688 cv
551.118 478.931 531.15 470.08 531.15 470.08 cv
cp
0 .3 .5 0 cmyk
f
527.639 474.965 mo
527.522 476.951 521.341 478.218 513.822 477.789 cv
506.308 477.36 500.306 475.406 500.419 473.42 cv
500.531 471.434 506.713 470.167 514.234 470.595 cv
521.75 471.023 527.751 472.979 527.639 474.965 cv
cp
level3{
gsave
clp
[10.3044 2.07262 -3.1169 5.33195 514.027 474.192 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.3044 2.07262 -3.1169 5.33195 514.027 474.192 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
473.446 470.477 mo
473.139 472.442 466.863 473.103 459.421 471.947 cv
451.982 470.795 446.199 468.267 446.504 466.3 cv
446.81 464.333 453.085 463.674 460.527 464.827 cv
467.968 465.98 473.751 468.51 473.446 470.477 cv
cp
level3{
gsave
clp
[10.0549 3.06164 -3.61882 5.00493 459.975 468.387 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.0549 3.06164 -3.61882 5.00493 459.975 468.387 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
497.611 493.666 mo
492.431 493.666 488.479 490.013 484.947 486.749 cv
484.681 486.505 li
482.143 489.468 477.35 491.019 472.507 490.385 cv
467.688 489.753 464.036 487.139 462.492 483.212 cv
463.52 482.806 li
464.914 486.348 468.241 488.712 472.649 489.289 cv
477.359 489.901 481.989 488.329 484.174 485.367 cv
484.54 484.874 li
485.697 485.938 li
489.458 489.414 493.719 493.353 499.314 492.416 cv
502.685 491.853 506.987 489.819 508.997 486.549 cv
509.938 487.127 li
507.746 490.693 503.115 492.901 499.497 493.506 cv
498.852 493.614 498.223 493.666 497.611 493.666 cv
cp
.4 .7 1 .5 cmyk
f
493.617 474.617 mo
493.386 477.046 489.875 478.701 485.773 478.311 cv
481.674 477.922 478.535 475.636 478.767 473.206 cv
478.996 470.774 482.51 469.123 486.61 469.51 cv
490.709 469.9 493.848 472.187 493.617 474.617 cv
cp
.34 .71 .89 .18 cmyk
f
470.835 460.905 mo
469.316 457.194 467.419 455.15 465.196 454.832 cv
461.525 454.295 458.042 458.606 458.007 458.649 cv
457.144 457.961 li
457.301 457.763 461.051 453.103 465.353 453.738 cv
467.992 454.117 470.179 456.387 471.856 460.486 cv
470.835 460.905 li
cp
.4 .7 1 .5 cmyk
f
504.71 465.369 mo
503.736 464.852 li
505.815 460.942 508.222 458.901 510.884 458.79 cv
515.215 458.596 518.491 463.603 518.63 463.815 cv
517.7 464.415 li
517.671 464.368 514.64 459.715 510.929 459.895 cv
508.685 459.989 506.594 461.833 504.71 465.369 cv
cp
f
191.749 150.477 mo
195.99 151.983 200.643 153.086 205.223 153.941 cv
209.834 154.791 214.502 155.369 219.188 155.694 cv
228.563 156.343 238.01 155.977 247.309 154.611 cv
265.926 151.908 283.864 145.075 299.84 135.096 cv
315.857 125.135 329.933 112.174 342.072 97.6538 cv
354.229 83.1147 364.522 67.0293 373.407 50.2217 cv
374.068 48.9697 375.62 48.4912 376.874 49.1528 cv
378.071 49.7856 378.561 51.2319 378.024 52.4531 cv
377.947 52.6216 li
376.966 54.8325 375.96 57.0356 374.93 59.23 cv
373.875 61.4102 372.773 63.5679 371.656 65.7212 cv
369.417 70.0259 367.073 74.2856 364.614 78.4878 cv
359.61 86.8374 354.116 94.9448 347.996 102.611 cv
341.936 110.326 335.188 117.538 327.938 124.256 cv
320.662 130.95 312.731 136.979 304.321 142.296 cv
295.862 147.54 286.859 151.956 277.485 155.388 cv
268.075 158.701 258.338 161.169 248.438 162.303 cv
243.493 162.885 238.526 163.24 233.562 163.257 cv
228.595 163.264 223.639 163.011 218.718 162.479 cv
213.803 161.881 208.932 161.02 204.129 159.876 cv
201.729 159.302 199.343 158.664 196.981 157.931 cv
194.619 157.149 192.328 156.333 189.957 155.292 cv
189.858 155.248 li
188.56 154.677 187.969 153.162 188.541 151.864 cv
189.083 150.627 190.496 150.037 191.749 150.477 cv
cp
.29 .1 1 .1 cmyk
f
368.634 59.9761 mo
368.634 59.9761 380.243 46.8008 355.275 38.8765 cv
355.275 38.8765 351.07 62.4521 368.634 59.9761 cv
cp
.66 .1 1 .1 cmyk
f
334.674 109.854 mo
334.674 109.854 346.284 96.6787 321.316 88.7549 cv
321.316 88.7549 317.11 112.33 334.674 109.854 cv
cp
.46 .1 1 .1 cmyk
f
211.137 154.506 mo
211.137 154.506 219.306 135.791 188.842 135.894 cv
188.842 135.894 192.57 163.494 211.137 154.506 cv
cp
.66 .1 1 .1 cmyk
f
370.325 68.8096 mo
370.325 68.8096 375.896 43.4971 407.099 66.3267 cv
407.099 66.3267 382.686 91.8862 370.325 68.8096 cv
cp
.46 .1 1 .1 cmyk
f
352.275 92.8691 mo
352.275 92.8691 361.502 74.1421 381.517 97.9995 cv
381.517 97.9995 357.506 113.295 352.275 92.8691 cv
cp
.66 .1 1 .1 cmyk
f
222.204 161.144 mo
222.204 161.144 204.879 154.42 206.122 182.111 cv
206.122 182.111 231.072 177.685 222.204 161.144 cv
cp
.46 .1 1 .1 cmyk
f
247.216 159.226 mo
247.216 159.226 229.351 156.907 236.932 182.689 cv
236.932 182.689 259.395 172.744 247.216 159.226 cv
cp
.66 .1 1 .1 cmyk
f
272.541 149.865 mo
265.242 174.574 283.563 174.846 302.055 173.083 cv
317.751 171.586 333.884 181.24 319.669 196.708 cv
314.188 202.67 303.529 207.737 295.673 202.958 cv
287.528 198.01 291.914 195.034 298.727 192.727 cv
303.334 191.169 314.078 191.86 310.949 184.704 cv
307.954 177.847 293.835 180.379 288.632 181.112 cv
265.784 184.328 258.464 172.575 260.907 150.408 cv
263.072 151.279 265.77 151.589 268.207 151.768 cv
270.793 151.955 273.326 149.97 271.903 151.958 cv
272.541 149.865 li
cp
.361111 .828704 1 .268519 cmyk
f
249.451 156.212 mo
263.207 167.231 279.699 167.927 296.501 163.99 cv
336.441 154.636 325.276 89.0225 283.51 91.2202 cv
264.447 92.2231 259.157 114.028 245.969 124.125 cv
240.104 128.615 220.26 130.623 218.419 137.853 cv
213.056 158.909 243.909 151.772 249.451 156.212 cv
cp
.34 .71 .89 .18 cmyk
f
276.465 160.095 mo
267.455 159.638 259.849 156.832 253.212 151.517 cv
250.068 148.998 245.438 148.671 239.58 148.257 cv
234.313 147.886 226.356 147.324 224.373 144.577 cv
223.522 143.398 223.787 141.247 224.192 139.568 cv
225.603 137.83 232.688 135.614 236.528 134.412 cv
241.662 132.805 246.51 131.287 249.625 128.904 cv
255.109 124.707 259.173 119.063 263.103 113.606 cv
269.244 105.081 274.548 97.7163 283.827 97.2285 cv
284.939 97.1704 286.048 97.1675 287.122 97.2231 cv
304.579 98.1069 313.881 113.53 315.136 127.486 cv
316.192 139.215 311.585 154.279 295.129 158.131 cv
288.261 159.742 282.156 160.383 276.466 160.095 cv
276.466 160.095 276.466 160.095 276.465 160.095 cv
cp
.281714 .63 .86 .149143 cmyk
f
341.777 33.3301 mo
338.951 33.2896 336.304 34.0283 334.021 35.3213 cv
325.861 15.7002 305.985 1.29443 282.077 .0820313 cv
258.604 -1.10693 237.71 10.749 227.396 28.873 cv
225.686 27.9985 223.78 27.4277 221.742 27.2485 cv
213.422 26.5215 206.098 32.5596 205.385 40.7334 cv
204.67 48.9082 210.835 56.1245 219.158 56.8511 cv
219.661 56.895 220.163 56.9111 220.658 56.9063 cv
221.963 84.9326 245.954 108.054 276.529 109.603 cv
307.231 111.158 333.523 90.4009 337.486 62.4746 cv
338.721 62.8149 340.014 63.021 341.355 63.0415 cv
349.708 63.1597 356.572 56.605 356.688 48.3989 cv
356.804 40.1934 350.127 33.4478 341.777 33.3301 cv
cp
.34 .71 .89 .18 cmyk
f
276.833 103.594 mo
249.417 102.204 227.851 82.0132 226.668 56.6274 cv
226.523 53.5171 224.036 51.0542 220.968 50.8979 cv
220.846 50.8921 220.721 50.8896 220.597 50.8911 cv
220.401 50.8931 220.202 50.8882 220.002 50.8794 cv
219.896 50.8735 219.79 50.8662 219.683 50.8564 cv
217.237 50.6431 215.026 49.5137 213.456 47.6768 cv
211.912 45.8687 211.173 43.5884 211.377 41.2578 cv
211.792 36.5015 215.961 32.9707 220.867 33.2168 cv
220.983 33.2236 221.1 33.2324 221.217 33.2427 cv
222.425 33.3477 223.582 33.6802 224.656 34.2285 cv
225.435 34.6289 226.265 34.8418 227.088 34.8838 cv
229.292 34.9941 231.466 33.8857 232.626 31.8491 cv
242.116 15.1699 261.407 5.06006 281.772 6.09131 cv
302.607 7.14697 320.937 19.5269 328.467 37.6333 cv
329.128 39.2231 330.441 40.4546 332.07 41.0142 cv
332.607 41.1973 333.162 41.3022 333.717 41.3315 cv
334.849 41.3877 335.985 41.125 336.99 40.5557 cv
338.449 39.7285 340.029 39.3213 341.691 39.3452 cv
341.809 39.3486 341.927 39.3506 342.044 39.3574 cv
346.949 39.6064 350.739 43.541 350.672 48.314 cv
350.639 50.6558 349.673 52.8481 347.955 54.4912 cv
346.207 56.1602 343.893 57.0596 341.441 57.0249 cv
341.339 57.0239 341.238 57.022 341.136 57.0161 cv
340.473 56.9824 339.782 56.8672 339.085 56.6748 cv
338.659 56.5571 338.223 56.4868 337.79 56.4663 cv
336.527 56.4014 335.262 56.7368 334.185 57.4434 cv
332.74 58.3901 331.772 59.9165 331.528 61.6289 cv
327.994 86.5352 303.97 104.967 276.833 103.594 cv
cp
.281714 .63 .86 .149143 cmyk
f
332.33 78.752 mo
331.534 72.1343 328.416 66.126 322.224 63.3418 cv
324.308 58.1807 325.642 52.7471 324.657 47.1567 cv
320.146 21.5601 288.484 21.4116 280.869 44.9141 cv
278.769 39.5532 277.364 34.4561 273.09 30.6812 cv
253.765 13.6201 227.262 33.3506 237.547 57.0884 cv
233.516 61.3911 229.778 66.2046 228.75 72.2778 cv
228.121 75.9907 228.208 79.4204 228.873 82.5898 cv
238.625 97.9053 256.105 108.568 276.529 109.603 cv
300.881 110.835 322.464 98.0342 332.33 78.752 cv
cp
0 .3 .5 0 cmyk
f
263.506 57.5698 mo
263.191 63.8145 258.306 69.7041 255.283 69.5508 cv
252.258 69.3989 249.055 63.0986 249.372 56.854 cv
249.689 50.6118 253.404 46.7881 256.428 46.9429 cv
259.452 47.0947 263.823 51.3271 263.506 57.5698 cv
cp
0 0 0 0 cmyk
f
250.064 51.9326 mo
249.154 51.3887 li
251.327 47.7607 253.718 45.9214 256.26 45.9214 cv
256.275 45.9214 256.29 45.9214 256.304 45.9214 cv
260.466 45.957 263.368 50.9082 263.489 51.1187 cv
262.569 51.6489 li
262.543 51.603 259.846 47.0103 256.292 46.9834 cv
256.284 46.9834 256.271 46.9834 256.26 46.9834 cv
254.116 46.9834 252.031 48.6479 250.064 51.9326 cv
cp
.4 .7 1 .5 cmyk
f
308.624 55.0903 mo
308.446 58.603 306.472 61.3569 304.214 61.2422 cv
301.956 61.1279 300.27 58.188 300.448 54.6768 cv
300.625 51.1655 302.602 48.4097 304.858 48.5239 cv
307.117 48.6392 308.801 51.5786 308.624 55.0903 cv
cp
.34 .71 .89 .18 cmyk
f
351.44 48.7085 mo
351.391 54.624 346.02 59.3735 339.445 59.3198 cv
332.869 59.2646 338.483 55.9106 338.532 49.9951 cv
338.583 44.0801 333.047 37.8447 339.623 37.8999 cv
346.198 37.9546 351.49 42.7939 351.44 48.7085 cv
cp
0 .3 .5 0 cmyk
f
209.284 40.7539 mo
208.771 46.6465 213.665 51.8862 220.214 52.4595 cv
226.764 53.0308 221.823 47.3145 222.338 41.4209 cv
222.852 35.5293 228.629 31.6924 222.079 31.1196 cv
215.527 30.5483 209.798 34.8599 209.284 40.7539 cv
cp
f
285.064 61.6772 mo
285.007 64.022 281.754 65.8398 277.799 65.7437 cv
273.844 65.6455 270.684 63.6646 270.742 61.3213 cv
270.801 58.9785 274.056 57.1577 278.01 57.2544 cv
281.965 57.354 285.124 59.3335 285.064 61.6772 cv
cp
.34 .71 .89 .18 cmyk
f
244.603 103.333 mo
243.482 97.0112 240.606 87.3257 247.591 83.269 cv
255.455 78.6973 264.938 87.7705 268.857 93.7246 cv
274.21 101.853 277.664 125.603 262.896 126.831 cv
252.798 127.671 245.995 111.186 244.603 103.333 cv
cp
f
264.437 75.9746 mo
264.237 77.874 258.249 78.8115 251.053 78.0684 cv
243.863 77.3232 238.193 75.1792 238.389 73.2773 cv
238.587 71.376 244.574 70.4385 251.77 71.1826 cv
258.964 71.9292 264.632 74.0728 264.437 75.9746 cv
cp
level3{
gsave
clp
[9.7947 2.44786 -3.22824 4.97725 251.412 74.626 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.7947 2.44786 -3.22824 4.97725 251.412 74.626 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
288.823 76.7534 mo
288.823 76.7534 298.939 86.8291 285.652 90.4063 cv
285.652 90.4063 277.066 92.0967 280.201 79.1504 cv
280.201 79.1504 288.805 77.1064 288.823 76.7534 cv
cp
0 .580556 .122222 0 cmyk
f
274.482 79.7012 mo
270.119 79.7012 265.972 78.8433 262.695 76.5903 cv
263.297 75.7148 li
271.949 81.6675 288.349 77.2466 297.261 72.8218 cv
297.733 73.771 li
292.516 76.3604 283.082 79.7012 274.482 79.7012 cv
cp
.4 .7 1 .5 cmyk
f
285.716 85.376 mo
284.688 85.1157 li
285.174 83.189 284.536 79.0557 284.038 77.999 cv
284.997 77.5474 li
285.575 78.7749 286.274 83.1738 285.716 85.376 cv
cp
f
318.483 68.7007 mo
318.471 70.6123 312.602 72.1274 305.369 72.0815 cv
298.14 72.0381 292.287 70.4546 292.299 68.541 cv
292.312 66.6309 298.18 65.1162 305.414 65.1597 cv
312.644 65.2061 318.495 66.7896 318.483 68.7007 cv
cp
level3{
gsave
clp
[9.98545 1.48731 -2.73057 5.26633 305.392 68.6221 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.98545 1.48731 -2.73057 5.26633 305.392 68.6221 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
255.324 70.7954 mo
255.145 70.7954 254.963 70.7817 254.785 70.7539 cv
251.726 70.2817 249.618 65.8765 248.848 58.3506 cv
249.903 58.2422 li
250.61 65.1416 252.448 69.3203 254.946 69.7056 cv
257.231 70.0464 259.987 67.186 262.14 62.2095 cv
263.112 62.6294 li
260.877 67.8037 258.002 70.7954 255.324 70.7954 cv
cp
.4 .7 1 .5 cmyk
f
259.806 55.1802 mo
259.717 56.9243 258.144 58.2617 256.29 58.168 cv
254.436 58.0747 253.004 56.5854 253.093 54.8403 cv
253.18 53.0967 254.755 51.7603 256.609 51.853 cv
258.463 51.9478 259.895 53.4365 259.806 55.1802 cv
cp
.34 .71 .89 .18 cmyk
f
325.034 788.389 mo
315.605 791.872 303.645 774.607 312.163 767.317 cv
312.077 761.65 311.057 754.667 316.336 751.901 cv
331.906 743.742 339.174 783.166 325.034 788.389 cv
cp
.373056 .779028 .976528 .1975 cmyk
f
381.316 716.743 mo
401.186 722.665 391.523 739.175 392.523 755.466 cv
407.375 748.994 404.473 775.757 386.129 773.187 cv
372.419 771.267 374.078 751.368 374.317 740.289 cv
374.471 733.08 376.29 726.104 378.239 719.206 cv
381.316 716.743 li
cp
.264107 .590625 .80625 .139821 cmyk
f
358.926 699.098 mo
350.271 700.711 349.425 707.86 343.763 713.385 cv
336.542 720.429 325.912 722.867 317.289 727.85 cv
310.123 731.99 306.912 737.704 306.894 743.691 cv
291.72 742.537 275.591 738.019 273.099 721.056 cv
271.694 711.49 281.495 694.34 290.635 707.574 cv
293.059 711.087 292.511 720.502 299.281 716.13 cv
311.839 708.026 296.573 693.091 284.242 693.465 cv
270.266 693.885 262.967 709.28 264.28 720.903 cv
265.492 731.638 270.427 739.962 278.406 746.524 cv
287.062 753.646 298.747 755.089 309.93 754.121 cv
311.423 756.677 313.438 759.141 315.918 761.404 cv
324.234 769.001 334.031 771.26 343.772 769.898 cv
343.008 781 344.265 794.77 352.063 796.971 cv
370.645 802.218 377.962 771.238 363.768 778.358 cv
364.022 773.153 365.523 766.97 364.962 761.428 cv
377.767 752.918 391.541 744.233 395.318 731.314 cv
403.523 703.247 374.243 696.246 358.926 699.098 cv
cp
.34 .71 .89 .18 cmyk
f
441.277 651.928 mo
441.842 659.816 435.789 666.674 427.764 667.25 cv
419.734 667.823 412.77 661.894 412.207 654.006 cv
411.64 646.12 417.693 639.262 425.721 638.688 cv
433.748 638.113 440.711 644.041 441.277 651.928 cv
cp
f
435.51 652.981 mo
435.916 658.668 431.121 663.644 424.799 664.096 cv
418.482 664.547 413.029 660.305 412.622 654.618 cv
412.213 648.932 417.008 643.957 423.33 643.504 cv
429.648 643.055 435.104 647.296 435.51 652.981 cv
cp
0 .3 .5 0 cmyk
f
363.896 609.273 mo
333.237 611.465 309.847 636.564 310.147 666.098 cv
309.434 666.052 308.714 666.036 307.981 666.088 cv
299.389 666.702 292.914 674.043 293.52 682.483 cv
294.121 690.924 301.575 697.27 310.165 696.654 cv
313.09 696.445 315.759 695.442 317.996 693.897 cv
328.733 711.751 349.248 723.098 371.917 721.477 cv
403.747 719.202 427.754 692.239 425.539 661.256 cv
423.324 630.271 395.726 606.999 363.896 609.273 cv
cp
.34 .71 .89 .18 cmyk
f
367.628 715.616 mo
349.398 715.614 332.357 706.104 323.153 690.796 cv
322.297 689.372 320.892 688.365 319.266 688.015 cv
318.847 687.926 318.421 687.879 317.996 687.879 cv
316.786 687.879 315.591 688.246 314.578 688.946 cv
313.14 689.94 311.466 690.53 309.736 690.653 cv
309.496 690.671 309.257 690.678 309.018 690.678 cv
304.037 690.678 299.865 686.891 299.519 682.055 cv
299.153 676.936 303.142 672.467 308.411 672.088 cv
308.584 672.077 308.76 672.073 308.936 672.073 cv
309.213 672.073 309.49 672.084 309.763 672.102 cv
309.891 672.109 310.02 672.113 310.148 672.113 cv
311.682 672.113 313.165 671.527 314.286 670.465 cv
315.5 669.313 316.179 667.71 316.163 666.036 cv
315.894 639.521 337.049 617.225 364.326 615.274 cv
365.609 615.184 366.909 615.136 368.19 615.136 cv
395.117 615.136 417.672 635.583 419.539 661.685 cv
420.494 675.037 416.041 687.98 407.001 698.131 cv
397.922 708.327 385.31 714.487 371.49 715.476 cv
370.207 715.567 368.907 715.616 367.63 715.616 cv
367.628 715.616 li
cp
.281714 .63 .86 .149143 cmyk
f
313.836 681.032 mo
314.251 686.843 315.741 691.472 309.825 691.895 cv
303.909 692.319 298.777 687.948 298.362 682.136 cv
297.947 676.326 302.407 671.271 308.322 670.849 cv
314.237 670.425 313.419 675.22 313.836 681.032 cv
cp
0 .3 .5 0 cmyk
f
353.586 711.278 mo
365.069 703.243 384.935 699.539 391.633 716.271 cv
397.204 730.188 384.716 741.997 374.645 748.604 cv
363.387 755.988 352.876 764.04 339.454 763.603 cv
328.267 763.237 311.87 754.008 315.792 739.309 cv
317.787 731.832 325.913 730.639 331.681 727.408 cv
339.524 723.013 346.198 716.449 353.586 711.278 cv
cp
.281714 .63 .86 .149143 cmyk
f
425.66 665.836 mo
425.334 694.854 402.166 719.315 371.917 721.477 cv
353.987 722.76 337.401 715.934 325.938 704.188 cv
323.372 693.143 324.81 681.399 333.971 673.98 cv
324.492 657.326 332.538 634.812 354.971 639.059 cv
359.817 639.976 364.093 642.717 367.937 645.7 cv
372.661 636.422 383.37 627.474 394.641 630.515 cv
394.641 630.515 410.528 634.134 408.272 652.749 cv
408.272 652.749 423.684 651.854 425.66 665.836 cv
cp
0 .3 .5 0 cmyk
f
379.515 668.189 mo
380.073 670.467 377.411 673.076 373.569 674.02 cv
369.727 674.963 366.157 673.878 365.6 671.602 cv
365.044 669.325 367.706 666.715 371.547 665.772 cv
375.389 664.831 378.957 665.913 379.515 668.189 cv
cp
.34 .71 .89 .18 cmyk
f
383.902 702.737 mo
378.315 704.693 372.847 704.974 368.14 704.534 cv
356.063 703.398 346.626 697.275 346.229 697.015 cv
343.216 695.036 342.072 690.868 343.668 687.708 cv
345.263 684.556 348.987 683.595 351.996 685.558 cv
352.156 685.661 359.588 690.376 368.713 691.113 cv
380.295 692.049 389.475 686.176 396.005 673.659 cv
397.639 670.526 401.389 669.62 404.383 671.639 cv
407.375 673.658 408.472 677.837 406.838 680.972 cv
400.239 693.618 391.949 699.918 383.902 702.737 cv
cp
0 0 0 0 cmyk
f
341.276 668.078 mo
340.271 667.74 li
340.348 667.51 342.218 662.084 346.291 661.229 cv
348.798 660.708 351.518 662.033 354.379 665.182 cv
353.595 665.895 li
351.005 663.046 348.62 661.823 346.51 662.267 cv
343.023 662.999 341.293 668.027 341.276 668.078 cv
cp
.4 .7 1 .5 cmyk
f
385.633 658.786 mo
384.582 658.638 li
385.175 654.426 386.675 651.796 389.042 650.819 cv
392.886 649.23 397.486 652.661 397.683 652.809 cv
397.042 653.654 li
397.001 653.622 392.729 650.446 389.443 651.803 cv
387.451 652.626 386.169 654.976 385.633 658.786 cv
cp
f
333.838 739.979 mo
333.175 731.692 325.46 731.696 322.328 735.882 cv
319.4 739.794 321.066 748.231 324.614 750.866 cv
340.425 762.6 357.325 739.502 344.114 734.677 cv
337.195 732.149 335.329 735.629 333.963 739.855 cv
333.838 739.979 li
cp
0 .580556 .122222 0 cmyk
f
413.446 659.018 mo
413.943 660.863 408.691 663.888 401.706 665.772 cv
394.726 667.656 388.664 667.689 388.166 665.843 cv
387.667 663.999 392.92 660.974 399.905 659.089 cv
406.885 657.206 412.948 657.175 413.446 659.018 cv
cp
level3{
gsave
clp
[10.021 -1.228 -1.228 5.80401 400.805 662.43 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.021 -1.228 -1.228 5.80401 400.805 662.43 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
357.648 672.995 mo
357.963 674.879 352.443 677.379 345.309 678.579 cv
338.179 679.777 332.143 679.224 331.826 677.338 cv
331.51 675.454 337.03 672.952 344.164 671.752 cv
351.295 670.554 357.33 671.109 357.648 672.995 cv
cp
level3{
gsave
clp
[10.0916 -.251155 -1.78435 5.65727 344.739 675.167 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.0916 -.251155 -1.78435 5.65727 344.739 675.167 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
69.3179 584.986 mo
82.5513 588.903 82.9248 559.612 75.6294 551.525 cv
72.606 548.174 65.981 540.415 61.5122 542.803 cv
57.4971 544.948 57.2905 553.184 57.3408 558.008 cv
57.4468 568.614 60.9248 582.5 69.3179 584.986 cv
cp
.361111 .828704 1 .268519 cmyk
f
62.7598 506.311 mo
72.1289 510.601 64.501 521.123 62.6748 528.034 cv
60.8774 534.836 66.1152 541.737 62.6143 548.242 cv
58.8804 555.172 50.208 555.036 44.833 550.908 cv
38.1826 545.8 36.5903 537.159 47.1553 538.885 cv
38.6538 536.985 41.9941 522.102 43.2651 518.706 cv
45.9038 511.655 55.9629 503.195 62.7598 506.311 cv
cp
f
54.5825 546.424 mo
60.2378 561.132 74.6167 571.307 90.2231 572.293 cv
103.776 573.153 126.291 571.238 128.752 557.487 cv
130.856 545.726 132.904 529.652 122.173 520.346 cv
108.014 508.064 90.6445 504.732 72.8599 509.878 cv
57.9458 514.195 48.8682 531.559 54.5825 546.424 cv
cp
.34 .71 .89 .18 cmyk
f
95.811 566.452 mo
94.0571 566.452 92.3042 566.396 90.605 566.289 cv
77.1558 565.439 64.9365 556.586 60.1987 544.265 cv
58.1289 538.879 58.5161 532.622 61.2607 527.098 cv
64.062 521.457 68.8999 517.287 74.5327 515.659 cv
79.3311 514.27 84.1064 513.565 88.728 513.565 cv
99.6401 513.565 109.566 517.375 118.23 524.89 cv
126.023 531.647 125.046 544.043 122.829 556.429 cv
121.506 563.826 107.448 566.452 95.8125 566.452 cv
95.811 566.452 li
cp
.281714 .63 .86 .149143 cmyk
f
83.0376 531.018 mo
88.3618 537.878 90.6665 546.689 90.3125 555.21 cv
90.1343 559.543 90.1807 566.605 88.5869 572.129 cv
73.6196 570.561 60.04 560.613 54.5825 546.424 cv
51.3921 538.122 52.8184 529.043 57.2925 521.889 cv
57.9326 521.751 58.5874 521.626 59.2734 521.527 cv
68.5923 520.229 77.3125 523.634 83.0376 531.018 cv
cp
0 .3 .5 0 cmyk
f
151.07 526.937 mo
155.17 515.138 168.332 488.303 185.185 498.808 cv
190.066 501.849 197.936 513.404 193.019 519.011 cv
188.465 524.199 182.833 514.627 179.482 511.936 cv
166.251 501.318 161.656 538.843 157.955 546.959 cv
150.793 562.646 136.547 574.749 119.352 565.915 cv
117.255 564.835 115.24 563.565 113.247 562.308 cv
118.934 552.674 130.43 560.645 138.73 552.645 cv
145.456 546.161 148.106 535.469 151.07 526.937 cv
cp
.361111 .828704 1 .268519 cmyk
f
126.941 576.161 mo
130.919 583.104 115.821 588.846 111.154 589.021 cv
103.294 589.313 88.2065 582.495 87.3755 572.625 cv
86.73 564.999 91.022 556.755 100.83 552.302 cv
106.497 549.729 123.344 550.937 123.6 557.705 cv
123.764 562.08 117.124 562.857 120.887 567.425 cv
123.414 570.49 124.521 571.938 126.941 576.161 cv
cp
.382023 .8 1 .202247 cmyk
f
120.378 515.975 mo
110.237 517.804 115.013 529.89 115.066 537.041 cv
115.119 544.076 108.332 549.458 110.108 556.63 cv
112.004 564.268 120.438 566.291 126.671 563.628 cv
134.381 560.329 138.068 552.353 127.407 551.402 cv
136.114 551.676 136.572 536.429 136.184 532.822 cv
135.378 525.339 127.737 514.645 120.378 515.975 cv
cp
.361111 .828704 1 .268519 cmyk
f
68.4092 553.337 mo
68.3174 554.7 69.3491 555.881 70.7139 555.974 cv
72.0781 556.064 73.2578 555.034 73.3506 553.669 cv
73.4424 552.304 72.4111 551.125 71.0469 551.031 cv
69.6826 550.938 68.502 551.972 68.4092 553.337 cv
cp
0 .05 .32 0 cmyk
f
155.968 433.463 mo
153.173 433.889 150.685 435.055 148.648 436.708 cv
137.362 418.7 115.382 407.772 91.6016 410.521 cv
68.2544 413.218 49.6025 428.357 42.4194 447.936 cv
40.5879 447.354 38.6138 447.105 36.5742 447.265 cv
28.248 447.922 22.021 455.084 22.665 463.265 cv
23.3086 471.445 30.5811 477.543 38.9077 476.889 cv
39.4121 476.849 39.9097 476.783 40.3975 476.695 cv
46.3076 504.124 73.7832 522.97 104.194 519.455 cv
134.733 515.924 157.242 491.113 156.542 462.919 cv
157.817 463.049 159.125 463.04 160.453 462.837 cv
168.71 461.577 174.399 453.979 173.16 445.868 cv
171.921 437.756 164.223 432.202 155.968 433.463 cv
cp
.34 .71 .89 .18 cmyk
f
96.9082 513.859 mo
72.3691 513.859 51.0771 497.695 46.2788 475.429 cv
45.6719 472.616 43.186 470.678 40.4033 470.678 cv
40.0522 470.678 39.6973 470.709 39.3389 470.774 cv
39.0356 470.828 38.728 470.867 38.4268 470.891 cv
38.1826 470.909 37.9341 470.92 37.6836 470.92 cv
32.9844 470.92 29.021 467.349 28.6641 462.792 cv
28.4795 460.458 29.2358 458.184 30.7959 456.392 cv
32.3818 454.567 34.6011 453.457 37.0459 453.264 cv
37.2954 453.244 37.542 453.234 37.7861 453.234 cv
38.7402 453.234 39.6865 453.382 40.5981 453.671 cv
41.2017 453.862 41.8164 453.953 42.4204 453.953 cv
44.8799 453.953 47.1768 452.435 48.0674 450.01 cv
54.6777 431.992 72.0366 418.837 92.2915 416.495 cv
94.4814 416.243 96.6987 416.114 98.8848 416.114 cv
117.239 416.114 134.353 425.23 143.549 439.903 cv
144.464 441.364 145.963 442.361 147.661 442.644 cv
147.99 442.696 148.32 442.725 148.648 442.725 cv
150.018 442.725 151.358 442.256 152.438 441.381 cv
153.739 440.325 155.233 439.662 156.876 439.411 cv
157.352 439.339 157.835 439.302 158.31 439.302 cv
162.735 439.302 166.562 442.514 167.213 446.775 cv
167.949 451.596 164.51 456.133 159.545 456.891 cv
159.119 456.955 158.669 456.989 158.216 456.989 cv
157.874 456.989 157.52 456.969 157.161 456.933 cv
156.955 456.911 156.747 456.901 156.542 456.901 cv
155.036 456.901 153.576 457.467 152.458 458.5 cv
151.188 459.675 150.485 461.339 150.529 463.067 cv
151.15 488.215 130.495 510.358 103.504 513.477 cv
101.313 513.731 99.0928 513.859 96.9082 513.859 cv
cp
.281714 .63 .86 .149143 cmyk
f
154.143 479.822 mo
152.267 473.428 148.2 468.016 141.632 466.291 cv
142.837 460.855 143.257 455.277 141.362 449.927 cv
132.693 425.422 101.439 430.499 97.8052 454.937 cv
94.8496 449.995 92.6235 445.197 87.7847 442.182 cv
65.9097 428.542 43.0259 452.374 57.085 474.09 cv
53.8188 479 50.9263 484.361 50.9126 490.521 cv
50.9053 494.288 51.5581 497.656 52.7358 500.674 cv
64.8809 514.171 83.8809 521.801 104.194 519.455 cv
128.416 516.653 147.593 500.468 154.143 479.822 cv
cp
0 .3 .5 0 cmyk
f
143.518 471.388 mo
143.846 473.27 138.343 475.809 131.216 477.057 cv
124.096 478.305 118.055 477.791 117.726 475.909 cv
117.396 474.026 122.9 471.486 130.024 470.237 cv
137.148 468.992 143.188 469.506 143.518 471.388 cv
cp
level3{
gsave
clp
[10.0906 -.320119 -1.74615 5.66912 130.621 473.647 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.0906 -.320119 -1.74615 5.66912 130.621 473.647 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
81.4648 481.108 mo
81.6084 483.014 75.8833 485.005 68.6714 485.56 cv
61.4619 486.109 55.5015 485.014 55.355 483.106 cv
55.21 481.201 60.9326 479.21 68.146 478.656 cv
75.3555 478.105 81.3184 479.201 81.4648 481.108 cv
cp
level3{
gsave
clp
[10.0747 .659422 -2.28746 5.47402 68.4092 482.107 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.0747 .659422 -2.28746 5.47402 68.4092 482.107 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
126.86 460.396 mo
127.263 463.888 125.77 466.93 123.525 467.189 cv
121.278 467.449 119.129 464.829 118.726 461.334 cv
118.322 457.842 119.816 454.799 122.061 454.54 cv
124.309 454.279 126.456 456.901 126.86 460.396 cv
cp
.4 .65 .9 .35 cmyk
f
168.037 447.039 mo
168.963 452.88 164.448 458.452 157.955 459.481 cv
151.46 460.514 156.445 456.277 155.516 450.436 cv
154.589 444.593 148.103 439.358 154.596 438.326 cv
161.091 437.295 167.108 441.196 168.037 447.039 cv
cp
0 .3 .5 0 cmyk
f
26.5151 462.641 mo
26.979 468.536 32.6719 472.897 39.2266 472.384 cv
45.7808 471.866 39.9644 467.043 39.4985 461.146 cv
39.0356 455.249 44.0991 450.514 37.5444 451.029 cv
30.9893 451.545 26.0503 456.744 26.5151 462.641 cv
cp
f
104.709 470.777 mo
105.039 473.1 102.129 475.431 98.2134 475.986 cv
94.2959 476.542 90.8521 475.109 90.5239 472.788 cv
90.1958 470.469 93.104 468.135 97.0215 467.579 cv
100.938 467.024 104.38 468.456 104.709 470.777 cv
cp
.34 .71 .89 .18 cmyk
f
107.542 486.46 mo
107.542 486.46 117.628 496.563 104.333 500.104 cv
104.333 500.104 95.7397 501.771 98.9136 488.834 cv
98.9136 488.834 107.522 486.814 107.542 486.46 cv
cp
0 .580556 .122222 0 cmyk
f
93.2886 489.368 mo
88.8896 489.368 84.7085 488.501 81.415 486.222 cv
82.019 485.348 li
90.6523 491.326 107.066 486.949 115.992 482.551 cv
116.463 483.504 li
111.257 486.068 101.864 489.368 93.2886 489.368 cv
cp
.4 .7 1 .5 cmyk
f
104.411 495.073 mo
103.383 494.811 li
103.875 492.884 103.247 488.751 102.753 487.691 cv
103.714 487.242 li
104.289 488.473 104.973 492.873 104.411 495.073 cv
cp
f
77.5479 467.603 mo
77.8726 470.425 76.6431 472.88 74.7993 473.092 cv
72.9536 473.307 71.1953 471.197 70.8701 468.376 cv
70.543 465.558 71.7744 463.101 73.6187 462.888 cv
75.4614 462.675 77.2202 464.783 77.5479 467.603 cv
cp
.4 .65 .9 .35 cmyk
f
374.189 444.43 mo
374.461 449.509 374.175 454.333 373.682 459.225 cv
373.17 464.092 372.372 468.921 371.318 473.689 cv
369.208 483.226 366.064 492.53 361.971 501.396 cv
353.804 519.156 341.713 535.02 327.139 547.941 cv
312.571 560.912 295.675 571.016 277.91 578.726 cv
260.116 586.447 241.437 591.858 222.52 595.681 cv
221.13 595.962 219.777 595.064 219.497 593.675 cv
219.229 592.348 220.037 591.054 221.321 590.696 cv
221.503 590.646 li
223.801 590.013 226.09 589.356 228.37 588.675 cv
230.654 588.021 232.936 587.365 235.204 586.673 cv
239.741 585.288 244.238 583.803 248.683 582.202 cv
257.603 579.098 266.337 575.574 274.833 571.643 cv
283.292 567.637 291.56 563.29 299.364 558.262 cv
307.187 553.271 314.664 547.786 321.502 541.607 cv
328.396 535.496 334.732 528.782 340.302 521.48 cv
343.124 517.856 345.761 514.088 348.19 510.187 cv
350.605 506.277 352.845 502.256 354.913 498.139 cv
356.972 494.016 358.777 489.765 360.419 485.441 cv
362.072 481.125 363.489 476.707 364.679 472.221 cv
365.928 467.749 366.94 463.195 367.68 458.595 cv
368.051 456.295 368.348 453.983 368.574 451.668 cv
368.833 449.371 369.03 447.001 369.065 444.786 cv
369.07 444.526 li
369.092 443.11 370.256 441.981 371.67 442.005 cv
373.022 442.024 374.115 443.099 374.189 444.43 cv
cp
.29 .1 1 .1 cmyk
f
248.274 582.139 mo
248.274 582.139 232.352 589.549 231.818 563.359 cv
231.818 563.359 255.619 565.996 248.274 582.139 cv
cp
.66 .1 1 .1 cmyk
f
352.073 512.526 mo
352.073 512.526 335.423 514.611 342.585 490.629 cv
342.585 490.629 363.472 499.982 352.073 512.526 cv
cp
f
241.618 588.707 mo
241.618 588.707 215.762 586.888 228.828 623.273 cv
228.828 623.273 260.252 607.093 241.618 588.707 cv
cp
.46 .1 1 .1 cmyk
f
273.658 579.576 mo
273.658 579.576 253.087 583.128 270.304 609.075 cv
270.304 609.075 291.771 590.376 273.658 579.576 cv
cp
.66 .1 1 .1 cmyk
f
372.569 461.867 mo
372.569 461.867 370.413 436.039 406.971 448.628 cv
406.971 448.628 391.199 480.264 372.569 461.867 cv
cp
.46 .1 1 .1 cmyk
f
327.594 539.304 mo
327.594 539.304 335.856 523.296 352.74 544.201 cv
352.74 544.201 331.774 557.011 327.594 539.304 cv
cp
.66 .1 1 .1 cmyk
f
355.916 543.75 mo
368.156 526.527 353.116 500.638 369.397 486.009 cv
373.605 482.229 384.241 478.209 384.616 486.915 cv
384.911 493.725 375.28 501.315 372.564 507.354 cv
368.664 516.017 370.692 526.263 369.574 535.393 cv
368.364 545.281 362.5 553.517 355.406 560.501 cv
342.232 573.467 317.761 578.839 304.787 562.511 cv
303.499 560.887 302.217 559.261 301.052 557.546 cv
309.344 550.148 319.002 562.015 330.128 561.145 cv
341.098 560.286 349.833 552.31 355.916 543.75 cv
cp
.361111 .828704 1 .268519 cmyk
f
338.258 479.972 mo
238.352 494.443 li
202.505 531.491 254.451 536.912 254.451 536.912 cv
249.642 546.9 250.561 559.217 250.798 565.482 cv
250.762 565.488 250.721 565.475 250.681 565.468 cv
248.498 561.08 247.504 554.859 246.2 552.394 cv
245.08 550.279 242.308 545.319 238.291 546.637 cv
234.39 547.917 234.776 550.452 234.885 553.094 cv
232.361 547.923 223.472 549.564 225.367 556.552 cv
225.146 556.759 215.909 553.279 219.527 563.157 cv
220.17 564.916 234.237 585.191 245.492 583.169 cv
249.467 582.455 251.727 578.642 253.981 577.155 cv
264.6 583.202 284.256 584.772 284.256 584.772 cv
341.634 592.78 325.224 535.808 325.224 535.808 cv
384.828 507.239 338.258 479.972 338.258 479.972 cv
cp
.34 .71 .89 .18 cmyk
f
294.628 579.529 mo
291.688 579.526 288.478 579.288 285.088 578.813 cv
284.97 578.8 284.855 578.785 284.737 578.776 cv
279.632 578.364 264.687 576.328 256.959 571.927 cv
256.035 571.4 255.006 571.139 253.982 571.139 cv
252.825 571.139 251.672 571.473 250.669 572.133 cv
249.431 572.948 248.437 573.938 247.474 574.894 cv
246.438 575.927 245.261 577.098 244.429 577.246 cv
244.254 577.278 244.068 577.296 243.873 577.296 cv
238.378 577.296 229.658 567.466 226.182 562.516 cv
227.401 562.34 228.566 561.795 229.47 560.953 cv
230.37 560.112 230.974 559.035 231.236 557.877 cv
232.275 558.669 233.556 559.111 234.885 559.111 cv
235.374 559.111 235.869 559.051 236.362 558.926 cv
238.469 558.395 240.071 556.79 240.658 554.793 cv
240.73 554.924 240.805 555.063 240.883 555.207 cv
241.171 555.764 241.708 557.667 242.099 559.062 cv
242.872 561.802 243.833 565.211 245.293 568.147 cv
246.128 569.822 247.69 571.013 249.521 571.371 cv
249.915 571.451 250.379 571.499 250.777 571.499 cv
251.133 571.499 251.489 571.469 251.839 571.408 cv
254.802 570.886 256.925 568.26 256.81 565.255 cv
256.75 563.826 li
256.491 557.701 256.054 547.452 259.872 539.521 cv
260.723 537.758 260.661 535.688 259.706 533.979 cv
258.751 532.27 257.023 531.131 255.076 530.928 cv
250.002 530.383 234.884 527.145 232.184 519.688 cv
230.545 515.165 233.771 508.248 241.286 500.098 cv
336.895 486.248 li
341.656 489.553 349.9 496.991 349.546 505.024 cv
349.181 513.346 339.872 522.115 322.625 530.383 cv
319.975 531.651 318.63 534.649 319.443 537.474 cv
319.501 537.677 325.428 559.027 316.349 571.045 cv
312.098 576.675 304.792 579.529 294.634 579.529 cv
294.634 579.529 294.63 579.529 294.628 579.529 cv
cp
.281714 .63 .86 .149143 cmyk
f
263.008 549.271 mo
263.801 566.639 276.22 580.185 290.746 579.521 cv
305.271 578.857 316.404 564.238 315.613 546.869 cv
314.82 529.499 302.402 515.956 287.874 516.618 cv
273.35 517.28 262.216 531.901 263.008 549.271 cv
cp
0 .3 .5 0 cmyk
f
296.678 548.536 mo
285.329 548.555 276.084 558.37 272.966 567.289 cv
264.531 591.414 294.02 594.917 311.86 585.035 cv
319.179 580.982 324.855 572.532 322.299 564.068 cv
318.93 552.909 305.48 548.519 296.678 548.536 cv
cp
.349315 .729452 .914384 .184932 cmyk
f
278.32 546.455 mo
275.063 543.922 270.654 545.66 270.12 550.117 cv
269.237 542.4 259.808 542.439 260.893 551.408 cv
260.927 551.696 260.712 552.358 260.914 551.386 cv
257.774 544.74 251.163 544.795 249.342 551.056 cv
247.284 558.149 250.51 565.403 251.819 572.282 cv
253.197 579.517 255.104 588.038 264.02 589.199 cv
271.455 590.164 276.231 585.53 278.634 579.133 cv
281.387 571.805 286.327 552.679 278.32 546.455 cv
cp
.363612 .759307 .951807 .1925 cmyk
f
363.454 471.781 mo
362.845 479.665 355.846 485.552 347.821 484.932 cv
339.797 484.313 333.787 477.419 334.396 469.534 cv
335.005 461.649 342.005 455.763 350.029 456.382 cv
358.054 457.004 364.064 463.897 363.454 471.781 cv
cp
.34 .71 .89 .18 cmyk
f
357.596 471.969 mo
357.156 477.653 351.678 481.862 345.36 481.375 cv
339.042 480.886 334.278 475.884 334.716 470.201 cv
335.156 464.518 340.633 460.307 346.951 460.794 cv
353.269 461.283 358.035 466.286 357.596 471.969 cv
cp
0 .3 .5 0 cmyk
f
350.816 442.444 mo
321.921 441.208 li
319.246 452.646 li
350.816 442.444 li
cp
0 .97 1 0 cmyk
f
229.713 461.407 mo
241.451 453.743 li
239.006 465.777 li
229.713 461.407 li
cp
f
293.238 418.146 mo
262.592 415.775 235.745 437.138 231.672 466.39 cv
230.974 466.238 230.264 466.116 229.531 466.06 cv
220.943 465.397 213.454 471.697 212.802 480.135 cv
212.149 488.569 218.582 495.949 227.168 496.611 cv
230.092 496.838 232.88 496.241 235.323 495.043 cv
243.297 514.29 261.908 528.548 284.568 530.3 cv
316.383 532.761 344.117 509.647 346.512 478.677 cv
348.904 447.706 325.055 420.604 293.238 418.146 cv
cp
.34 .71 .89 .18 cmyk
f
289.207 524.464 mo
287.821 524.464 286.417 524.408 285.031 524.302 cv
265.23 522.771 248.313 510.677 240.88 492.739 cv
240.246 491.205 239.001 490.003 237.447 489.415 cv
236.762 489.156 236.042 489.028 235.323 489.028 cv
234.412 489.028 233.507 489.233 232.673 489.643 cv
231.32 490.307 229.877 490.643 228.388 490.643 cv
228.137 490.643 227.885 490.635 227.632 490.614 cv
225.062 490.414 222.726 489.25 221.056 487.335 cv
219.41 485.449 218.611 483.057 218.799 480.598 cv
219.172 475.791 223.34 472.027 228.292 472.027 cv
228.55 472.027 228.809 472.037 229.068 472.058 cv
229.44 472.088 229.866 472.154 230.406 472.271 cv
230.826 472.361 231.25 472.404 231.672 472.404 cv
232.895 472.404 234.101 472.031 235.12 471.318 cv
236.489 470.36 237.4 468.875 237.63 467.219 cv
241.062 442.569 262.974 423.981 288.6 423.981 cv
289.983 423.981 291.388 424.036 292.774 424.144 cv
321.232 426.342 342.647 450.598 340.512 478.212 cv
338.507 504.149 315.973 524.464 289.21 524.464 cv
289.207 524.464 li
cp
.281714 .63 .86 .149143 cmyk
f
233.11 481.705 mo
232.661 487.513 233.449 492.313 227.535 491.855 cv
221.624 491.398 217.193 486.316 217.643 480.507 cv
218.093 474.699 223.25 470.36 229.162 470.817 cv
235.076 471.276 233.557 475.894 233.11 481.705 cv
cp
0 .3 .5 0 cmyk
f
345.952 483.222 mo
341.334 511.875 314.801 532.638 284.568 530.3 cv
266.646 528.916 251.252 519.707 241.652 506.397 cv
240.749 495.093 243.908 483.693 254.067 477.711 cv
247.157 459.838 258.446 438.763 280.005 446.281 cv
284.661 447.906 288.484 451.249 291.843 454.769 cv
297.888 446.29 309.803 439.025 320.501 443.703 cv
320.501 443.703 335.679 449.632 330.69 467.707 cv
330.69 467.707 346.067 469.103 345.952 483.222 cv
cp
f
268.635 494.809 mo
268.635 494.809 294.256 484.994 319.048 489.988 cv
319.048 489.988 318.657 515.835 293.958 517.77 cv
293.958 517.77 271.123 519.619 268.635 494.809 cv
cp
0 0 0 0 cmyk
f
278.854 474.561 mo
278.908 478.515 277.119 481.744 274.859 481.775 cv
272.602 481.805 270.728 478.626 270.674 474.672 cv
270.62 470.719 272.411 467.489 274.668 467.458 cv
276.926 467.428 278.8 470.606 278.854 474.561 cv
cp
f
1.06123 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
278.854 474.561 mo
278.908 478.515 277.119 481.744 274.859 481.775 cv
272.602 481.805 270.728 478.626 270.674 474.672 cv
270.62 470.719 272.411 467.489 274.668 467.458 cv
276.926 467.428 278.8 470.606 278.854 474.561 cv
cp
0 0 0 1 cmyk
@
321.662 472.242 mo
321.716 476.194 319.925 479.424 317.668 479.454 cv
315.408 479.486 313.536 476.307 313.482 472.352 cv
313.428 468.398 315.217 465.169 317.476 465.138 cv
319.734 465.108 321.608 468.289 321.662 472.242 cv
cp
0 0 0 0 cmyk
f
321.662 472.242 mo
321.716 476.194 319.925 479.424 317.668 479.454 cv
315.408 479.486 313.536 476.307 313.482 472.352 cv
313.428 468.398 315.217 465.169 317.476 465.138 cv
319.734 465.108 321.608 468.289 321.662 472.242 cv
cp
0 0 0 1 cmyk
@
229.713 461.407 mo
350.816 442.444 li
350.816 442.444 355.212 448.845 347.536 457.105 cv
339.86 465.364 342.458 460.095 341.409 472.644 cv
340.36 485.191 335.485 493.166 318.398 494.767 cv
300.74 496.421 296.743 475.771 293.943 471.554 cv
289.663 465.097 287.615 476.678 287.615 476.678 cv
287.615 476.678 284.401 500.888 267.42 501.294 cv
250.438 501.699 244.842 491.233 242.546 481.856 cv
240.248 472.479 242.229 476.568 235.37 472.578 cv
235.37 472.578 228.763 469.076 229.713 461.407 cv
cp
0 .76 .85 0 cmyk
f
239.006 465.777 mo
239.211 467.118 238.333 468.365 237.042 468.564 cv
235.75 468.764 234.534 467.839 234.33 466.498 cv
234.12 465.156 235.002 463.908 236.294 463.712 cv
237.585 463.511 238.799 464.438 239.006 465.777 cv
cp
.44 .12 0 0 cmyk
f
346.51 449.713 mo
346.715 451.054 345.836 452.301 344.544 452.5 cv
343.252 452.697 342.038 451.772 341.833 450.432 cv
341.625 449.096 342.505 447.844 343.797 447.645 cv
345.089 447.445 346.303 448.369 346.51 449.713 cv
cp
f
243.833 466.833 mo
283.165 460.772 li
283.165 460.772 288.563 489.137 267.168 493.423 cv
267.168 493.423 247.64 497.364 243.833 466.833 cv
cp
f
249.728 484.875 mo
259.506 464.421 li
254.421 465.201 li
247.234 480.237 li
247.997 482.004 248.836 483.54 249.728 484.875 cv
cp
.567 .154636 0 0 cmyk
f
243.833 466.833 mo
244.137 469.269 244.542 471.481 245.027 473.501 cv
248.563 466.103 li
243.833 466.833 li
cp
f
265.137 463.553 mo
253.059 488.82 li
254.21 489.887 255.39 490.72 256.549 491.371 cv
270.219 462.769 li
265.137 463.553 li
cp
f
260.914 493.092 mo
262.7 493.531 264.268 493.613 265.383 493.586 cv
280.9 461.125 li
275.818 461.904 li
260.914 493.092 li
cp
f
278.385 486.899 mo
282.669 477.937 li
283.772 473.573 283.873 469.166 283.709 465.905 cv
271.118 492.251 li
274.222 490.989 276.589 489.118 278.385 486.899 cv
cp
f
297.956 458.872 mo
337.288 452.813 li
337.288 452.813 342.686 481.173 321.291 485.463 cv
321.291 485.463 301.763 489.4 297.956 458.872 cv
cp
.44 .12 0 0 cmyk
f
303.851 476.913 mo
313.628 456.459 li
308.544 457.238 li
301.357 472.275 li
302.119 474.04 302.959 475.577 303.851 476.913 cv
cp
.567 .154636 0 0 cmyk
f
297.956 458.872 mo
298.26 461.307 298.665 463.521 299.149 465.538 cv
302.685 458.143 li
297.956 458.872 li
cp
f
319.259 455.591 mo
307.182 480.857 li
308.333 481.923 309.512 482.759 310.671 483.409 cv
324.341 454.806 li
319.259 455.591 li
cp
f
315.037 485.129 mo
316.823 485.567 318.39 485.651 319.506 485.625 cv
335.022 453.162 li
329.939 453.943 li
315.037 485.129 li
cp
f
332.507 478.936 mo
336.792 469.976 li
337.895 465.61 337.996 461.201 337.832 457.943 cv
325.24 484.288 li
328.345 483.027 330.712 481.156 332.507 478.936 cv
cp
f
299.536 480.392 mo
299.826 482.719 296.879 485.002 292.953 485.492 cv
289.026 485.98 285.607 484.49 285.318 482.164 cv
285.029 479.839 287.976 477.555 291.901 477.066 cv
295.828 476.576 299.244 478.066 299.536 480.392 cv
cp
.34 .71 .89 .18 cmyk
f
155.516 108.582 mo
156.148 105.503 155.266 104.336 153.339 101.839 cv
159.559 98.6016 158.688 89.5293 152.113 86.7876 cv
144.489 83.6128 133.526 98.4053 127.785 102.373 cv
123.535 105.311 119.374 108.004 115.906 111.884 cv
122.08 120.143 123.437 131.121 135.58 125.63 cv
142.431 122.535 153.807 116.911 155.516 108.582 cv
cp
.361111 .828704 1 .268519 cmyk
f
39.1401 103.55 mo
42.4082 106.294 44.3726 115.517 49.7446 109.51 cv
59.7065 98.3711 41.0322 88.0093 29.2407 91.6338 cv
15.8721 95.7412 12.9106 112.518 17.2539 123.378 cv
21.2656 133.41 28.2266 140.13 37.6577 144.347 cv
50.7725 150.21 66.2266 145.782 78.6455 139.615 cv
77.9727 136.812 77.1816 133.969 76.4438 131.154 cv
59.7974 135.76 34.6567 141.363 25.7993 121.19 cv
21.9111 112.338 26.8228 93.2056 39.1401 103.55 cv
cp
f
127.269 176.561 mo
114.034 180.479 113.663 151.187 120.958 143.099 cv
123.98 139.748 130.605 131.989 135.075 134.377 cv
139.088 136.523 139.296 144.757 139.247 149.583 cv
139.139 160.188 135.663 174.077 127.269 176.561 cv
cp
f
142.003 137.999 mo
136.349 152.706 121.97 162.882 106.364 163.868 cv
92.811 164.728 70.2949 162.813 67.8354 149.062 cv
65.73 137.3 63.6821 121.226 74.4136 111.919 cv
88.5732 99.6387 105.941 96.3071 123.726 101.452 cv
138.641 105.769 147.718 123.132 142.003 137.999 cv
cp
.34 .71 .89 .18 cmyk
f
100.772 158.026 mo
89.1372 158.026 75.082 155.401 73.7563 148.002 cv
71.542 135.615 70.5649 123.222 78.3545 116.464 cv
87.021 108.95 96.9463 105.139 107.858 105.139 cv
112.479 105.139 117.256 105.843 122.055 107.231 cv
127.687 108.861 132.523 113.032 135.327 118.671 cv
138.072 124.196 138.458 130.454 136.388 135.838 cv
131.65 148.163 119.432 157.014 105.983 157.863 cv
104.28 157.971 102.528 158.026 100.772 158.026 cv
cp
.281714 .63 .86 .149143 cmyk
f
113.549 122.592 mo
108.225 129.452 105.92 138.263 106.273 146.785 cv
106.451 151.119 106.406 158.18 108 163.704 cv
122.966 162.134 136.545 152.188 142.003 137.999 cv
145.194 129.696 143.77 120.615 139.293 113.463 cv
138.653 113.325 137.998 113.199 137.313 113.104 cv
127.995 111.803 119.275 115.208 113.549 122.592 cv
cp
0 .3 .5 0 cmyk
f
69.6445 165.611 mo
65.6675 172.555 80.7661 178.296 85.4307 178.469 cv
93.293 178.762 108.38 171.944 109.212 162.075 cv
109.855 154.45 105.566 146.204 95.7563 141.752 cv
90.0894 139.18 73.2432 140.386 72.9868 147.156 cv
72.8232 151.529 79.4629 152.308 75.6997 156.875 cv
73.1729 159.941 72.0654 161.387 69.6445 165.611 cv
cp
.382023 .797753 1 .202247 cmyk
f
76.2095 107.549 mo
86.3491 109.379 81.5723 121.463 81.5195 128.616 cv
81.4663 135.65 88.2544 141.033 86.4771 148.204 cv
84.5825 155.842 76.1494 157.865 69.917 155.202 cv
62.2065 151.903 58.5176 143.929 69.1816 142.977 cv
60.4727 143.251 60.0132 128.004 60.4023 124.397 cv
61.2065 116.911 68.8496 106.219 76.2095 107.549 cv
cp
.361111 .828704 1 .268519 cmyk
f
128.178 144.911 mo
128.269 146.275 127.236 147.455 125.873 147.547 cv
124.507 147.638 123.327 146.608 123.236 145.243 cv
123.144 143.878 124.175 142.699 125.54 142.606 cv
126.904 142.512 128.084 143.546 128.178 144.911 cv
cp
0 .05 .32 0 cmyk
f
157.603 27.4121 mo
154.825 27.9365 152.379 29.188 150.401 30.9126 cv
138.489 13.312 116.139 3.16162 92.4697 6.74561 cv
69.2319 10.2642 51.1226 26.0498 44.6323 45.8687 cv
42.7822 45.3516 40.8003 45.1724 38.7666 45.4038 cv
30.4702 46.3525 24.498 53.728 25.4307 61.8823 cv
26.3608 70.0352 33.8433 75.8755 42.1411 74.9258 cv
42.6445 74.8677 43.1387 74.7856 43.623 74.6812 cv
50.4951 101.884 78.6162 119.753 108.885 115.171 cv
139.282 110.568 160.901 84.9819 159.213 56.8276 cv
160.491 56.9141 161.8 56.8589 163.119 56.6104 cv
171.326 55.0605 176.745 47.2666 175.22 39.2031 cv
173.697 31.1406 165.809 25.8618 157.603 27.4121 cv
cp
.34 .71 .89 .18 cmyk
f
99.417 109.87 mo
75.4531 109.87 54.9102 94.7935 49.4565 73.2085 cv
48.769 70.4902 46.3267 68.6636 43.6284 68.6636 cv
43.21 68.6636 42.7886 68.707 42.3647 68.7993 cv
42.0537 68.8652 41.749 68.9155 41.458 68.9492 cv
41.0996 68.9912 40.7339 69.0112 40.3755 69.0112 cv
35.7715 69.0112 31.9165 65.6538 31.4082 61.1992 cv
31.1426 58.8726 31.8193 56.5732 33.3145 54.7256 cv
34.8345 52.8477 37.0137 51.6602 39.4502 51.3813 cv
39.8062 51.3418 40.165 51.3203 40.5186 51.3203 cv
41.3618 51.3203 42.2007 51.4355 43.0166 51.6636 cv
43.5562 51.814 44.1001 51.8867 44.6348 51.8867 cv
47.1748 51.8867 49.5234 50.2661 50.3511 47.7397 cv
56.3228 29.5044 73.2085 15.7461 93.3701 12.6948 cv
96.2104 12.2637 99.0918 12.0459 101.934 12.0459 cv
119.736 12.0459 135.992 20.3599 145.42 34.2842 cv
146.385 35.7119 147.917 36.6558 149.626 36.8794 cv
149.884 36.9116 150.145 36.9287 150.401 36.9287 cv
151.847 36.9287 153.253 36.4082 154.356 35.4487 cv
155.6 34.3623 157.109 33.6284 158.718 33.3242 cv
159.302 33.2153 159.893 33.1582 160.475 33.1582 cv
164.81 33.1582 168.524 36.1694 169.309 40.3203 cv
169.744 42.6206 169.235 44.9629 167.878 46.9146 cv
166.499 48.8994 164.411 50.2432 162.002 50.6982 cv
161.471 50.7983 160.908 50.8491 160.334 50.8491 cv
160.094 50.8491 159.857 50.8408 159.622 50.8247 cv
159.486 50.8159 159.348 50.8115 159.212 50.8115 cv
157.631 50.8115 156.105 51.4346 154.976 52.5562 cv
153.748 53.7739 153.104 55.4614 153.208 57.1875 cv
154.714 82.2979 134.85 105.154 107.984 109.222 cv
105.143 109.652 102.261 109.87 99.417 109.87 cv
cp
.281714 .63 .86 .149143 cmyk
f
157.409 73.8057 mo
155.308 67.481 151.055 62.2148 144.431 60.7236 cv
145.442 55.249 145.666 49.6587 143.584 44.3774 cv
134.059 20.1948 103.003 26.3672 100.232 50.9165 cv
97.105 46.0825 94.71 41.3682 89.7686 38.522 cv
67.4277 25.6592 45.3955 50.2817 60.2085 71.4893 cv
57.1177 76.5117 54.4155 81.9717 54.6191 88.1304 cv
54.7451 91.8921 55.5146 95.2363 56.7974 98.2095 cv
69.4097 111.271 88.6665 118.23 108.885 115.171 cv
132.994 111.519 151.588 94.6694 157.409 73.8057 cv
cp
0 .3 .5 0 cmyk
f
144.244 66.2217 mo
144.564 68.106 139.049 70.6187 131.919 71.8354 cv
124.791 73.0498 118.754 72.5093 118.432 70.625 cv
118.111 68.7407 123.627 66.2275 130.758 65.0103 cv
137.885 63.7969 143.923 64.3374 144.244 66.2217 cv
cp
level3{
gsave
clp
[10.0922 -.274166 -1.77196 5.66173 131.337 68.4233 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.0922 -.274166 -1.77196 5.66173 131.337 68.4233 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
87.375 74.8545 mo
87.5093 76.7603 81.7778 78.7266 74.5625 79.2461 cv
67.3516 79.7666 61.3945 78.6416 61.2573 76.7349 cv
61.1206 74.8291 66.854 72.8618 74.0679 72.3418 cv
81.2813 71.8232 87.2363 72.9482 87.375 74.8545 cv
cp
level3{
gsave
clp
[10.0708 .704804 -2.31195 5.46333 74.3164 75.7949 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.0708 .704804 -2.31195 5.46333 74.3164 75.7949 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
71.7642 66.042 mo
70.7622 65.6895 li
72.1763 61.6777 74.1665 59.396 76.6787 58.9072 cv
80.7661 58.1118 84.5962 62.3828 84.7578 62.5649 cv
83.9624 63.2676 li
83.9268 63.228 80.3691 59.2598 76.8794 59.9487 cv
74.7642 60.3613 73.0425 62.4126 71.7642 66.042 cv
cp
.4 .7 1 .5 cmyk
f
129.458 55.3506 mo
129.986 58.8267 128.601 61.9194 126.364 62.2588 cv
124.129 62.5972 121.891 60.0522 121.363 56.5757 cv
120.838 53.0991 122.223 50.0059 124.459 49.667 cv
126.693 49.3296 128.933 51.874 129.458 55.3506 cv
cp
.34 .71 .89 .18 cmyk
f
170.14 40.5537 mo
171.272 46.3594 166.956 52.0869 160.502 53.3452 cv
154.049 54.6025 158.882 50.1943 157.748 44.3911 cv
156.618 38.584 149.95 33.5786 156.403 32.3203 cv
162.858 31.062 169.008 34.7471 170.14 40.5537 cv
cp
0 .3 .5 0 cmyk
f
29.2568 61.123 mo
29.9268 67.0005 35.77 71.1587 42.3018 70.4131 cv
48.834 69.666 42.8506 65.0498 42.1797 59.1724 cv
41.5083 53.2959 46.4028 48.3843 39.8711 49.1299 cv
33.3359 49.877 28.584 55.2461 29.2568 61.123 cv
cp
f
107.688 66.5059 mo
108.099 68.8145 105.273 71.2461 101.378 71.9399 cv
97.4839 72.6323 93.9912 71.3218 93.582 69.0142 cv
93.1714 66.7065 95.9966 64.2734 99.8916 63.5801 cv
103.787 62.8877 107.277 64.1982 107.688 66.5059 cv
cp
.34 .71 .89 .18 cmyk
f
114.377 80.5288 mo
114.377 80.5288 126.3 88.3838 113.995 94.54 cv
113.995 94.54 105.919 97.9097 106.408 84.5972 cv
106.408 84.5972 114.431 80.8784 114.377 80.5288 cv
cp
0 .580556 .122222 0 cmyk
f
95.5264 86.8604 mo
93.1421 86.8604 90.8472 86.4751 88.7432 85.5815 cv
89.1577 84.604 li
98.8218 88.71 114.011 81.105 121.862 74.9922 cv
122.515 75.8291 li
116.929 80.1787 105.459 86.8604 95.5264 86.8604 cv
cp
.4 .7 1 .5 cmyk
f
113.055 89.5981 mo
111.994 89.5474 li
112.087 87.5635 110.637 83.6421 109.938 82.7046 cv
110.789 82.0703 li
111.6 83.1587 113.161 87.3306 113.055 89.5981 cv
cp
f
689.973 720.682 mo
689.34 717.604 690.223 716.437 692.149 713.938 cv
685.931 710.702 686.8 701.63 693.376 698.888 cv
701 695.713 711.962 710.505 717.703 714.474 cv
721.953 717.411 726.114 720.104 729.583 723.985 cv
723.409 732.243 722.052 743.222 709.908 737.73 cv
703.058 734.636 691.682 729.011 689.973 720.682 cv
cp
.361111 .828704 1 .268519 cmyk
f
806.348 715.65 mo
803.08 718.395 801.116 727.616 795.744 721.609 cv
785.782 710.471 804.456 700.11 816.247 703.733 cv
829.616 707.842 832.578 724.619 828.234 735.479 cv
824.223 745.51 817.263 752.23 807.83 756.447 cv
794.716 762.311 779.262 757.881 766.843 751.715 cv
767.517 748.912 768.307 746.07 769.044 743.255 cv
785.69 747.859 810.831 753.463 819.689 733.29 cv
823.576 724.438 818.665 705.305 806.348 715.65 cv
cp
f
718.219 788.661 mo
731.455 792.579 731.826 763.286 724.531 755.199 cv
721.508 751.848 714.883 744.09 710.413 746.478 cv
706.399 748.624 706.192 756.857 706.241 761.683 cv
706.349 772.288 709.824 786.178 718.219 788.661 cv
cp
f
703.484 750.099 mo
709.139 764.806 723.519 774.981 739.125 775.968 cv
752.677 776.828 775.192 774.912 777.652 761.161 cv
779.759 749.4 781.806 733.326 771.075 724.019 cv
756.914 711.738 739.547 708.407 721.761 713.553 cv
706.848 717.868 697.77 735.232 703.484 750.099 cv
cp
.34 .71 .89 .18 cmyk
f
744.717 770.126 mo
756.352 770.126 770.406 767.502 771.732 760.103 cv
773.947 747.715 774.924 735.323 767.134 728.563 cv
758.468 721.05 748.543 717.238 737.63 717.238 cv
733.009 717.238 728.232 717.942 723.433 719.332 cv
717.801 720.961 712.964 725.133 710.161 730.771 cv
707.418 736.297 707.028 742.555 709.101 747.938 cv
713.838 760.263 726.056 769.113 739.505 769.963 cv
741.208 770.07 742.961 770.126 744.717 770.126 cv
cp
.281714 .63 .86 .149143 cmyk
f
731.938 734.691 mo
737.265 741.552 739.569 750.364 739.214 758.884 cv
739.037 763.22 739.082 770.28 737.488 775.805 cv
722.523 774.235 708.943 764.289 703.484 750.099 cv
700.293 741.796 701.719 732.716 706.195 725.563 cv
706.835 725.425 707.49 725.3 708.175 725.203 cv
717.494 723.904 726.212 727.308 731.938 734.691 cv
cp
0 .3 .5 0 cmyk
f
775.844 777.71 mo
779.821 784.655 764.723 790.396 760.057 790.569 cv
752.195 790.862 737.108 784.044 736.276 774.176 cv
735.633 766.55 739.923 758.304 749.732 753.853 cv
755.399 751.279 772.246 752.486 772.501 759.255 cv
772.665 763.63 766.024 764.407 769.789 768.976 cv
772.316 772.041 773.423 773.486 775.844 777.71 cv
cp
.382023 .797753 1 .202247 cmyk
f
769.279 719.649 mo
759.139 721.479 763.916 733.563 763.968 740.716 cv
764.021 747.75 757.235 753.133 759.012 760.305 cv
760.906 767.943 769.338 769.966 775.571 767.302 cv
783.281 764.003 786.971 756.029 776.307 755.078 cv
785.016 755.352 785.476 740.104 785.086 736.497 cv
784.282 729.011 776.639 718.319 769.279 719.649 cv
cp
.361111 .828704 1 .268519 cmyk
f
717.311 757.011 mo
717.219 758.376 718.251 759.556 719.614 759.648 cv
720.98 759.738 722.16 758.709 722.252 757.343 cv
722.344 755.978 721.313 754.8 719.947 754.707 cv
718.584 754.612 717.404 755.646 717.311 757.011 cv
cp
0 .05 .32 0 cmyk
f
687.886 639.512 mo
690.662 640.036 693.109 641.289 695.087 643.014 cv
707 625.413 729.35 615.262 753.019 618.846 cv
776.255 622.364 794.365 638.15 800.856 657.968 cv
802.706 657.452 804.688 657.271 806.722 657.505 cv
815.019 658.452 820.99 665.828 820.059 673.982 cv
819.129 682.135 811.646 687.977 803.348 687.025 cv
802.845 686.969 802.35 686.886 801.864 686.781 cv
794.993 713.984 766.872 731.854 736.604 727.271 cv
706.206 722.668 684.588 697.082 686.275 668.928 cv
684.997 669.015 683.688 668.96 682.37 668.71 cv
674.162 667.161 668.744 659.367 670.268 651.304 cv
671.792 643.241 679.678 637.963 687.886 639.512 cv
cp
.34 .71 .89 .18 cmyk
f
746.071 721.97 mo
770.035 721.97 790.578 706.894 796.031 685.31 cv
796.719 682.59 799.162 680.764 801.859 680.764 cv
802.277 680.764 802.699 680.808 803.124 680.899 cv
803.435 680.966 803.739 681.017 804.031 681.05 cv
804.389 681.091 804.754 681.111 805.111 681.111 cv
809.717 681.111 813.572 677.754 814.08 673.3 cv
814.347 670.972 813.668 668.674 812.175 666.826 cv
810.653 664.948 808.475 663.76 806.039 663.481 cv
805.682 663.442 805.324 663.421 804.969 663.421 cv
804.127 663.421 803.288 663.535 802.471 663.763 cv
801.932 663.913 801.388 663.986 800.854 663.986 cv
798.313 663.986 795.965 662.366 795.138 659.841 cv
789.166 641.604 772.281 627.847 752.118 624.794 cv
749.278 624.363 746.396 624.146 743.554 624.146 cv
725.751 624.146 709.496 632.46 700.069 646.384 cv
699.103 647.812 697.57 648.757 695.862 648.979 cv
695.604 649.013 695.344 649.029 695.087 649.029 cv
693.642 649.029 692.235 648.508 691.133 647.55 cv
689.888 646.463 688.379 645.729 686.771 645.424 cv
686.186 645.315 685.595 645.259 685.014 645.259 cv
680.679 645.259 676.965 648.271 676.18 652.421 cv
675.744 654.721 676.253 657.063 677.611 659.015 cv
678.989 660.999 681.077 662.343 683.487 662.798 cv
684.019 662.898 684.58 662.949 685.154 662.949 cv
685.395 662.949 685.631 662.94 685.866 662.926 cv
686.003 662.916 686.142 662.911 686.276 662.911 cv
687.857 662.911 689.382 663.534 690.513 664.656 cv
691.739 665.874 692.384 667.562 692.28 669.288 cv
690.775 694.398 710.639 717.254 737.504 721.322 cv
740.346 721.753 743.228 721.97 746.071 721.97 cv
cp
.281714 .63 .86 .149143 cmyk
f
688.079 685.905 mo
690.181 679.581 694.434 674.315 701.057 672.824 cv
700.046 667.349 699.821 661.759 701.904 656.478 cv
711.429 632.295 742.485 638.467 745.256 663.017 cv
748.384 658.183 750.778 653.468 755.72 650.622 cv
778.061 637.761 800.093 662.382 785.279 683.589 cv
788.37 688.612 791.073 694.072 790.868 700.231 cv
790.742 703.992 789.974 707.337 788.69 710.31 cv
776.078 723.371 756.822 730.33 736.604 727.271 cv
712.494 723.619 693.899 706.769 688.079 685.905 cv
cp
0 .3 .5 0 cmyk
f
701.245 678.321 mo
700.924 680.205 706.44 682.719 713.569 683.936 cv
720.696 685.149 726.733 684.609 727.058 682.726 cv
727.377 680.842 721.861 678.328 714.73 677.11 cv
707.603 675.897 701.564 676.438 701.245 678.321 cv
cp
level3{
gsave
clp
[-10.0911 -.274136 1.77176 5.6611 714.149 680.523 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-10.0911 -.274136 1.77176 5.6611 714.149 680.523 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
758.113 686.954 mo
757.979 688.86 763.711 690.827 770.926 691.347 cv
778.137 691.865 784.094 690.741 784.23 688.835 cv
784.367 686.929 778.635 684.962 771.421 684.442 cv
764.207 683.923 758.252 685.049 758.113 686.954 cv
cp
level3{
gsave
clp
[-10.0714 .704843 2.31208 5.46363 771.173 687.896 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-10.0714 .704843 2.31208 5.46363 771.173 687.896 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
773.724 678.143 mo
774.727 677.789 li
773.312 673.777 771.322 671.496 768.81 671.009 cv
764.723 670.212 760.892 674.483 760.73 674.665 cv
761.524 675.367 li
761.563 675.328 765.119 671.36 768.608 672.049 cv
770.724 672.461 772.446 674.513 773.724 678.143 cv
cp
.4 .7 1 .5 cmyk
f
716.03 667.451 mo
715.502 670.927 716.887 674.02 719.124 674.358 cv
721.358 674.697 723.599 672.152 724.126 668.676 cv
724.65 665.199 723.266 662.107 721.029 661.768 cv
718.794 661.431 716.556 663.973 716.03 667.451 cv
cp
.34 .71 .89 .18 cmyk
f
675.347 652.653 mo
674.217 658.461 678.533 664.188 684.985 665.445 cv
691.438 666.702 686.605 662.294 687.74 656.491 cv
688.87 650.685 695.538 645.679 689.085 644.421 cv
682.63 643.162 676.48 646.847 675.347 652.653 cv
cp
0 .3 .5 0 cmyk
f
816.232 673.224 mo
815.561 679.101 809.719 683.259 803.186 682.514 cv
796.654 681.767 802.638 677.15 803.309 671.272 cv
803.979 665.396 799.085 660.485 805.618 661.229 cv
812.152 661.977 816.904 667.347 816.232 673.224 cv
cp
f
737.8 678.605 mo
737.39 680.914 740.215 683.346 744.111 684.04 cv
748.005 684.733 751.497 683.423 751.906 681.114 cv
752.316 678.806 749.492 676.374 745.597 675.681 cv
741.702 674.986 738.212 676.299 737.8 678.605 cv
cp
.34 .71 .89 .18 cmyk
f
733.436 696.939 mo
733.436 696.939 723.685 707.369 737.09 710.472 cv
737.09 710.472 745.731 711.854 742.137 699.027 cv
742.137 699.027 733.465 697.291 733.436 696.939 cv
cp
0 .580556 .122222 0 cmyk
f
753.246 698.678 mo
755.563 698.119 757.703 697.207 759.54 695.846 cv
758.906 694.993 li
750.475 701.247 733.927 697.413 724.861 693.31 cv
724.423 694.277 li
730.873 697.196 743.589 701.004 753.246 698.678 cv
cp
.4 .7 1 .5 cmyk
f
736.847 705.447 mo
737.866 705.149 li
737.309 703.242 737.801 699.089 738.26 698.015 cv
737.286 697.597 li
736.751 698.845 736.211 703.269 736.847 705.447 cv
cp
f
533.743 379.526 mo
548.604 383.436 549.041 354.142 540.854 346.061 cv
537.462 342.711 530.025 334.958 525.006 337.349 cv
520.497 339.497 520.258 347.731 520.31 352.557 cv
520.423 363.162 524.319 377.048 533.743 379.526 cv
cp
.361111 .828704 1 .268519 cmyk
f
677.179 347.59 mo
673.515 351.116 669.679 354.055 665.653 356.881 cv
661.637 359.676 657.462 362.23 653.162 364.549 cv
644.567 369.189 635.472 372.895 626.086 375.594 cv
607.312 381.029 587.402 382.25 568.096 379.674 cv
548.755 377.13 530.065 370.952 512.613 362.552 cv
495.137 354.137 478.83 343.541 463.569 331.728 cv
462.448 330.859 462.244 329.248 463.109 328.128 cv
463.939 327.058 465.447 326.823 466.557 327.562 cv
466.714 327.666 li
468.695 328.991 470.688 330.293 472.694 331.572 cv
474.683 332.874 476.671 334.171 478.679 335.433 cv
482.69 337.963 486.757 340.393 490.874 342.711 cv
499.056 347.43 507.431 351.734 515.962 355.592 cv
524.524 359.374 533.219 362.786 542.126 365.405 cv
551.016 368.062 560.056 370.131 569.202 371.266 cv
578.333 372.486 587.556 372.891 596.724 372.331 cv
601.312 372.098 605.886 371.627 610.427 370.914 cv
614.964 370.188 619.471 369.252 623.938 368.124 cv
628.404 366.987 632.801 365.573 637.146 363.988 cv
641.491 362.416 645.762 360.6 649.934 358.566 cv
654.136 356.587 658.24 354.375 662.205 351.928 cv
664.188 350.706 666.133 349.418 668.031 348.076 cv
669.94 346.769 671.862 345.369 673.559 343.947 cv
673.759 343.779 li
674.846 342.871 676.46 343.014 677.368 344.1 cv
678.237 345.137 678.138 346.665 677.179 347.59 cv
cp
.29 .1 1 .1 cmyk
f
490.654 342.358 mo
490.654 342.358 474.64 335.156 494.104 317.629 cv
494.104 317.629 507.671 337.361 490.654 342.358 cv
cp
.66 .1 1 .1 cmyk
f
608.9 372.025 mo
608.9 372.025 596.436 360.792 619.265 350.532 cv
619.265 350.532 625.845 372.45 608.9 372.025 cv
cp
f
477.197 343.323 mo
477.197 343.323 461.669 322.569 442.679 356.247 cv
442.679 356.247 475.47 369.443 477.197 343.323 cv
cp
.46 .1 1 .1 cmyk
f
509.19 359.892 mo
509.19 359.892 493.053 346.647 484.68 376.642 cv
484.68 376.642 512.864 380.655 509.19 359.892 cv
cp
.66 .1 1 .1 cmyk
f
662.929 357.77 mo
662.929 357.77 681.061 339.249 695.437 375.141 cv
695.437 375.141 661.188 383.889 662.929 357.77 cv
cp
.46 .1 1 .1 cmyk
f
638.604 372.902 mo
638.604 372.902 653.917 363.411 657.661 390.02 cv
657.661 390.02 633.096 390.243 638.604 372.902 cv
cp
.66 .1 1 .1 cmyk
f
632.312 371.524 mo
628.707 369.238 625.534 360.356 621.009 367.023 cv
612.615 379.39 632.502 387.177 643.708 382.016 cv
656.407 376.168 657.116 359.146 651.365 348.958 cv
646.057 339.552 638.265 333.815 628.357 330.891 cv
614.578 326.821 599.851 333.268 588.362 341.031 cv
589.402 343.72 590.563 346.433 591.667 349.122 cv
607.555 342.347 631.727 333.448 643.19 352.264 cv
648.217 360.522 645.894 380.136 632.312 371.524 cv
cp
.361111 .828704 1 .268519 cmyk
f
510.472 293.743 mo
493.596 300.75 512.866 323.366 519.992 330.901 cv
526.35 337.624 533.549 343.057 541.446 347.845 cv
548.055 332.617 549.868 325.767 540.5 311.455 cv
534.278 301.951 523.532 288.32 510.472 293.743 cv
cp
f
521.798 347.333 mo
527.452 362.042 541.832 372.217 557.438 373.206 cv
570.991 374.063 593.507 372.149 595.966 358.399 cv
598.07 346.637 600.119 330.562 589.388 321.256 cv
575.229 308.976 557.86 305.643 540.074 310.788 cv
525.16 315.104 516.083 332.467 521.798 347.333 cv
cp
.367749 .767946 .962637 .194691 cmyk
f
563.024 367.362 mo
561.271 367.362 559.52 367.308 557.817 367.2 cv
544.369 366.348 532.151 357.498 527.412 345.173 cv
525.343 339.792 525.729 333.534 528.475 328.007 cv
531.276 322.367 536.114 318.199 541.746 316.568 cv
546.545 315.179 551.322 314.476 555.942 314.476 cv
566.855 314.476 576.782 318.287 585.446 325.801 cv
593.236 332.558 592.26 344.952 590.042 357.339 cv
588.722 364.737 574.661 367.362 563.027 367.362 cv
563.024 367.362 li
cp
.281714 .63 .86 .149143 cmyk
f
550.253 331.927 mo
555.576 338.789 557.88 347.598 557.528 356.12 cv
557.351 360.456 557.396 367.517 555.802 373.039 cv
540.834 371.47 527.254 361.525 521.798 347.333 cv
518.606 339.033 520.031 329.953 524.508 322.8 cv
525.146 322.662 525.803 322.536 526.488 322.439 cv
535.807 321.141 544.526 324.545 550.253 331.927 cv
cp
0 .3 .5 0 cmyk
f
603.354 374.243 mo
607.331 381.185 592.234 386.929 587.568 387.1 cv
579.705 387.395 564.619 380.575 563.788 370.707 cv
563.143 363.082 567.433 354.837 577.242 350.383 cv
582.909 347.812 599.755 349.018 600.013 355.788 cv
600.178 360.161 593.535 360.939 597.299 365.505 cv
599.826 368.572 600.933 370.017 603.354 374.243 cv
cp
.367623 .769737 .962308 .194624 cmyk
f
535.624 354.246 mo
535.532 355.61 536.565 356.792 537.929 356.882 cv
539.293 356.977 540.474 355.943 540.563 354.58 cv
540.656 353.216 539.626 352.034 538.262 351.941 cv
536.897 351.849 535.717 352.882 535.624 354.246 cv
cp
0 .05 .32 0 cmyk
f
491.383 265.324 mo
491.938 273.212 498.898 279.146 506.925 278.582 cv
514.954 278.015 521.011 271.162 520.457 263.273 cv
519.901 255.387 512.939 249.452 504.912 250.019 cv
496.885 250.583 490.827 257.436 491.383 265.324 cv
cp
.34 .71 .89 .18 cmyk
f
497.24 265.552 mo
497.643 271.24 503.092 275.487 509.412 275.041 cv
515.732 274.595 520.532 269.625 520.131 263.938 cv
519.73 258.253 514.282 254.005 507.96 254.449 cv
501.64 254.896 496.84 259.867 497.24 265.552 cv
cp
0 .3 .5 0 cmyk
f
558.773 212.165 mo
589.437 210.002 616.138 231.545 620.012 260.826 cv
620.711 260.68 621.421 260.561 622.156 260.51 cv
630.746 259.905 638.194 266.257 638.789 274.698 cv
639.384 283.138 632.902 290.473 624.312 291.079 cv
621.384 291.285 618.604 290.668 616.167 289.455 cv
608.063 308.648 589.356 322.777 566.685 324.376 cv
534.855 326.621 507.277 303.321 505.093 272.334 cv
502.907 241.349 526.941 214.41 558.773 212.165 cv
cp
.34 .71 .89 .18 cmyk
f
562.451 318.51 mo
535.494 318.51 512.936 298.04 511.094 271.912 cv
509.146 244.284 530.726 220.174 559.196 218.166 cv
560.462 218.078 561.745 218.032 563.007 218.032 cv
588.817 218.032 610.76 236.768 614.048 261.615 cv
614.267 263.273 615.167 264.766 616.532 265.734 cv
617.558 266.461 618.774 266.843 620.012 266.843 cv
620.423 266.843 620.832 266.8 621.241 266.715 cv
621.78 266.603 622.203 266.539 622.569 266.513 cv
622.815 266.496 623.052 266.488 623.287 266.488 cv
628.272 266.488 632.447 270.279 632.786 275.121 cv
632.961 277.58 632.144 279.967 630.487 281.842 cv
628.804 283.746 626.459 284.896 623.887 285.077 cv
623.656 285.093 623.426 285.101 623.198 285.101 cv
621.685 285.101 620.223 284.754 618.851 284.071 cv
618.01 283.65 617.091 283.438 616.167 283.438 cv
615.46 283.438 614.754 283.562 614.079 283.811 cv
612.521 284.388 611.271 285.583 610.624 287.115 cv
603.071 305 586.073 316.979 566.262 318.375 cv
564.995 318.465 563.713 318.51 562.451 318.51 cv
cp
.281714 .63 .86 .149143 cmyk
f
618.471 276.13 mo
618.88 281.943 618.06 286.736 623.974 286.318 cv
629.891 285.902 634.355 280.851 633.945 275.038 cv
633.535 269.226 628.406 264.854 622.491 265.27 cv
616.575 265.688 618.063 270.319 618.471 276.13 cv
cp
0 .3 .5 0 cmyk
f
580.495 308.483 mo
596.563 312.616 621.147 336.686 604.188 350.277 cv
598.074 355.178 582.824 358.656 579.705 349.373 cv
575.966 338.249 589.377 340.104 580.737 329.575 cv
575.254 322.888 562.482 324.253 568.955 311.175 cv
580.495 308.483 li
cp
.339093 .708106 .887626 .17952 cmyk
f
505.62 276.886 mo
510.044 305.566 536.435 326.512 566.685 324.376 cv
584.616 323.114 600.073 314.012 609.761 300.766 cv
610.741 289.467 607.659 278.046 597.54 271.995 cv
604.57 254.169 593.426 233.018 571.816 240.39 cv
567.149 241.981 563.301 245.302 559.923 248.797 cv
553.931 240.278 542.069 232.934 531.339 237.538 cv
531.339 237.538 516.121 243.366 520.986 261.475 cv
520.986 261.475 505.602 262.765 505.62 276.886 cv
cp
0 .3 .5 0 cmyk
f
598.74 282.402 mo
598.702 284.312 592.816 285.754 585.583 285.622 cv
578.356 285.488 572.523 283.833 572.56 281.922 cv
572.595 280.012 578.479 278.569 585.712 278.702 cv
592.941 278.835 598.772 280.491 598.74 282.402 cv
cp
level3{
gsave
clp
[9.96654 1.60938 -2.79466 5.23253 585.647 282.162 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.96654 1.60938 -2.79466 5.23253 585.647 282.162 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
539.126 276.906 mo
538.907 278.804 532.907 279.668 525.721 278.835 cv
518.54 278.003 512.896 275.791 513.115 273.893 cv
513.337 271.994 519.337 271.129 526.522 271.961 cv
533.704 272.794 539.348 275.008 539.126 276.906 cv
cp
level3{
gsave
clp
[9.76322 2.56694 -3.2887 4.93742 526.12 275.397 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.76322 2.56694 -3.2887 4.93742 526.12 275.397 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
573.983 289.775 mo
573.983 289.775 553.01 279.464 532.823 283.963 cv
532.823 283.963 530.54 309.752 550.702 312.176 cv
550.702 312.176 572.141 314.51 573.983 289.775 cv
cp
0 0 0 0 cmyk
f
572.775 268.677 mo
572.695 272.63 574.462 275.872 576.721 275.918 cv
578.978 275.963 580.874 272.795 580.955 268.843 cv
581.034 264.889 579.268 261.649 577.009 261.603 cv
574.751 261.558 572.856 264.725 572.775 268.677 cv
cp
.4 .65 .9 .35 cmyk
f
529.276 263.947 mo
529.197 267.899 530.965 271.141 533.223 271.187 cv
535.48 271.231 537.376 268.063 537.457 264.111 cv
537.538 260.159 535.77 256.917 533.512 256.871 cv
531.252 256.826 529.358 259.994 529.276 263.947 cv
cp
f
546.87 271.842 mo
546.563 274.167 549.494 276.469 553.418 276.986 cv
557.34 277.503 560.77 276.036 561.075 273.711 cv
561.379 271.388 558.447 269.084 554.524 268.568 cv
550.604 268.052 547.177 269.518 546.87 271.842 cv
cp
.34 .71 .89 .18 cmyk
f
605.806 124.916 mo
608.831 128.246 612.413 131.416 616.046 134.334 cv
619.709 137.26 623.55 139.976 627.527 142.476 cv
635.482 147.476 643.982 151.616 652.823 154.804 cv
670.509 161.218 689.547 163.668 708.34 162.419 cv
727.165 161.204 745.693 156.429 763.252 149.366 cv
780.836 142.293 797.507 132.979 813.275 122.363 cv
814.45 121.569 816.046 121.882 816.836 123.056 cv
817.592 124.181 817.342 125.687 816.291 126.509 cv
816.145 126.622 li
814.236 128.107 812.309 129.574 810.363 131.021 cv
808.404 132.444 806.413 133.826 804.41 135.196 cv
800.405 137.932 796.326 140.579 792.174 143.123 cv
783.819 148.117 775.147 152.669 766.132 156.534 cv
757.145 160.471 747.79 163.64 738.229 166.137 cv
728.653 168.6 718.813 170.168 708.89 170.882 cv
698.958 171.507 688.937 171.147 679.053 169.743 cv
669.194 168.218 659.446 165.794 650.186 162.117 cv
645.552 160.294 641.007 158.262 636.621 155.93 cv
632.242 153.591 627.992 151.026 623.906 148.232 cv
619.857 145.385 615.97 142.323 612.277 139.047 cv
610.433 137.407 608.633 135.718 606.897 133.956 cv
605.182 132.151 603.551 130.349 601.952 128.311 cv
601.887 128.227 li
601.01 127.11 601.207 125.497 602.322 124.622 cv
603.387 123.788 604.908 123.935 605.806 124.916 cv
cp
.29 .1 1 .1 cmyk
f
804.461 128.703 mo
804.461 128.703 820.917 122.575 802.654 103.797 cv
802.654 103.797 787.812 122.589 804.461 128.703 cv
cp
.66 .1 1 .1 cmyk
f
628.84 145.444 mo
628.84 145.444 644.881 132.807 617.984 118.509 cv
617.984 118.509 608.229 144.595 628.84 145.444 cv
cp
f
801.778 137.289 mo
801.778 137.289 818.647 117.609 835.364 152.471 cv
835.364 152.471 801.773 163.467 801.778 137.289 cv
cp
.46 .1 1 .1 cmyk
f
768.76 151.705 mo
768.76 151.705 785.739 139.558 792.108 170.041 cv
792.108 170.041 763.72 172.18 768.76 151.705 cv
cp
.66 .1 1 .1 cmyk
f
615.499 139.412 mo
615.499 139.412 598.632 119.732 581.913 154.594 cv
581.913 154.594 615.505 165.59 615.499 139.412 cv
cp
.46 .1 1 .1 cmyk
f
638.769 156.12 mo
638.769 156.12 624.117 145.638 618.619 171.942 cv
618.619 171.942 643.116 173.788 638.769 156.12 cv
cp
.66 .1 1 .1 cmyk
f
780.885 123.671 mo
793.908 107.01 780.053 80.437 796.997 66.5552 cv
801.379 62.9658 812.196 59.4316 812.173 68.1533 cv
812.157 74.9766 802.181 82.1274 799.189 88.0405 cv
794.896 96.5259 796.454 106.862 794.922 115.941 cv
793.26 125.771 787.021 133.74 779.609 140.399 cv
765.847 152.761 741.134 157.018 728.906 140.098 cv
727.691 138.416 726.484 136.734 725.398 134.965 cv
734.027 127.947 743.143 140.253 754.305 139.888 cv
765.314 139.531 774.413 131.956 780.885 123.671 cv
cp
.361111 .828704 1 .268519 cmyk
f
734.587 169.417 mo
736.18 148.723 li
718.668 146.069 li
716.546 153.498 li
716.546 171.539 724.504 170.478 724.504 170.478 cv
734.587 169.417 li
cp
.382023 .797753 1 .33 cmyk
f
669.853 169.946 mo
668.26 149.253 li
685.769 146.6 li
687.893 154.029 li
687.893 172.069 679.934 171.009 679.934 171.009 cv
669.853 169.946 li
cp
f
770.102 89.4468 mo
762.789 86.2129 748.815 96.4072 743.014 100.01 cv
741.941 100.675 740.905 101.453 739.947 102.321 cv
732.143 90.333 717.899 82.3071 701.616 82.3071 cv
684.773 82.3071 670.113 90.8965 662.504 103.573 cv
661.657 102.84 660.755 102.179 659.825 101.601 cv
654.021 97.9985 640.05 87.8057 632.734 91.0396 cv
613.662 99.4663 640.365 114.376 644.3 117.907 cv
648.526 121.704 652.354 125.604 657.18 127.574 cv
659.437 148.338 678.47 164.553 701.616 164.553 cv
725.349 164.553 744.748 147.508 746.184 125.99 cv
750.695 122.774 754.459 119.977 758.536 116.315 cv
762.474 112.784 789.178 97.874 770.102 89.4468 cv
cp
.34 .71 .89 .18 cmyk
f
701.616 158.536 mo
681.653 158.536 665.12 144.946 663.162 126.924 cv
662.922 124.728 661.5 122.839 659.454 122.004 cv
656.305 120.719 653.449 118.108 650.139 115.083 cv
649.54 114.534 648.933 113.982 648.321 113.431 cv
647.452 112.652 646.24 111.792 644.562 110.601 cv
633.852 103.005 632.039 99.8604 631.955 98.6372 cv
632.099 98.4287 632.788 97.5923 635.167 96.5405 cv
635.227 96.5161 635.46 96.4307 635.991 96.4307 cv
640.763 96.4307 649.729 102.246 654.037 105.039 cv
655.021 105.676 655.902 106.247 656.651 106.712 cv
657.321 107.129 657.97 107.605 658.574 108.128 cv
659.674 109.077 661.072 109.588 662.504 109.588 cv
662.823 109.588 663.141 109.564 663.458 109.513 cv
665.21 109.231 666.75 108.19 667.664 106.668 cv
674.455 95.3525 687.465 88.3242 701.616 88.3242 cv
715.211 88.3242 727.968 94.9453 734.905 105.604 cv
735.867 107.081 737.429 108.061 739.176 108.287 cv
739.434 108.321 739.691 108.337 739.947 108.337 cv
741.432 108.337 742.877 107.787 743.99 106.776 cv
744.669 106.163 745.405 105.606 746.188 105.121 cv
746.937 104.655 747.817 104.085 748.801 103.448 cv
753.109 100.653 762.074 94.8374 766.847 94.8374 cv
767.379 94.8374 767.61 94.9229 767.67 94.9497 cv
770.05 96 770.738 96.8374 770.881 97.0459 cv
770.801 98.2695 768.987 101.414 758.276 109.01 cv
756.598 110.199 755.386 111.06 754.519 111.837 cv
750.809 115.169 747.374 117.752 742.692 121.091 cv
741.223 122.138 740.301 123.789 740.181 125.589 cv
738.949 144.064 722.009 158.536 701.616 158.536 cv
cp
.281714 .63 .86 .149143 cmyk
f
727.43 156.987 mo
727.992 154.394 728.304 151.677 728.304 148.872 cv
728.304 131.137 716.354 116.761 701.613 116.761 cv
686.873 116.761 674.926 131.137 674.926 148.872 cv
674.926 151.671 675.234 154.386 675.794 156.974 cv
683.085 161.743 691.993 164.553 701.616 164.553 cv
711.235 164.553 720.144 161.751 727.43 156.987 cv
cp
0 .3 .5 0 cmyk
f
704.61 146.977 mo
704.659 148.379 703.563 149.558 702.161 149.609 cv
700.758 149.662 699.578 148.564 699.528 147.162 cv
699.478 145.759 700.574 144.582 701.977 144.53 cv
703.379 144.479 704.557 145.575 704.61 146.977 cv
cp
0 .05 .32 0 cmyk
f
647.544 142.925 mo
649.249 139.283 653.844 138.841 656.282 142.472 cv
653.077 133.882 661.833 131.242 664.861 139.508 cv
664.96 139.774 665.438 140.253 664.832 139.498 cv
664.616 132.34 670.38 129.459 674.731 134.089 cv
679.658 139.333 679.209 148.625 681.119 155.176 cv
683.127 162.063 686.106 168.738 678.88 173.691 cv
672.855 177.822 666.657 175.917 661.739 171.428 cv
656.104 166.284 643.348 151.872 647.544 142.925 cv
cp
.34 .71 .89 .18 cmyk
f
671.938 169.959 mo
669.555 169.959 667.281 168.341 665.794 166.984 cv
659.188 160.953 652.949 152.057 652.702 147.278 cv
653.746 148.036 655.007 148.444 656.285 148.444 cv
657.206 148.444 658.137 148.232 659.003 147.788 cv
660.269 147.137 661.221 146.101 661.768 144.89 cv
662.755 145.557 663.906 145.92 665.133 145.92 cv
667.441 145.92 669.549 144.597 670.552 142.519 cv
670.908 141.782 671.289 140.617 671.113 139.215 cv
672.627 141.631 673.235 145.506 673.824 149.269 cv
674.222 151.798 674.63 154.414 675.345 156.859 cv
675.545 157.552 675.758 158.242 675.968 158.93 cv
678.154 166.079 677.853 167.102 675.479 168.729 cv
674.27 169.557 673.113 169.959 671.938 169.959 cv
cp
.281714 .63 .86 .149143 cmyk
f
756.214 142.216 mo
754.507 138.575 749.913 138.132 747.475 141.765 cv
750.681 133.175 741.925 130.534 738.896 138.801 cv
738.797 139.067 738.318 139.545 738.924 138.789 cv
739.141 131.632 733.376 128.751 729.024 133.382 cv
724.099 138.625 724.547 147.917 722.638 154.468 cv
720.631 161.356 717.65 168.031 724.876 172.984 cv
730.902 177.115 737.1 175.209 742.019 170.721 cv
747.653 165.577 760.407 151.164 756.214 142.216 cv
cp
.34 .71 .89 .18 cmyk
f
731.82 169.251 mo
730.644 169.251 729.485 168.85 728.279 168.021 cv
725.905 166.395 725.602 165.371 727.79 158.221 cv
728.001 157.534 728.212 156.843 728.414 156.152 cv
729.126 153.705 729.537 151.09 729.932 148.562 cv
730.521 144.798 731.13 140.924 732.644 138.508 cv
732.469 139.912 732.852 141.078 733.207 141.814 cv
734.21 143.892 736.317 145.213 738.624 145.213 cv
738.635 145.213 li
739.848 145.21 740.992 144.851 741.971 144.194 cv
742.511 145.417 743.458 146.465 744.728 147.116 cv
745.604 147.566 746.543 147.782 747.471 147.782 cv
748.752 147.782 750.013 147.372 751.053 146.603 cv
750.78 151.39 744.555 160.259 737.962 166.277 cv
736.476 167.633 734.202 169.251 731.82 169.251 cv
cp
.281714 .63 .86 .149143 cmyk
f
758.822 27.2773 mo
756.044 27.8018 753.599 29.0537 751.621 30.7773 cv
739.707 13.1787 717.358 3.02734 693.689 6.60986 cv
670.451 10.1289 652.342 25.9155 645.853 45.7324 cv
644.003 45.2163 642.021 45.0366 639.986 45.2695 cv
631.689 46.2168 625.719 53.5952 626.649 61.7471 cv
627.581 69.9004 635.063 75.7397 643.361 74.7925 cv
643.863 74.7349 644.359 74.6504 644.844 74.5464 cv
651.714 101.748 679.835 119.62 710.104 115.036 cv
740.501 110.433 762.121 84.8472 760.433 56.6924 cv
761.71 56.7798 763.02 56.7246 764.337 56.4756 cv
772.546 54.9243 777.964 47.1313 776.44 39.0684 cv
774.918 31.0049 767.028 25.7261 758.822 27.2773 cv
cp
.34 .71 .89 .18 cmyk
f
700.636 109.736 mo
676.673 109.736 656.129 94.6602 650.677 73.0728 cv
649.988 70.3555 647.548 68.5298 644.85 68.5298 cv
644.431 68.5298 644.008 68.5737 643.583 68.6636 cv
643.27 68.7305 642.968 68.7813 642.684 68.8135 cv
642.318 68.8545 641.954 68.876 641.594 68.876 cv
636.991 68.876 633.136 65.5181 632.628 61.0649 cv
632.36 58.7368 633.038 56.439 634.535 54.5913 cv
636.055 52.7134 638.232 51.5244 640.671 51.2476 cv
641.025 51.2065 641.384 51.186 641.737 51.186 cv
642.581 51.186 643.422 51.3013 644.236 51.5293 cv
644.775 51.6792 645.319 51.7505 645.854 51.7505 cv
648.395 51.7505 650.742 50.1323 651.57 47.605 cv
657.542 29.3687 674.427 15.6128 694.59 12.5591 cv
697.429 12.1304 700.311 11.9116 703.152 11.9116 cv
720.955 11.9116 737.213 20.2246 746.638 34.1509 cv
747.605 35.5776 749.137 36.522 750.845 36.7437 cv
751.103 36.7783 751.363 36.7944 751.621 36.7944 cv
753.066 36.7944 754.473 36.2739 755.574 35.3125 cv
756.819 34.2266 758.328 33.4937 759.938 33.1899 cv
760.521 33.0786 761.112 33.0239 761.696 33.0239 cv
766.029 33.0239 769.743 36.0361 770.528 40.1846 cv
770.962 42.4863 770.455 44.8276 769.099 46.7803 cv
767.719 48.7646 765.63 50.1094 763.221 50.5635 cv
762.691 50.665 762.131 50.7158 761.556 50.7158 cv
761.315 50.7158 761.079 50.7065 760.841 50.6904 cv
760.705 50.6816 760.567 50.6763 760.433 50.6763 cv
758.851 50.6763 757.327 51.3003 756.196 52.4214 cv
754.968 53.6387 754.323 55.3267 754.428 57.0527 cv
755.935 82.1631 736.069 105.02 709.205 109.086 cv
706.362 109.517 703.479 109.736 700.636 109.736 cv
cp
.281714 .63 .86 .149143 cmyk
f
758.628 73.6724 mo
756.526 67.3462 752.274 62.0801 745.649 60.5889 cv
746.662 55.1147 746.886 49.5239 744.805 44.2437 cv
735.278 20.061 704.224 26.2324 701.452 50.7817 cv
698.324 45.9468 695.93 41.2334 690.988 38.3872 cv
668.646 25.5259 646.614 50.1465 661.429 71.356 cv
658.338 76.3779 655.635 81.8384 655.838 87.9946 cv
655.965 91.7583 656.734 95.103 658.017 98.0737 cv
670.629 111.136 689.886 118.096 710.104 115.036 cv
734.214 111.384 752.808 94.5332 758.628 73.6724 cv
cp
0 .3 .5 0 cmyk
f
744.042 66.5249 mo
744.295 68.4194 738.691 70.731 731.521 71.688 cv
724.355 72.644 718.341 71.8857 718.088 69.9912 cv
717.836 68.0967 723.438 65.7847 730.608 64.8271 cv
737.775 63.8716 743.79 64.6304 744.042 66.5249 cv
cp
level3{
gsave
clp
[10.0948 .0908359 -1.97541 5.59352 731.064 68.2583 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.0948 .0908359 -1.97541 5.59352 731.064 68.2583 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
688.773 73.439 mo
688.84 75.3477 683.04 77.1064 675.811 77.3647 cv
668.587 77.623 662.672 76.2861 662.604 74.375 cv
662.536 72.4644 668.338 70.7056 675.566 70.4478 cv
682.792 70.1909 688.703 71.5288 688.773 73.439 cv
cp
level3{
gsave
clp
[10.0391 1.06821 -2.50799 5.37607 675.689 73.9072 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.0391 1.06821 -2.50799 5.37607 675.689 73.9072 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
669.797 64.8447 mo
668.796 64.4922 li
670.209 60.4814 672.201 58.1997 674.713 57.709 cv
678.795 56.9136 682.627 61.187 682.789 61.3672 cv
681.994 62.0708 li
681.96 62.0303 678.402 58.0752 674.913 58.7505 cv
672.798 59.1655 671.076 61.2153 669.797 64.8447 cv
cp
.4 .7 1 .5 cmyk
f
731.739 55.2158 mo
732.268 58.6919 730.883 61.7861 728.647 62.125 cv
726.411 62.4619 724.172 59.9175 723.646 56.4409 cv
723.12 52.9658 724.504 49.8711 726.741 49.5332 cv
728.977 49.1948 731.215 51.7393 731.739 55.2158 cv
cp
.4 .65 .9 .35 cmyk
f
771.359 40.4199 mo
772.491 46.2246 768.175 51.9512 761.724 53.21 cv
755.269 54.4683 760.102 50.061 758.968 44.2549 cv
757.838 38.4492 751.17 33.4443 757.622 32.1846 cv
764.078 30.9272 770.228 34.6128 771.359 40.4199 cv
cp
0 .3 .5 0 cmyk
f
630.477 60.9888 mo
631.148 66.8657 636.989 71.0244 643.522 70.2783 cv
650.053 69.5308 645.584 64.396 644.911 58.519 cv
644.241 52.6416 647.623 48.2495 641.089 48.9956 cv
634.556 49.7432 629.803 55.1108 630.477 60.9888 cv
cp
f
708.908 66.3716 mo
709.318 68.6797 706.493 71.1118 702.599 71.8047 cv
698.704 72.499 695.211 71.187 694.802 68.8794 cv
694.392 66.5723 697.217 64.1396 701.11 63.4453 cv
705.007 62.752 708.497 64.063 708.908 66.3716 cv
cp
.34 .71 .89 .18 cmyk
f
683.42 83.6514 mo
683.42 83.6514 704.446 73.4512 724.608 78.0547 cv
724.608 78.0547 726.756 103.857 706.583 106.173 cv
706.583 106.173 685.133 108.395 683.42 83.6514 cv
cp
0 0 0 0 cmyk
f
424.832 342.938 mo
432.526 336.467 423.438 317.53 412.89 321.326 cv
408.007 318.446 402.444 314.108 397.429 317.325 cv
382.635 326.819 413.296 352.64 424.832 342.938 cv
cp
.373056 .779028 .976528 .1975 cmyk
f
316.497 352.809 mo
303.071 349.603 317.353 324.028 327.71 320.654 cv
332.002 319.256 341.612 315.835 344.295 320.134 cv
346.705 323.992 342.779 331.235 340.331 335.392 cv
334.949 344.534 325.012 354.836 316.497 352.809 cv
cp
.361111 .828704 1 .268519 cmyk
f
428.771 259.748 mo
423.666 249.224 409.268 240.117 397.229 247.232 cv
386.609 253.51 381.695 274.294 396.639 274.429 cv
404.698 274.503 399.202 266.84 399.373 262.575 cv
400.02 246.505 417.471 255.757 421.397 264.592 cv
428.362 280.258 417.148 292.701 404.942 301.79 cv
401.725 296.741 395.957 293.627 387.689 293.962 cv
377.737 294.361 367.45 297.983 357.583 295.891 cv
349.844 294.252 345.306 288.66 337.129 291.927 cv
322.66 297.704 301.66 319.276 323.601 338.607 cv
326.995 341.599 331.099 343.566 335.623 344.894 cv
335.915 348.417 336.119 352.042 335.8 355.643 cv
321.127 348.771 323.306 375.605 341.711 373.533 cv
353.04 372.255 354.28 358.518 354.398 347.517 cv
358.04 347.679 368.9 344.782 372.534 344.863 cv
375.022 349.845 375.833 352.523 378.829 356.786 cv
364.764 372.247 389.541 382.371 402.438 368.003 cv
407.85 361.974 401.551 349.666 394.971 340.693 cv
403.928 336.636 407.43 332.704 410.396 321.838 cv
411.282 318.6 408.057 315.186 407.953 312.227 cv
417.92 307.064 427.025 299.599 430.532 288.952 cv
433.766 279.139 433.483 269.465 428.771 259.748 cv
cp
.34 .71 .89 .18 cmyk
f
344.152 298.434 mo
329.793 299.203 311.59 308.822 317.158 326.698 cv
321.789 341.564 339.405 343.23 351.71 342.201 cv
365.468 341.045 383.031 340.813 393.417 331.922 cv
402.071 324.506 405.132 306.665 392.447 297.201 cv
385.991 292.389 378.756 296.585 372.066 297.625 cv
362.97 299.037 353.393 297.943 344.152 298.434 cv
cp
.281714 .63 .86 .149143 cmyk
f
389.302 250.189 mo
386.476 250.131 383.826 250.854 381.536 252.134 cv
373.494 232.463 353.707 217.937 329.805 216.581 cv
306.342 215.25 285.374 226.979 274.952 245.04 cv
273.247 244.154 271.344 243.571 269.307 243.381 cv
260.991 242.604 253.632 248.596 252.869 256.767 cv
252.104 264.938 258.228 272.19 266.543 272.967 cv
267.048 273.016 267.548 273.035 268.044 273.032 cv
269.18 301.066 293.029 324.331 323.594 326.066 cv
354.287 327.805 380.704 307.208 384.836 279.308 cv
386.069 279.655 387.361 279.869 388.704 279.897 cv
397.054 280.066 403.957 273.552 404.123 265.348 cv
404.288 257.143 397.653 250.357 389.302 250.189 cv
cp
.34 .71 .89 .18 cmyk
f
323.936 320.058 mo
296.527 318.503 275.084 298.181 274.055 272.789 cv
273.931 269.679 271.458 267.199 268.39 267.024 cv
268.268 267.018 268.146 267.016 268.02 267.016 cv
267.823 267.017 267.624 267.011 267.427 267 cv
267.319 266.994 267.212 266.985 267.106 266.976 cv
264.661 266.748 262.457 265.606 260.899 263.759 cv
259.365 261.942 258.64 259.658 258.858 257.327 cv
259.304 252.573 263.492 249.066 268.396 249.345 cv
268.513 249.351 268.63 249.36 268.747 249.371 cv
269.952 249.483 271.106 249.823 272.179 250.379 cv
272.958 250.784 273.783 251.001 274.608 251.048 cv
276.81 251.173 278.992 250.077 280.163 248.047 cv
289.754 231.426 309.106 221.432 329.465 222.587 cv
350.294 223.77 368.546 236.261 375.966 254.411 cv
376.619 256.006 377.923 257.245 379.551 257.813 cv
380.086 258.001 380.641 258.109 381.197 258.141 cv
382.326 258.205 383.464 257.949 384.474 257.385 cv
385.935 256.567 387.519 256.17 389.18 256.205 cv
389.3 256.206 389.417 256.21 389.533 256.217 cv
394.438 256.495 398.204 260.453 398.108 265.227 cv
398.061 267.567 397.082 269.754 395.353 271.387 cv
393.595 273.045 391.275 273.931 388.823 273.882 cv
388.722 273.879 388.621 273.875 388.519 273.87 cv
387.856 273.832 387.166 273.713 386.47 273.517 cv
386.044 273.396 385.61 273.325 385.175 273.3 cv
383.914 273.229 382.648 273.556 381.568 274.256 cv
380.115 275.195 379.137 276.714 378.883 278.425 cv
375.199 303.312 351.063 321.597 323.936 320.058 cv
cp
.281714 .63 .86 .149143 cmyk
f
379.582 295.553 mo
378.826 288.931 375.746 282.902 369.568 280.082 cv
371.685 274.934 373.051 269.508 372.099 263.912 cv
367.745 238.288 337.09 238.311 329.333 261.768 cv
327.266 256.394 324.885 250.924 320.634 247.125 cv
301.412 229.946 274.792 249.517 284.931 273.315 cv
280.875 277.594 277.107 282.384 276.042 288.452 cv
275.392 292.16 275.457 295.592 276.103 298.764 cv
285.763 314.139 303.179 324.907 323.594 326.066 cv
347.939 327.447 369.599 314.773 379.582 295.553 cv
cp
0 .3 .5 0 cmyk
f
369.889 282.182 mo
370.006 284.089 364.255 286 357.035 286.45 cv
349.82 286.9 343.874 285.721 343.755 283.812 cv
343.636 281.905 349.387 279.994 356.608 279.542 cv
363.825 279.093 369.769 280.273 369.889 282.182 cv
cp
level3{
gsave
clp
[10.0628 .801591 -2.36428 5.44042 356.821 282.997 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.0628 .801591 -2.36428 5.44042 356.821 282.997 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
310.02 281.403 mo
309.812 283.303 303.819 284.209 296.629 283.427 cv
289.44 282.646 283.782 280.475 283.988 278.575 cv
284.194 276.675 290.188 275.765 297.379 276.549 cv
304.567 277.33 310.226 279.504 310.02 281.403 cv
cp
level3{
gsave
clp
[9.78128 2.49799 -3.25313 4.96041 297.004 279.988 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.78128 2.49799 -3.25313 4.96041 297.004 279.988 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
337.359 297.828 mo
332.742 297.828 328.934 294.788 325.511 292.057 cv
325.156 291.773 li
321.872 294.815 316.052 296.503 311.38 295.719 cv
307.83 295.125 305.193 293.221 303.753 290.215 cv
303.627 289.951 303.737 289.634 304.002 289.507 cv
304.266 289.378 304.583 289.492 304.709 289.757 cv
306.332 293.144 309.329 294.299 311.555 294.673 cv
316.082 295.43 321.754 293.723 324.743 290.695 cv
324.935 290.503 325.241 290.484 325.451 290.652 cv
326.172 291.227 li
330.017 294.293 334.373 297.771 339.663 296.486 cv
342.854 295.714 346.833 293.469 348.532 290.2 cv
348.667 289.939 348.988 289.839 349.249 289.973 cv
349.508 290.109 349.609 290.43 349.475 290.689 cv
347.622 294.255 343.337 296.688 339.914 297.517 cv
339.035 297.73 338.183 297.828 337.359 297.828 cv
cp
.4 .7 1 .5 cmyk
f
306.484 268.938 mo
306.286 272.448 304.295 275.191 302.038 275.063 cv
299.781 274.936 298.11 271.985 298.311 268.474 cv
298.509 264.963 300.501 262.221 302.76 262.349 cv
305.016 262.478 306.685 265.428 306.484 268.938 cv
cp
.4 .65 .9 .35 cmyk
f
356.288 271.763 mo
356.089 275.274 354.099 278.016 351.839 277.89 cv
349.583 277.761 347.914 274.811 348.115 271.299 cv
348.313 267.789 350.304 265.046 352.561 265.174 cv
354.819 265.303 356.487 268.252 356.288 271.763 cv
cp
f
398.874 265.626 mo
398.788 271.54 393.389 276.258 386.813 276.164 cv
380.24 276.07 385.874 272.748 385.958 266.834 cv
386.043 260.919 380.546 254.651 387.122 254.746 cv
393.696 254.84 398.959 259.71 398.874 265.626 cv
cp
0 .3 .5 0 cmyk
f
256.769 256.811 mo
256.218 262.701 261.082 267.97 267.628 268.583 cv
274.175 269.193 269.267 263.446 269.819 257.558 cv
270.367 251.667 276.167 247.867 269.62 247.255 cv
263.073 246.643 257.32 250.921 256.769 256.811 cv
cp
f
334.026 278.018 mo
333.954 280.361 330.69 282.162 326.735 282.039 cv
322.781 281.919 319.632 279.917 319.705 277.574 cv
319.779 275.232 323.042 273.431 326.997 273.553 cv
330.951 273.675 334.099 275.676 334.026 278.018 cv
cp
.34 .71 .89 .18 cmyk
f
724.802 551.323 mo
738.418 549.063 725.958 522.554 715.861 518.465 cv
711.678 516.769 702.328 512.685 699.353 516.785 cv
696.68 520.466 700.088 527.966 702.241 532.284 cv
706.971 541.78 716.164 552.751 724.802 551.323 cv
cp
.361111 .828704 1 .268519 cmyk
f
802.739 553.578 mo
799.05 551.004 794.854 548.708 790.664 546.672 cv
786.442 544.631 782.093 542.837 777.661 541.283 cv
768.793 538.177 759.587 536.028 750.259 534.883 cv
731.589 532.561 712.483 534.4 694.435 539.794 cv
676.353 545.159 659.348 553.932 643.797 564.719 cv
628.226 575.521 614.041 588.309 601.023 602.162 cv
600.054 603.195 598.43 603.245 597.397 602.276 cv
596.411 601.349 596.321 599.823 597.163 598.789 cv
597.28 598.647 li
598.812 596.774 600.364 594.915 601.938 593.073 cv
603.535 591.251 605.168 589.461 606.814 587.68 cv
610.113 584.122 613.502 580.636 616.985 577.232 cv
624.021 570.507 631.466 564.143 639.397 558.372 cv
647.284 552.535 655.7 547.367 664.471 542.809 cv
673.258 538.28 682.503 534.564 692.021 531.665 cv
701.566 528.848 711.417 526.974 721.364 526.146 cv
731.315 525.441 741.36 525.64 751.206 527.168 cv
756.128 527.915 761.011 528.888 765.805 530.185 cv
770.594 531.494 775.308 533.05 779.91 534.865 cv
784.492 536.744 788.962 538.864 793.29 541.237 cv
795.455 542.427 797.584 543.675 799.667 545.007 cv
801.74 546.385 803.734 547.779 805.744 549.41 cv
805.827 549.479 li
806.928 550.371 807.097 551.989 806.202 553.091 cv
805.351 554.141 803.833 554.337 802.739 553.578 cv
cp
.29 .1 1 .1 cmyk
f
622.358 583.89 mo
622.358 583.89 607.675 593.519 629.652 607.771 cv
629.652 607.771 639.948 586.15 622.358 583.89 cv
cp
.66 .1 1 .1 cmyk
f
736.212 532.335 mo
736.212 532.335 725.665 545.389 749.826 551.935 cv
749.826 551.935 752.877 529.252 736.212 532.335 cv
cp
f
608.917 585.054 mo
608.917 585.054 596.843 607.989 572.796 577.715 cv
572.796 577.715 603.106 559.529 608.917 585.054 cv
cp
.46 .1 1 .1 cmyk
f
637.908 563.664 mo
637.908 563.664 624.053 579.279 611.069 550.973 cv
611.069 550.973 638.272 542.581 637.908 563.664 cv
cp
.66 .1 1 .1 cmyk
f
790.068 541.6 mo
790.068 541.6 810.886 557.039 819.443 519.335 cv
819.443 519.335 784.248 516.078 790.068 541.6 cv
cp
.46 .1 1 .1 cmyk
f
763.67 530.479 mo
763.67 530.479 780.284 537.442 779.801 510.574 cv
779.801 510.574 755.504 514.217 763.67 530.479 cv
cp
.66 .1 1 .1 cmyk
f
617.42 533.905 mo
610.196 526.913 620.584 508.658 630.844 513.184 cv
635.915 510.652 641.767 506.712 646.546 510.271 cv
660.639 520.777 628.248 544.393 617.42 533.905 cv
cp
.373056 .779028 .976528 .1975 cmyk
f
619.304 450.646 mo
625.131 440.502 640.132 432.425 651.643 440.364 cv
661.796 447.368 665.249 468.446 650.329 467.532 cv
642.286 467.047 648.305 459.785 648.433 455.52 cv
648.909 439.443 630.854 447.452 626.32 455.99 cv
618.277 471.134 628.594 484.331 640.135 494.248 cv
643.696 489.436 649.67 486.731 657.894 487.644 cv
667.792 488.738 677.801 493.071 687.793 491.675 cv
695.624 490.581 700.543 485.317 708.471 489.148 cv
722.502 495.924 741.943 518.91 718.706 536.66 cv
715.11 539.407 710.88 541.081 706.275 542.09 cv
705.736 545.584 705.281 549.189 705.345 552.803 cv
720.464 546.976 716.413 573.588 698.198 570.234 cv
686.988 568.17 686.711 554.378 687.361 543.396 cv
683.719 543.303 673.086 539.653 669.457 539.481 cv
666.627 544.277 665.629 546.892 662.343 550.937 cv
675.293 567.34 649.869 575.71 638.007 560.474 cv
633.03 554.082 640.175 542.244 647.367 533.753 cv
638.713 529.081 635.495 524.915 633.294 513.867 cv
632.638 510.574 636.093 507.394 636.403 504.449 cv
626.82 498.603 618.261 490.519 615.505 479.654 cv
612.966 469.641 613.923 460.012 619.304 450.646 cv
cp
.34 .71 .89 .18 cmyk
f
701.013 495.15 mo
715.282 496.919 732.77 507.787 725.966 525.229 cv
720.307 539.736 702.616 540.168 690.413 538.28 cv
676.772 536.168 659.266 534.708 649.526 525.111 cv
641.411 517.113 639.604 499.1 652.922 490.545 cv
659.697 486.194 666.622 490.887 673.222 492.392 cv
682.197 494.436 691.828 494.012 701.013 495.15 cv
cp
.281714 .63 .86 .149143 cmyk
f
794.776 471.179 mo
793.672 479.011 786.313 484.442 778.344 483.319 cv
770.373 482.191 764.809 474.933 765.915 467.102 cv
767.021 459.273 774.379 453.841 782.349 454.968 cv
790.316 456.091 795.881 463.349 794.776 471.179 cv
cp
.34 .71 .89 .18 cmyk
f
788.916 470.997 mo
788.118 476.643 782.385 480.497 776.112 479.613 cv
769.838 478.727 765.396 473.432 766.194 467.787 cv
766.989 462.145 772.724 458.287 778.998 459.172 cv
785.271 460.06 789.714 465.352 788.916 470.997 cv
cp
0 .3 .5 0 cmyk
f
730.856 408.577 mo
700.419 404.278 672.278 423.903 666.366 452.84 cv
665.68 452.644 664.979 452.478 664.251 452.375 cv
655.722 451.172 647.85 456.987 646.667 465.365 cv
645.482 473.745 651.437 481.512 659.964 482.718 cv
662.869 483.128 665.688 482.708 668.2 481.668 cv
674.945 501.38 692.618 516.783 715.123 519.96 cv
746.719 524.425 775.857 503.109 780.201 472.351 cv
784.544 441.592 762.451 413.038 730.856 408.577 cv
cp
.34 .71 .89 .18 cmyk
f
719.757 514.404 mo
746.646 516.288 770.58 497.444 774.244 471.509 cv
778.115 444.084 758.275 418.528 730.015 414.533 cv
728.758 414.355 727.481 414.221 726.222 414.134 cv
700.475 412.33 677.276 429.488 672.261 454.041 cv
671.927 455.685 670.925 457.108 669.494 457.979 cv
668.421 458.63 667.18 458.928 665.946 458.84 cv
665.537 458.812 665.128 458.743 664.727 458.629 cv
664.199 458.48 663.781 458.384 663.416 458.333 cv
663.174 458.299 662.938 458.274 662.703 458.258 cv
657.729 457.91 653.302 461.399 652.625 466.206 cv
652.278 468.648 652.927 471.086 654.448 473.072 cv
655.994 475.092 658.254 476.401 660.808 476.761 cv
661.036 476.793 661.266 476.816 661.492 476.833 cv
663.001 476.937 664.482 476.694 665.898 476.109 cv
666.769 475.747 667.702 475.601 668.622 475.664 cv
669.326 475.714 670.024 475.887 670.679 476.184 cv
672.192 476.866 673.356 478.148 673.894 479.719 cv
680.177 498.09 696.299 511.227 715.965 514.004 cv
717.222 514.183 718.498 514.317 719.757 514.404 cv
cp
.281714 .63 .86 .149143 cmyk
f
666.834 468.216 mo
666.02 473.983 666.505 478.823 660.631 477.993 cv
654.76 477.162 650.658 471.813 651.475 466.042 cv
652.291 460.275 657.711 456.271 663.583 457.099 cv
669.454 457.93 667.649 462.447 666.834 468.216 cv
cp
0 .3 .5 0 cmyk
f
779.355 476.852 mo
772.941 505.153 745.15 524.204 715.123 519.96 cv
697.324 517.448 682.542 507.291 673.8 493.399 cv
673.614 482.06 677.486 470.88 688.002 465.552 cv
682.235 447.278 694.829 426.958 715.872 435.82 cv
720.416 437.735 724.021 441.314 727.149 445.038 cv
733.721 436.96 746.068 430.461 756.449 435.805 cv
756.449 435.805 771.223 442.682 765.104 460.405 cv
765.104 460.405 780.362 462.767 779.355 476.852 cv
cp
f
686.08 475.849 mo
685.983 477.758 691.755 479.608 698.979 479.98 cv
706.199 480.353 712.133 479.109 712.229 477.201 cv
712.327 475.292 706.559 473.442 699.333 473.069 cv
692.112 472.697 686.179 473.941 686.08 475.849 cv
cp
level3{
gsave
clp
[-10.0532 .908806 2.42166 5.41454 699.155 476.525 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-10.0532 .908806 2.42166 5.41454 699.155 476.525 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
745.93 474.532 mo
746.018 476.44 751.942 477.723 759.168 477.393 cv
766.392 477.066 772.176 475.252 772.088 473.343 cv
772 471.434 766.077 470.151 758.851 470.48 cv
751.628 470.808 745.842 472.622 745.93 474.532 cv
cp
level3{
gsave
clp
[-9.91986 1.87868 2.93541 5.15502 759.01 473.937 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-9.91986 1.87868 2.93541 5.15502 759.01 473.937 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
710.259 484.933 mo
710.259 484.933 731.902 476.114 751.726 482.012 cv
751.726 482.012 752.2 507.899 731.918 508.906 cv
731.918 508.906 710.37 509.738 710.259 484.933 cv
cp
0 0 0 0 cmyk
f
710.894 462.764 mo
710.698 466.712 708.708 469.824 706.453 469.712 cv
704.197 469.599 702.527 466.307 702.724 462.357 cv
702.918 458.41 704.908 455.3 707.165 455.412 cv
709.421 455.523 711.09 458.815 710.894 462.764 cv
cp
.4 .65 .9 .35 cmyk
f
738.559 468.939 mo
738.702 471.28 735.618 473.372 731.667 473.612 cv
727.72 473.855 724.4 472.15 724.26 469.812 cv
724.117 467.473 727.204 465.38 731.153 465.14 cv
735.101 464.897 738.416 466.601 738.559 468.939 cv
cp
.34 .71 .89 .18 cmyk
f
745.009 463.198 mo
744.107 462.637 li
746.363 459.03 748.819 457.241 751.365 457.31 cv
755.525 457.426 758.33 462.432 758.448 462.646 cv
757.519 463.157 li
757.494 463.11 754.885 458.467 751.333 458.371 cv
749.169 458.285 747.049 459.937 745.009 463.198 cv
cp
.4 .7 1 .5 cmyk
f
91.3823 758.891 mo
78.5781 753.735 96.4839 730.553 107.228 728.748 cv
111.678 727.998 121.69 726.035 123.708 730.685 cv
125.52 734.855 120.567 741.439 117.53 745.188 cv
110.856 753.436 99.5059 762.154 91.3823 758.891 cv
cp
.361111 .828704 1 .268519 cmyk
f
199.987 765.142 mo
208.553 759.88 202.367 739.808 191.371 742.003 cv
186.968 738.436 182.108 733.321 176.672 735.759 cv
160.638 742.965 187.146 773.034 199.987 765.142 cv
cp
.373056 .779028 .976528 .1975 cmyk
f
240.434 790.349 mo
237.389 787.035 233.791 783.888 230.14 780.991 cv
226.461 778.083 222.603 775.39 218.613 772.913 cv
210.628 767.96 202.105 763.869 193.247 760.731 cv
175.523 754.42 156.473 752.078 137.684 753.436 cv
118.87 754.757 100.368 759.64 82.8501 766.803 cv
65.3091 773.976 48.6924 783.387 32.9829 794.093 cv
31.8125 794.891 30.2163 794.589 29.4185 793.419 cv
28.6567 792.3 28.8984 790.791 29.9443 789.964 cv
30.0894 789.851 li
31.9893 788.354 33.9087 786.875 35.8452 785.418 cv
37.7974 783.985 39.7793 782.591 41.7734 781.208 cv
45.7637 778.449 49.8271 775.779 53.9653 773.212 cv
62.291 768.169 70.9365 763.569 79.9297 759.652 cv
88.8931 755.663 98.2285 752.44 107.778 749.89 cv
117.337 747.371 127.167 745.745 137.088 744.976 cv
147.017 744.294 157.04 744.598 166.931 745.943 cv
176.798 747.411 186.561 749.781 195.842 753.404 cv
200.485 755.198 205.042 757.206 209.442 759.511 cv
213.833 761.826 218.099 764.366 222.198 767.136 cv
226.265 769.961 230.169 772.999 233.881 776.254 cv
235.737 777.885 237.545 779.563 239.291 781.314 cv
241.015 783.109 242.66 784.902 244.269 786.931 cv
244.335 787.015 li
245.217 788.125 245.031 789.74 243.92 790.623 cv
242.86 791.464 241.336 791.326 240.434 790.349 cv
cp
.29 .1 1 .1 cmyk
f
57.7686 780.874 mo
57.7686 780.874 41.3467 787.096 59.7173 805.768 cv
59.7173 805.768 74.4507 786.892 57.7686 780.874 cv
cp
.66 .1 1 .1 cmyk
f
180.084 755.2 mo
180.084 755.2 166.962 765.661 189.131 777.283 cv
189.131 777.283 197.023 755.802 180.084 755.2 cv
cp
f
44.3936 779.1 mo
44.3936 779.1 27.6392 798.876 10.7197 764.112 cv
10.7197 764.112 44.249 752.923 44.3936 779.1 cv
cp
.46 .1 1 .1 cmyk
f
77.3291 764.497 mo
77.3291 764.497 60.4209 776.74 53.8765 746.293 cv
53.8765 746.293 82.2505 743.993 77.3291 764.497 cv
cp
.66 .1 1 .1 cmyk
f
230.657 775.91 mo
230.657 775.91 247.636 795.492 264.157 760.536 cv
264.157 760.536 230.502 749.732 230.657 775.91 cv
cp
.46 .1 1 .1 cmyk
f
207.294 759.335 mo
207.294 759.335 222.005 769.732 227.352 743.397 cv
227.352 743.397 202.844 741.69 207.294 759.335 cv
cp
.66 .1 1 .1 cmyk
f
216.182 683.45 mo
212.688 672.285 199.793 661.15 186.837 666.409 cv
175.406 671.047 167.471 690.877 182.233 693.217 cv
190.191 694.484 185.888 686.091 186.688 681.899 cv
189.704 666.103 205.597 677.831 208.173 687.147 cv
212.745 703.674 199.816 714.323 186.4 721.506 cv
183.966 716.037 178.721 712.104 170.494 711.212 cv
160.593 710.138 149.884 712.2 140.431 708.672 cv
133.022 705.907 129.361 699.704 120.791 701.727 cv
105.625 705.303 81.6675 723.533 100.509 745.895 cv
103.425 749.354 107.192 751.905 111.469 753.888 cv
111.239 757.415 110.902 761.032 110.056 764.549 cv
96.5586 755.584 94.749 782.442 113.259 783.113 cv
124.65 783.526 127.908 770.121 129.651 759.259 cv
133.227 759.957 144.398 758.696 147.978 759.315 cv
149.702 764.61 150.111 767.379 152.444 772.039 cv
136.248 785.249 159.255 798.927 174.135 786.621 cv
180.378 781.457 175.968 768.354 170.784 758.507 cv
180.245 755.82 184.289 752.45 188.83 742.14 cv
190.185 739.068 187.5 735.214 187.835 732.273 cv
198.457 728.642 208.563 722.604 213.606 712.593 cv
218.254 703.367 219.406 693.758 216.182 683.45 cv
cp
.34 .71 .89 .18 cmyk
f
126.771 709.202 mo
112.459 707.839 93.0317 714.662 95.897 733.163 cv
98.2793 748.552 115.457 752.804 127.78 753.604 cv
141.554 754.496 158.961 756.861 170.547 749.604 cv
180.203 743.552 185.868 726.357 174.719 715.121 cv
169.046 709.407 161.27 712.488 154.502 712.526 cv
145.296 712.579 135.985 710.08 126.771 709.202 cv
cp
.281714 .63 .86 .149143 cmyk
f
40.4258 665.493 mo
39.8086 673.378 45.8149 680.274 53.8389 680.904 cv
61.8647 681.529 68.8687 675.648 69.4844 667.764 cv
70.1006 659.881 64.0938 652.983 56.0703 652.357 cv
48.0469 651.728 41.043 657.609 40.4258 665.493 cv
cp
.34 .71 .89 .18 cmyk
f
46.186 666.584 mo
45.7422 672.27 50.5054 677.273 56.8208 677.77 cv
63.1377 678.262 68.6201 674.055 69.0635 668.372 cv
69.5098 662.69 64.7466 657.683 58.4297 657.188 cv
52.1128 656.696 46.6309 660.901 46.186 666.584 cv
cp
0 .3 .5 0 cmyk
f
116.387 618.221 mo
147.032 620.615 170.255 645.87 169.76 675.398 cv
170.472 675.357 171.192 675.346 171.926 675.404 cv
180.512 676.076 186.939 683.459 186.28 691.894 cv
185.62 700.333 178.126 706.624 169.539 705.955 cv
166.615 705.727 163.953 704.705 161.725 703.146 cv
150.873 720.93 130.282 732.14 107.623 730.367 cv
75.811 727.883 51.9805 700.762 54.4019 669.793 cv
56.8237 638.825 84.5747 615.733 116.387 618.221 cv
cp
.34 .71 .89 .18 cmyk
f
104.303 723.938 mo
77.6436 719.954 58.3594 696.376 60.3999 670.262 cv
62.5586 642.649 87.4639 621.997 115.919 624.218 cv
117.185 624.315 118.459 624.461 119.708 624.649 cv
145.234 628.465 164.165 650.239 163.745 675.295 cv
163.716 676.972 164.384 678.58 165.592 679.739 cv
166.5 680.607 167.647 681.167 168.87 681.349 cv
169.276 681.409 169.69 681.431 170.106 681.407 cv
170.654 681.375 171.083 681.371 171.45 681.401 cv
171.694 681.421 171.93 681.447 172.162 681.482 cv
177.093 682.219 180.661 686.585 180.28 691.424 cv
180.089 693.883 178.928 696.123 177.013 697.731 cv
175.066 699.369 172.577 700.159 170.007 699.956 cv
169.776 699.938 169.546 699.912 169.323 699.879 cv
167.826 699.653 166.432 699.096 165.177 698.218 cv
164.405 697.677 163.527 697.331 162.614 697.194 cv
161.916 697.089 161.198 697.107 160.494 697.255 cv
158.868 697.594 157.455 698.594 156.589 700.01 cv
146.477 716.585 127.893 725.918 108.093 724.369 cv
106.827 724.272 105.551 724.127 104.303 723.938 cv
cp
.281714 .63 .86 .149143 cmyk
f
165.973 690.31 mo
165.519 696.116 163.998 700.736 169.912 701.197 cv
175.823 701.658 180.986 697.323 181.439 691.514 cv
181.891 685.707 177.467 680.624 171.556 680.159 cv
165.643 679.701 166.427 684.501 165.973 690.31 cv
cp
0 .3 .5 0 cmyk
f
54.2515 674.37 mo
54.3848 703.39 77.3901 728.007 107.623 730.367 cv
125.544 731.77 142.176 725.056 153.718 713.386 cv
156.355 702.355 154.997 690.603 145.885 683.124 cv
155.472 666.532 147.578 643.969 125.114 648.062 cv
120.264 648.948 115.969 651.661 112.108 654.619 cv
107.444 645.309 96.7964 636.29 85.5044 639.259 cv
85.5044 639.259 69.5918 642.773 71.7266 661.401 cv
71.7266 661.401 56.3188 660.402 54.2515 674.37 cv
cp
f
145.532 693.593 mo
145.212 695.478 139.177 696.035 132.043 694.832 cv
124.914 693.632 119.391 691.133 119.71 689.25 cv
120.027 687.364 126.06 686.809 133.194 688.009 cv
140.325 689.209 145.848 691.709 145.532 693.593 cv
cp
level3{
gsave
clp
[9.6178 3.0645 -3.53683 4.76156 132.62 691.422 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.6178 3.0645 -3.53683 4.76156 132.62 691.422 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
87.3867 679.346 mo
86.8867 681.189 80.8262 681.157 73.8438 679.271 cv
66.8628 677.388 61.6074 674.364 62.1074 672.52 cv
62.606 670.675 68.666 670.705 75.6499 672.592 cv
82.6309 674.475 87.8862 677.5 87.3867 679.346 cv
cp
level3{
gsave
clp
[9.27697 3.98223 -3.98193 4.39667 74.7461 675.931 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.27697 3.98223 -3.98193 4.39667 74.7461 675.931 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
119.959 697.225 mo
119.959 697.225 100.738 683.929 80.1084 685.392 cv
80.1084 685.392 74.0381 710.563 93.6221 715.938 cv
93.6221 715.938 114.478 721.418 119.959 697.225 cv
cp
0 0 0 0 cmyk
f
124.14 675.445 mo
123.477 679.341 124.745 682.811 126.971 683.19 cv
129.198 683.566 131.541 680.715 132.205 676.817 cv
132.869 672.92 131.6 669.454 129.373 669.074 cv
127.146 668.695 124.803 671.548 124.14 675.445 cv
cp
.4 .65 .9 .35 cmyk
f
95.7935 675.482 mo
95.147 677.736 97.7046 680.445 101.51 681.536 cv
105.312 682.629 108.92 681.684 109.565 679.43 cv
110.211 677.178 107.651 674.466 103.847 673.376 cv
100.045 672.285 96.4399 673.229 95.7935 675.482 cv
cp
.34 .71 .89 .18 cmyk
f
90.7412 668.48 mo
91.7422 668.127 li
90.3203 664.118 88.3096 661.839 85.8105 661.355 cv
81.7236 660.567 77.9014 664.848 77.7402 665.029 cv
78.5356 665.729 li
78.5703 665.69 82.123 661.722 85.6113 662.398 cv
87.7432 662.782 89.4556 664.854 90.7412 668.48 cv
cp
.4 .7 1 .5 cmyk
f
23.8921 263.929 mo
26.9185 267.258 30.4995 270.429 34.1318 273.346 cv
37.7954 276.272 41.6372 278.987 45.6128 281.488 cv
53.5698 286.488 62.0688 290.628 70.9092 293.817 cv
88.5952 300.23 107.633 302.68 126.429 301.432 cv
145.251 300.218 163.779 295.442 181.338 288.379 cv
198.921 281.307 215.592 271.991 231.362 261.375 cv
232.538 260.583 234.131 260.894 234.923 262.07 cv
235.679 263.194 235.428 264.7 234.376 265.521 cv
234.231 265.634 li
232.322 267.12 230.395 268.587 228.451 270.034 cv
226.489 271.457 224.499 272.838 222.498 274.209 cv
218.492 276.946 214.415 279.591 210.261 282.136 cv
201.906 287.13 193.234 291.682 184.219 295.546 cv
175.232 299.484 165.877 302.652 156.313 305.15 cv
146.739 307.614 136.901 309.181 126.976 309.895 cv
117.044 310.519 107.021 310.158 97.1382 308.756 cv
87.2808 307.23 77.5322 304.807 68.2715 301.129 cv
63.6387 299.307 59.0923 297.275 54.7075 294.944 cv
50.3281 292.604 46.0786 290.038 41.9946 287.245 cv
37.9438 284.397 34.0562 281.336 30.3643 278.06 cv
28.5195 276.42 26.7188 274.731 24.9834 272.968 cv
23.269 271.165 21.6357 269.362 20.0386 267.324 cv
19.9712 267.239 li
19.0967 266.124 19.2915 264.509 20.4082 263.635 cv
21.4717 262.801 22.9961 262.947 23.8921 263.929 cv
cp
.29 .1 1 .1 cmyk
f
222.548 267.717 mo
222.548 267.717 239.004 261.588 220.742 242.811 cv
220.742 242.811 205.898 261.602 222.548 267.717 cv
cp
.66 .1 1 .1 cmyk
f
46.9268 284.457 mo
46.9268 284.457 62.9688 271.819 36.0688 257.521 cv
36.0688 257.521 26.3164 283.609 46.9268 284.457 cv
cp
f
219.865 276.303 mo
219.865 276.303 236.733 256.624 253.452 291.483 cv
253.452 291.483 219.861 302.48 219.865 276.303 cv
cp
.46 .1 1 .1 cmyk
f
186.846 290.718 mo
186.846 290.718 203.825 278.57 210.195 309.053 cv
210.195 309.053 181.806 311.192 186.846 290.718 cv
cp
.66 .1 1 .1 cmyk
f
33.5864 278.425 mo
33.5864 278.425 16.7183 258.746 0 293.606 cv
0 293.606 33.5913 304.604 33.5864 278.425 cv
cp
.46 .1 1 .1 cmyk
f
56.8535 295.133 mo
56.8535 295.133 42.2046 284.651 36.7051 310.955 cv
36.7051 310.955 61.2031 312.801 56.8535 295.133 cv
cp
.66 .1 1 .1 cmyk
f
159.216 366.415 mo
160.808 345.72 li
143.298 343.066 li
141.175 350.496 li
141.175 368.536 149.134 367.476 149.134 367.476 cv
159.216 366.415 li
cp
.382023 .797753 1 .33 cmyk
f
94.481 366.945 mo
92.8892 346.25 li
110.4 343.597 li
112.522 351.026 li
112.522 369.067 104.563 368.006 104.563 368.006 cv
94.481 366.945 li
cp
f
167.768 316.115 mo
160.37 346.792 182.799 345.99 205.308 342.688 cv
224.415 339.882 244.749 350.693 228.317 370.493 cv
221.984 378.127 209.258 384.983 199.353 379.628 cv
189.083 374.077 194.263 370.166 202.454 366.921 cv
207.994 364.73 221.178 364.912 216.91 356.352 cv
212.819 348.147 195.706 352.121 189.386 353.339 cv
161.638 358.691 151.957 344.767 153.568 317.498 cv
156.272 318.431 159.591 318.644 162.583 318.711 cv
165.759 318.779 168.734 316.194 167.117 318.714 cv
167.768 316.115 li
cp
.361111 .828704 1 .268519 cmyk
f
195.25 282.679 mo
187.936 279.445 173.964 289.64 168.16 293.242 cv
167.088 293.907 166.054 294.684 165.095 295.553 cv
157.291 283.565 143.047 275.54 126.765 275.54 cv
109.921 275.54 95.2622 284.127 87.6528 296.804 cv
86.8047 296.072 85.9023 295.411 84.9731 294.834 cv
79.1694 291.231 65.1968 281.038 57.8833 284.271 cv
38.8096 292.698 65.5137 307.606 69.4487 311.14 cv
73.6753 314.934 77.501 318.837 82.3271 320.806 cv
84.5854 341.57 103.618 357.786 126.765 357.786 cv
150.496 357.786 169.896 340.739 171.332 319.223 cv
175.843 316.006 179.607 313.209 183.685 309.547 cv
187.62 306.016 214.324 291.106 195.25 282.679 cv
cp
.34 .71 .89 .18 cmyk
f
126.765 351.769 mo
106.8 351.769 90.2676 338.178 88.3081 320.158 cv
88.0698 317.961 86.647 316.071 84.6025 315.236 cv
81.4536 313.951 78.5957 311.339 75.2856 308.313 cv
74.687 307.767 74.0815 307.213 73.4697 306.665 cv
72.6011 305.883 71.3887 305.025 69.71 303.835 cv
58.9995 296.236 57.186 293.094 57.104 291.87 cv
57.2466 291.661 57.936 290.825 60.3145 289.774 cv
60.375 289.747 60.6069 289.662 61.1387 289.662 cv
65.9106 289.662 74.8779 295.477 79.1855 298.271 cv
80.168 298.909 81.0503 299.479 81.7998 299.945 cv
82.4702 300.361 83.1182 300.838 83.7217 301.359 cv
84.8228 302.309 86.2202 302.821 87.6528 302.821 cv
87.9697 302.821 88.2876 302.795 88.6055 302.745 cv
90.3584 302.464 91.897 301.422 92.812 299.901 cv
99.6021 288.585 112.613 281.555 126.765 281.555 cv
140.359 281.555 153.114 288.177 160.054 298.836 cv
161.015 300.313 162.576 301.294 164.325 301.52 cv
164.581 301.553 164.839 301.57 165.095 301.57 cv
166.58 301.57 168.024 301.02 169.138 300.008 cv
169.815 299.394 170.554 298.839 171.334 298.353 cv
172.083 297.887 172.966 297.317 173.948 296.678 cv
178.258 293.885 187.223 288.071 191.994 288.071 cv
192.525 288.071 192.759 288.155 192.818 288.182 cv
195.197 289.232 195.887 290.069 196.029 290.278 cv
195.948 291.501 194.134 294.645 183.423 302.243 cv
181.745 303.433 180.533 304.29 179.666 305.071 cv
175.957 308.401 172.521 310.986 167.84 314.322 cv
166.37 315.371 165.449 317.021 165.33 318.82 cv
164.097 337.297 147.156 351.769 126.765 351.769 cv
cp
.281714 .63 .86 .149143 cmyk
f
152.578 351.424 mo
153.14 349.243 153.45 346.958 153.45 344.599 cv
153.45 329.685 141.502 317.597 126.761 317.597 cv
112.021 317.597 100.072 329.685 100.072 344.599 cv
100.072 346.953 100.381 349.235 100.941 351.413 cv
108.234 355.422 117.14 357.786 126.765 357.786 cv
136.385 357.786 145.29 355.428 152.578 351.424 cv
cp
0 .3 .5 0 cmyk
f
129.758 341.271 mo
129.809 342.675 128.71 343.852 127.309 343.904 cv
125.906 343.956 124.728 342.86 124.677 341.456 cv
124.626 340.054 125.721 338.876 127.125 338.824 cv
128.526 338.772 129.705 339.87 129.758 341.271 cv
cp
0 .05 .32 0 cmyk
f
187.008 236.486 mo
184.184 236.588 181.577 237.46 179.364 238.868 cv
170.221 219.684 149.641 206.302 125.703 206.302 cv
102.2 206.302 81.9321 219.199 72.5493 237.823 cv
70.7964 237.034 68.8633 236.56 66.8179 236.486 cv
58.4731 236.18 51.4639 242.58 51.1646 250.78 cv
50.8647 258.981 57.3892 265.875 65.7358 266.181 cv
66.2417 266.199 66.7427 266.191 67.2373 266.16 cv
69.9595 294.084 95.0884 315.962 125.703 315.962 cv
156.444 315.962 181.653 293.901 184.196 265.811 cv
185.447 266.088 186.749 266.229 188.09 266.181 cv
196.438 265.875 202.961 258.981 202.662 250.78 cv
202.362 242.58 195.354 236.18 187.008 236.486 cv
cp
.34 .71 .89 .18 cmyk
f
125.703 309.945 mo
98.2505 309.945 75.6919 290.872 73.2251 265.577 cv
72.9238 262.478 70.3159 260.143 67.2427 260.143 cv
67.1196 260.143 66.9976 260.147 66.873 260.154 cv
66.6753 260.167 66.478 260.173 66.2773 260.173 cv
66.1704 260.173 66.064 260.172 65.9585 260.168 cv
63.5044 260.079 61.2388 259.062 59.5786 257.307 cv
57.9438 255.581 57.0913 253.34 57.1763 251.001 cv
57.3516 246.229 61.335 242.492 66.2476 242.492 cv
66.3638 242.492 66.4819 242.494 66.5991 242.497 cv
67.8091 242.542 68.9824 242.815 70.0815 243.31 cv
70.8813 243.669 71.7202 243.841 72.5454 243.841 cv
74.7515 243.841 76.8667 242.622 77.9204 240.53 cv
86.5566 223.392 105.312 212.318 125.703 212.318 cv
146.563 212.318 165.496 223.755 173.932 241.457 cv
174.674 243.012 176.046 244.175 177.703 244.651 cv
178.249 244.808 178.808 244.884 179.364 244.884 cv
180.496 244.884 181.618 244.564 182.594 243.944 cv
184.006 243.044 185.565 242.558 187.226 242.498 cv
187.346 242.494 187.464 242.492 187.579 242.492 cv
192.492 242.492 196.476 246.229 196.651 251.001 cv
196.736 253.34 195.883 255.581 194.249 257.307 cv
192.587 259.062 190.323 260.079 187.871 260.168 cv
187.77 260.172 187.668 260.173 187.567 260.173 cv
186.902 260.173 186.208 260.093 185.5 259.937 cv
185.069 259.841 184.632 259.794 184.196 259.794 cv
182.932 259.794 181.687 260.193 180.647 260.954 cv
179.252 261.973 178.36 263.545 178.205 265.267 cv
175.936 290.321 152.874 309.945 125.703 309.945 cv
cp
.281714 .63 .86 .149143 cmyk
f
179.872 282.327 mo
178.741 275.759 175.324 269.916 168.998 267.448 cv
170.818 262.188 171.876 256.694 170.608 251.161 cv
164.811 225.825 134.205 227.583 127.789 251.442 cv
125.421 246.195 122.735 240.869 118.275 237.315 cv
98.1113 221.254 72.6421 242.3 84.1138 265.487 cv
80.3057 269.989 76.8164 274.984 76.0962 281.103 cv
75.6572 284.842 75.9175 288.263 76.7407 291.395 cv
87.2554 306.197 105.254 315.962 125.703 315.962 cv
150.085 315.962 170.993 302.084 179.872 282.327 cv
cp
0 .3 .5 0 cmyk
f
169.437 269.526 mo
169.661 271.424 164.028 273.659 156.844 274.515 cv
149.667 275.373 143.664 274.533 143.438 272.634 cv
143.21 270.738 148.843 268.502 156.028 267.645 cv
163.207 266.787 169.209 267.629 169.437 269.526 cv
cp
level3{
gsave
clp
[10.0918 .230355 -2.05185 5.56518 156.438 271.08 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.0918 .230355 -2.05185 5.56518 156.438 271.08 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
109.619 272.141 mo
109.52 274.048 103.587 275.294 96.3633 274.919 cv
89.144 274.547 83.3701 272.7 83.4683 270.791 cv
83.5684 268.883 89.5 267.635 96.7241 268.009 cv
103.945 268.383 109.719 270.232 109.619 272.141 cv
cp
level3{
gsave
clp
[9.90659 1.93973 -2.96678 5.13632 96.5449 271.466 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.90659 1.93973 -2.96678 5.13632 96.5449 271.466 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
137.249 287.008 mo
132.893 287.01 129.107 284.323 125.691 281.901 cv
125.317 281.637 li
122.21 284.86 116.5 286.887 111.788 286.356 cv
108.211 285.963 105.471 284.213 103.862 281.294 cv
103.721 281.037 103.813 280.714 104.071 280.573 cv
104.327 280.432 104.65 280.526 104.792 280.782 cv
106.604 284.071 109.66 285.055 111.904 285.302 cv
116.468 285.808 122.033 283.775 124.846 280.584 cv
125.024 280.381 125.329 280.345 125.55 280.502 cv
126.304 281.035 li
130.314 283.878 134.855 287.107 140.07 285.522 cv
143.211 284.57 147.057 282.104 148.569 278.741 cv
148.689 278.475 149.003 278.353 149.27 278.475 cv
149.537 278.594 149.657 278.909 149.537 279.176 cv
147.889 282.842 143.75 285.516 140.377 286.538 cv
139.302 286.864 138.259 287.008 137.249 287.008 cv
cp
.4 .7 1 .5 cmyk
f
105.385 259.896 mo
105.385 263.413 103.553 266.263 101.292 266.263 cv
99.0308 266.263 97.1973 263.413 97.1973 259.896 cv
97.1973 256.379 99.0308 253.528 101.292 253.528 cv
103.553 253.528 105.385 256.379 105.385 259.896 cv
cp
.4 .65 .9 .35 cmyk
f
155.267 259.896 mo
155.267 263.413 153.435 266.263 151.174 266.263 cv
148.914 266.263 147.08 263.413 147.08 259.896 cv
147.08 256.379 148.914 253.528 151.174 253.528 cv
153.435 253.528 155.267 256.379 155.267 259.896 cv
cp
f
197.437 251.356 mo
197.687 257.265 192.563 262.281 185.993 262.56 cv
179.424 262.837 184.861 259.204 184.611 253.294 cv
184.361 247.383 178.519 241.437 185.087 241.158 cv
191.657 240.88 197.188 245.446 197.437 251.356 cv
cp
0 .3 .5 0 cmyk
f
55.061 250.604 mo
54.8457 256.515 60.0005 261.501 66.5703 261.741 cv
73.1396 261.981 67.915 256.521 68.1318 250.61 cv
68.3467 244.698 73.9214 240.575 67.3516 240.333 cv
60.7793 240.095 55.2778 244.692 55.061 250.604 cv
cp
f
133.395 267.401 mo
133.456 269.745 130.299 271.727 126.343 271.83 cv
122.389 271.933 119.134 270.113 119.072 267.77 cv
119.013 265.427 122.17 263.445 126.126 263.341 cv
130.08 263.24 133.335 265.058 133.395 267.401 cv
cp
.34 .71 .89 .18 cmyk
f
72.6909 340.405 mo
74.397 336.763 78.9922 336.323 81.4307 339.954 cv
78.2251 331.364 86.9795 328.724 90.0093 336.989 cv
90.1079 337.256 90.5859 337.734 89.9795 336.979 cv
89.7646 329.821 95.5273 326.941 99.8789 331.57 cv
104.807 336.813 104.357 346.105 106.268 352.657 cv
108.275 359.544 111.255 366.219 104.028 371.173 cv
98.0029 375.304 91.8062 373.399 86.8862 368.909 cv
81.252 363.765 68.4956 349.354 72.6909 340.405 cv
cp
f
97.0845 367.44 mo
94.7021 367.44 92.4297 365.824 90.9414 364.465 cv
84.3359 358.434 78.0977 349.538 77.8491 344.76 cv
78.8945 345.518 80.1538 345.926 81.4331 345.926 cv
82.354 345.926 83.2837 345.715 84.1504 345.271 cv
85.4165 344.62 86.3677 343.583 86.916 342.371 cv
87.9028 343.038 89.0552 343.401 90.2813 343.401 cv
92.5898 343.401 94.6963 342.079 95.7002 340 cv
96.0547 339.263 96.437 338.097 96.2612 336.696 cv
97.7754 339.112 98.3833 342.987 98.9727 346.75 cv
99.3687 349.279 99.7778 351.895 100.492 354.341 cv
100.692 355.033 100.905 355.724 101.114 356.412 cv
103.302 363.56 103 364.584 100.626 366.209 cv
99.418 367.038 98.2612 367.44 97.0845 367.44 cv
cp
.281714 .63 .86 .149143 cmyk
f
181.363 339.699 mo
179.655 336.057 175.062 335.613 172.623 339.245 cv
175.829 330.656 167.072 328.016 164.044 336.281 cv
163.945 336.548 163.467 337.025 164.072 336.271 cv
164.288 329.114 158.525 326.233 154.173 330.863 cv
149.247 336.107 149.695 345.399 147.785 351.949 cv
145.777 358.838 142.798 365.512 150.024 370.464 cv
156.05 374.596 162.246 372.691 167.166 368.2 cv
172.8 363.059 185.556 348.646 181.363 339.699 cv
cp
.34 .71 .89 .18 cmyk
f
156.968 366.733 mo
155.793 366.733 154.634 366.33 153.428 365.501 cv
151.053 363.875 150.75 362.854 152.938 355.703 cv
153.149 355.016 153.36 354.326 153.562 353.631 cv
154.275 351.187 154.684 348.572 155.08 346.044 cv
155.67 342.279 156.276 338.406 157.791 335.989 cv
157.616 337.392 157.998 338.559 158.355 339.294 cv
159.359 341.373 161.465 342.694 163.772 342.694 cv
163.782 342.694 li
164.996 342.691 166.139 342.333 167.118 341.674 cv
167.658 342.899 168.605 343.946 169.875 344.599 cv
170.751 345.045 171.691 345.261 172.618 345.261 cv
173.901 345.261 175.161 344.852 176.201 344.083 cv
175.928 348.872 169.702 357.74 163.11 363.757 cv
161.624 365.114 159.35 366.733 156.968 366.733 cv
cp
.281714 .63 .86 .149143 cmyk
f
445.848 738.392 mo
448.873 741.723 452.455 744.894 456.087 747.811 cv
459.749 750.736 463.593 753.451 467.568 755.951 cv
475.525 760.952 484.023 765.092 492.864 768.282 cv
510.551 774.695 529.589 777.145 548.383 775.896 cv
567.206 774.683 585.734 769.905 603.293 762.843 cv
620.877 755.771 637.548 746.455 653.317 735.839 cv
654.493 735.047 656.088 735.357 656.879 736.534 cv
657.634 737.658 657.384 739.164 656.333 739.985 cv
656.187 740.099 li
654.277 741.584 652.351 743.051 650.406 744.498 cv
648.444 745.92 646.454 747.303 644.452 748.674 cv
640.447 751.409 636.369 754.055 632.217 756.6 cv
623.861 761.595 615.188 766.146 606.174 770.009 cv
597.187 773.948 587.832 777.117 578.269 779.613 cv
568.694 782.077 558.855 783.646 548.932 784.358 cv
539 784.983 528.977 784.623 519.093 783.221 cv
509.236 781.693 499.488 779.27 490.226 775.593 cv
485.594 773.771 481.048 771.738 476.662 769.408 cv
472.282 767.067 468.034 764.502 463.949 761.708 cv
459.899 758.862 456.012 755.8 452.319 752.524 cv
450.475 750.885 448.675 749.194 446.939 747.432 cv
445.224 745.63 443.591 743.826 441.994 741.788 cv
441.927 741.704 li
441.052 740.588 441.247 738.973 442.362 738.099 cv
443.428 737.265 444.951 737.411 445.848 738.392 cv
cp
.29 .1 1 .1 cmyk
f
644.504 742.181 mo
644.504 742.181 660.959 736.052 642.697 717.273 cv
642.697 717.273 627.854 736.066 644.504 742.181 cv
cp
.66 .1 1 .1 cmyk
f
468.882 758.921 mo
468.882 758.921 484.924 746.283 458.024 731.985 cv
458.024 731.985 448.272 758.073 468.882 758.921 cv
cp
f
641.82 750.767 mo
641.82 750.767 658.688 731.087 675.407 765.947 cv
675.407 765.947 641.815 776.944 641.82 750.767 cv
cp
.46 .1 1 .1 cmyk
f
608.802 765.182 mo
608.802 765.182 625.779 753.035 632.15 783.518 cv
632.15 783.518 603.762 785.655 608.802 765.182 cv
cp
.66 .1 1 .1 cmyk
f
455.542 752.89 mo
455.542 752.89 438.674 733.209 421.955 768.07 cv
421.955 768.07 455.547 779.066 455.542 752.89 cv
cp
.46 .1 1 .1 cmyk
f
478.809 769.598 mo
478.809 769.598 464.16 759.114 458.659 785.418 cv
458.659 785.418 483.159 787.265 478.809 769.598 cv
cp
.66 .1 1 .1 cmyk
f
598.049 744.077 mo
600.587 743.016 600.883 741.714 601.488 738.894 cv
607.47 742.239 613.327 736.916 611.336 730.241 cv
609.028 722.502 592.1 721.235 585.892 718.646 cv
581.296 716.729 576.926 714.76 572.132 713.953 cv
570.005 723.12 563.099 729.8 574.191 736.754 cv
580.444 740.677 591.175 746.947 598.049 744.077 cv
cp
.361111 .828704 1 .268519 cmyk
f
573.087 778.426 mo
559.736 781.936 560.267 752.646 567.808 744.785 cv
570.934 741.529 577.794 733.978 582.188 736.503 cv
586.134 738.771 586.086 747.01 585.89 751.829 cv
585.453 762.428 581.552 776.202 573.087 778.426 cv
cp
f
588.453 698.469 mo
589.086 695.391 588.204 694.223 586.275 691.726 cv
592.496 688.488 591.625 679.415 585.051 676.675 cv
577.427 673.499 566.465 688.292 560.721 692.261 cv
556.473 695.196 552.313 697.892 548.843 701.771 cv
555.018 710.03 556.375 721.008 568.519 715.518 cv
575.369 712.422 586.744 706.797 588.453 698.469 cv
cp
f
585.737 742.889 mo
579.633 757.417 564.947 767.141 549.316 767.649 cv
535.745 768.088 513.297 765.484 511.263 751.663 cv
509.521 739.843 507.97 723.712 518.983 714.741 cv
533.517 702.903 550.978 700.107 568.596 705.8 cv
583.369 710.573 591.908 728.208 585.737 742.889 cv
cp
.367749 .767946 .962637 .194691 cmyk
f
546.506 761.678 mo
532.724 761.678 518.323 758.31 517.214 750.786 cv
515.382 738.338 514.787 725.921 522.785 719.405 cv
531.281 712.484 540.847 708.975 551.215 708.975 cv
556.282 708.975 561.506 709.831 566.746 711.525 cv
572.325 713.327 577.033 717.645 579.659 723.368 cv
582.232 728.976 582.427 735.241 580.191 740.56 cv
575.076 752.728 562.59 761.2 549.123 761.637 cv
548.283 761.664 547.407 761.678 546.506 761.678 cv
cp
.281714 .63 .86 .149143 cmyk
f
557.771 726.613 mo
552.238 733.308 549.663 742.041 549.754 750.571 cv
549.799 754.908 549.534 761.967 550.957 767.536 cv
565.965 766.427 579.847 756.904 585.737 742.889 cv
589.184 734.689 588.037 725.571 583.785 718.284 cv
583.149 718.126 582.499 717.981 581.817 717.863 cv
572.542 716.277 563.721 719.412 557.771 726.613 cv
cp
0 .3 .5 0 cmyk
f
571.705 749.372 mo
571.755 750.737 570.687 751.887 569.319 751.937 cv
567.953 751.986 566.805 750.919 566.756 749.554 cv
566.706 748.187 567.773 747.039 569.14 746.987 cv
570.507 746.938 571.655 748.007 571.705 749.372 cv
cp
0 .05 .32 0 cmyk
f
510.384 724.197 mo
506.651 712.277 494.321 685.05 477.154 695.029 cv
472.182 697.92 463.96 709.227 468.701 714.982 cv
473.095 720.311 479.015 710.916 482.45 708.328 cv
496 698.123 499.437 735.773 502.887 743.996 cv
509.562 759.897 523.428 772.437 540.887 764.135 cv
543.016 763.12 545.07 761.913 547.102 760.717 cv
541.713 750.914 529.977 758.526 521.928 750.272 cv
515.404 743.584 513.086 732.818 510.384 724.197 cv
cp
.361111 .828704 1 .268519 cmyk
f
524.357 776.368 mo
524.426 784.368 539.361 781.624 543.22 779.397 cv
549.721 775.649 558.702 762.099 554.699 753.182 cv
551.609 746.291 544.233 741.38 534.187 742.543 cv
528.384 743.215 515.321 752.828 518.319 758.784 cv
520.258 762.632 526 759.92 525.117 765.766 cv
524.523 769.692 524.313 771.501 524.357 776.368 cv
cp
.382023 .8 1 .202247 cmyk
f
529.373 705.698 mo
539.453 707.839 534.308 719.771 534.033 726.918 cv
533.764 733.945 540.382 739.535 538.386 746.649 cv
536.255 754.226 527.764 755.985 521.615 753.134 cv
514.01 749.598 510.568 741.513 521.259 740.892 cv
512.544 740.895 512.557 725.644 513.054 722.051 cv
514.092 714.593 522.058 704.142 529.373 705.698 cv
cp
.349315 .729452 .914384 .184932 cmyk
f
627.128 651.209 mo
627.418 659.11 621.131 665.754 613.088 666.049 cv
605.046 666.342 598.292 660.175 598.002 652.271 cv
597.714 644.369 604.001 637.728 612.042 637.433 cv
620.087 637.139 626.84 643.307 627.128 651.209 cv
cp
.361111 .828704 1 .268519 cmyk
f
621.328 652.061 mo
621.536 657.758 616.57 662.563 610.238 662.794 cv
603.906 663.023 598.605 658.594 598.397 652.896 cv
598.188 647.201 603.152 642.397 609.485 642.164 cv
615.818 641.935 621.122 646.364 621.328 652.061 cv
cp
0 .3 .5 0 cmyk
f
551.284 605.882 mo
520.567 607.002 496.313 631.269 495.584 660.796 cv
494.874 660.726 494.154 660.684 493.422 660.71 cv
484.812 661.025 478.087 668.135 478.396 676.59 cv
478.701 685.047 485.93 691.647 494.535 691.333 cv
497.468 691.226 500.17 690.318 502.46 688.851 cv
512.566 707.07 532.673 719.125 555.387 718.297 cv
587.274 717.133 612.209 691.023 611.077 659.981 cv
609.942 628.94 583.176 604.717 551.284 605.882 cv
cp
.34 .71 .89 .18 cmyk
f
553.183 712.318 mo
534.17 712.318 516.751 702.207 507.722 685.933 cv
506.916 684.478 505.544 683.425 503.934 683.018 cv
503.449 682.895 502.954 682.833 502.46 682.833 cv
501.32 682.833 500.192 683.158 499.217 683.784 cv
497.744 684.728 496.051 685.258 494.318 685.321 cv
494.194 685.325 494.072 685.327 493.947 685.327 cv
488.782 685.327 484.591 681.394 484.406 676.372 cv
484.22 671.243 488.361 666.915 493.64 666.723 cv
493.882 666.719 li
494.197 666.719 494.552 666.738 494.993 666.783 cv
495.188 666.802 495.388 666.812 495.584 666.812 cv
497.046 666.812 498.463 666.28 499.568 665.304 cv
500.822 664.196 501.559 662.615 501.599 660.943 cv
502.256 634.436 524.174 612.889 551.504 611.894 cv
552.167 611.869 552.829 611.856 553.488 611.856 cv
581.419 611.856 604.073 633.093 605.064 660.203 cv
605.553 673.578 600.65 686.358 591.264 696.188 cv
581.833 706.063 569.013 711.777 555.166 712.283 cv
554.502 712.308 553.844 712.318 553.185 712.318 cv
553.183 712.318 li
cp
.281714 .63 .86 .149143 cmyk
f
498.75 675.848 mo
498.962 681.671 500.289 686.35 494.363 686.565 cv
488.438 686.781 483.46 682.235 483.247 676.413 cv
483.035 670.591 487.668 665.696 493.594 665.479 cv
499.521 665.264 498.537 670.026 498.75 675.848 cv
cp
0 .3 .5 0 cmyk
f
611.035 664.562 mo
609.696 693.55 585.691 717.192 555.387 718.297 cv
537.423 718.953 521.084 711.551 510.036 699.414 cv
507.858 688.284 509.704 676.599 519.12 669.505 cv
510.227 652.53 519.053 630.311 541.324 635.335 cv
546.137 636.421 550.314 639.311 554.051 642.425 cv
559.095 633.316 570.108 624.748 581.269 628.183 cv
581.269 628.183 597.02 632.353 594.114 650.879 cv
594.114 650.879 609.551 650.521 611.035 664.562 cv
cp
f
604.14 662.639 mo
604.604 664.492 599.307 667.432 592.293 669.204 cv
585.282 670.976 579.222 670.911 578.752 669.057 cv
578.286 667.205 583.584 664.267 590.599 662.492 cv
597.61 660.721 603.67 660.787 604.14 662.639 cv
cp
level3{
gsave
clp
[10.0403 -1.06663 -1.32111 5.78357 591.444 665.848 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.0403 -1.06663 -1.32111 5.78357 591.444 665.848 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
544.937 674.653 mo
545.222 676.542 539.663 678.954 532.509 680.04 cv
525.362 681.123 519.334 680.472 519.049 678.581 cv
518.762 676.691 524.322 674.28 531.474 673.196 cv
538.623 672.112 544.648 672.765 544.937 674.653 cv
cp
level3{
gsave
clp
[10.0937 -.0891845 -1.87506 5.62738 531.994 676.617 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.0937 -.0891845 -1.87506 5.62738 531.994 676.617 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
543.589 682.806 mo
543.589 682.806 563.818 671.097 584.262 674.213 cv
584.262 674.213 588.287 699.792 568.335 703.574 cv
568.335 703.574 547.107 707.357 543.589 682.806 cv
cp
0 0 0 0 cmyk
f
543.389 663.564 mo
543.891 667.486 542.479 670.897 540.238 671.185 cv
537.999 671.47 535.775 668.523 535.274 664.603 cv
534.772 660.679 536.184 657.27 538.424 656.98 cv
540.666 656.695 542.888 659.644 543.389 663.564 cv
cp
.4 .65 .9 .35 cmyk
f
585.658 656.405 mo
586.158 660.327 584.749 663.739 582.507 664.026 cv
580.267 664.312 578.044 661.365 577.543 657.444 cv
577.041 653.521 578.453 650.108 580.695 649.822 cv
582.936 649.537 585.157 652.483 585.658 656.405 cv
cp
f
568.428 664.061 mo
568.98 666.34 566.311 668.94 562.466 669.874 cv
558.621 670.806 555.056 669.714 554.504 667.436 cv
553.952 665.156 556.622 662.554 560.468 661.621 cv
564.312 660.691 567.876 661.783 568.428 664.061 cv
cp
.34 .71 .89 .18 cmyk
f
525.469 183.656 mo
534.896 187.14 546.857 169.875 538.339 162.584 cv
538.426 156.918 539.445 149.935 534.166 147.169 cv
518.596 139.011 511.327 178.433 525.469 183.656 cv
cp
.373056 .779028 .976528 .1975 cmyk
f
469.186 112.011 mo
449.316 117.933 458.979 134.443 457.979 150.733 cv
443.126 144.262 446.028 171.025 464.372 168.454 cv
478.083 166.534 476.425 146.636 476.186 135.557 cv
476.03 128.348 474.213 121.372 472.263 114.475 cv
469.186 112.011 li
cp
.264107 .590625 .80625 .139821 cmyk
f
491.576 94.3662 mo
500.231 95.978 501.077 103.129 506.74 108.653 cv
513.96 115.697 524.59 118.136 533.213 123.118 cv
540.379 127.257 543.59 132.973 543.608 138.959 cv
558.782 137.805 574.911 133.286 577.403 116.324 cv
578.808 106.758 569.007 89.6069 559.866 102.842 cv
557.442 106.355 557.99 115.77 551.221 111.397 cv
538.663 103.294 553.929 88.3589 566.26 88.7324 cv
580.236 89.1528 587.535 104.548 586.222 116.17 cv
585.011 126.905 580.075 135.23 572.096 141.793 cv
563.44 148.915 551.755 150.357 540.572 149.388 cv
539.078 151.944 537.064 154.409 534.584 156.673 cv
526.268 164.269 516.471 166.527 506.729 165.167 cv
507.494 176.268 506.237 190.038 498.439 192.238 cv
479.856 197.486 472.54 166.506 486.733 173.626 cv
486.48 168.421 484.979 162.237 485.54 156.696 cv
472.734 148.185 458.961 139.501 455.185 126.583 cv
446.979 98.5151 476.259 91.5137 491.576 94.3662 cv
cp
.34 .71 .89 .18 cmyk
f
409.225 47.1958 mo
408.661 55.084 414.713 61.9409 422.739 62.5171 cv
430.769 63.0908 437.732 57.1621 438.296 49.2739 cv
438.861 41.3887 432.809 34.5298 424.782 33.9561 cv
416.754 33.3809 409.79 39.3091 409.225 47.1958 cv
cp
f
414.991 48.25 mo
414.586 53.9355 419.381 58.9111 425.702 59.3638 cv
432.021 59.8149 437.473 55.5723 437.881 49.8862 cv
438.288 44.2002 433.493 39.2261 427.173 38.7725 cv
420.853 38.3223 415.396 42.5635 414.991 48.25 cv
cp
0 .3 .5 0 cmyk
f
427.063 29.8398 mo
440.873 27.4346 li
433.875 37.5254 li
427.063 29.8398 li
cp
0 .97 1 0 cmyk
f
545.813 60.2383 mo
524.09 41.2505 li
512.779 57.145 li
545.813 60.2383 li
cp
f
486.605 4.54248 mo
517.266 6.73242 540.655 31.832 540.354 61.3647 cv
541.067 61.3198 541.787 61.3037 542.521 61.3564 cv
551.113 61.9712 557.589 69.3105 556.982 77.751 cv
556.382 86.1914 548.928 92.5366 540.337 91.9224 cv
537.412 91.7134 534.743 90.7104 532.506 89.1655 cv
521.77 107.02 501.254 118.366 478.585 116.745 cv
446.756 114.47 422.748 87.5078 424.962 56.5239 cv
427.178 25.54 454.776 2.2666 486.605 4.54248 cv
cp
.34 .71 .89 .18 cmyk
f
482.874 110.883 mo
501.104 110.881 518.145 101.372 527.349 86.0635 cv
528.204 84.6401 529.61 83.6333 531.236 83.2837 cv
531.655 83.1938 532.081 83.1465 532.506 83.1465 cv
533.717 83.1465 534.911 83.5137 535.924 84.2134 cv
537.361 85.2075 539.036 85.7979 540.766 85.9204 cv
541.006 85.9385 541.244 85.9463 541.483 85.9463 cv
546.464 85.9463 550.637 82.1592 550.982 77.3223 cv
551.349 72.2036 547.36 67.7349 542.091 67.356 cv
541.918 67.3457 541.742 67.3413 541.566 67.3413 cv
541.289 67.3413 541.013 67.3516 540.738 67.3687 cv
540.611 67.3774 540.482 67.3818 540.354 67.3818 cv
538.819 67.3818 537.338 66.7954 536.216 65.7324 cv
535.002 64.5815 534.322 62.978 534.339 61.3037 cv
534.608 34.7886 513.452 12.4922 486.176 10.543 cv
484.893 10.4512 483.593 10.4038 482.312 10.4038 cv
455.385 10.4038 432.829 30.8501 430.964 56.9526 cv
430.009 70.3047 434.461 83.2495 443.501 93.3989 cv
452.579 103.595 465.191 109.755 479.013 110.743 cv
480.296 110.835 481.595 110.883 482.872 110.883 cv
482.874 110.883 li
cp
.281714 .63 .86 .149143 cmyk
f
536.666 76.3003 mo
536.25 82.1113 534.761 86.7397 540.678 87.1621 cv
546.593 87.5869 551.726 83.2163 552.141 77.4033 cv
552.555 71.5933 548.095 66.5391 542.181 66.1167 cv
536.265 65.6919 537.082 70.4883 536.666 76.3003 cv
cp
0 .3 .5 0 cmyk
f
496.916 106.546 mo
485.434 98.5112 465.567 94.8066 458.869 111.539 cv
453.299 125.456 465.786 137.265 475.856 143.871 cv
487.114 151.255 497.625 159.308 511.048 158.87 cv
522.234 158.505 538.633 149.275 534.711 134.577 cv
532.715 127.1 524.589 125.907 518.821 122.676 cv
510.978 118.281 504.304 111.718 496.916 106.546 cv
cp
.281714 .63 .86 .149143 cmyk
f
424.843 61.104 mo
425.169 90.1216 448.337 114.583 478.585 116.745 cv
496.516 118.028 513.101 111.202 524.563 99.4561 cv
527.131 88.4102 525.691 76.6685 516.532 69.2485 cv
526.011 52.5938 517.965 30.0801 495.53 34.3257 cv
490.686 35.2432 486.408 37.9854 482.566 40.9678 cv
477.841 31.689 467.132 22.7417 455.861 25.7827 cv
455.861 25.7827 439.974 29.4019 442.23 48.0171 cv
442.23 48.0171 426.818 47.1226 424.843 61.104 cv
cp
0 .3 .5 0 cmyk
f
466.601 98.0054 mo
472.187 99.9619 477.655 100.241 482.362 99.8018 cv
494.439 98.6665 503.876 92.5435 504.272 92.2827 cv
507.286 90.3037 508.43 86.1362 506.833 82.9766 cv
505.24 79.8237 501.514 78.8623 498.506 80.8252 cv
498.346 80.9287 490.914 85.6431 481.789 86.3813 cv
470.207 87.3169 461.027 81.4443 454.498 68.9277 cv
452.863 65.7944 449.113 64.8877 446.119 66.9067 cv
443.127 68.9268 442.029 73.1055 443.664 76.2393 cv
450.264 88.8862 458.554 95.187 466.601 98.0054 cv
cp
0 0 0 0 cmyk
f
509.227 63.3457 mo
510.231 63.0078 li
510.154 62.7773 508.284 57.3521 504.211 56.4976 cv
501.704 55.9756 498.983 57.3018 496.122 60.4497 cv
496.906 61.1621 li
499.497 58.314 501.882 57.0913 503.992 57.5352 cv
507.479 58.2666 509.209 63.2959 509.227 63.3457 cv
cp
.4 .7 1 .5 cmyk
f
464.869 54.0542 mo
465.921 53.9063 li
465.327 49.6943 463.827 47.0645 461.46 46.0874 cv
457.615 44.499 453.016 47.9287 452.818 48.0771 cv
453.46 48.9219 li
453.5 48.8896 457.772 45.7139 461.06 47.0703 cv
463.051 47.8936 464.333 50.2427 464.869 54.0542 cv
cp
f
516.664 135.247 mo
517.327 126.96 525.042 126.964 528.175 131.149 cv
531.102 135.062 529.436 143.5 525.889 146.135 cv
510.076 157.869 493.178 134.77 506.388 129.944 cv
513.307 127.417 515.173 130.896 516.539 135.124 cv
516.664 135.247 li
cp
0 .580556 .122222 0 cmyk
f
437.056 54.2856 mo
436.56 56.1313 441.812 59.1553 448.797 61.0405 cv
455.776 62.9248 461.838 62.9575 462.337 61.1108 cv
462.834 59.2666 457.581 56.2422 450.597 54.3574 cv
443.616 52.4746 437.555 52.4424 437.056 54.2856 cv
cp
level3{
gsave
clp
[-10.0218 -1.2281 1.2281 5.80447 449.699 57.6992 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-10.0218 -1.2281 1.2281 5.80447 449.699 57.6992 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
492.854 68.2632 mo
492.539 70.147 498.059 72.6465 505.193 73.8467 cv
512.322 75.0454 518.358 74.4907 518.676 72.6055 cv
518.992 70.7222 513.472 68.2202 506.339 67.02 cv
499.207 65.8218 493.172 66.377 492.854 68.2632 cv
cp
level3{
gsave
clp
[-10.0916 -.251155 1.78435 5.65727 505.764 70.4336 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-10.0916 -.251155 1.78435 5.65727 505.764 70.4336 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
427.063 29.8398 mo
545.813 60.2383 li
545.813 60.2383 547.324 67.8555 537.009 72.4126 cv
526.696 76.9712 531.163 73.1538 525.245 84.27 cv
519.328 95.3828 511.699 100.786 495.368 95.5088 cv
478.492 90.0566 482.974 69.5068 482.066 64.5259 cv
480.685 56.9023 474.229 66.7354 474.229 66.7354 cv
474.229 66.7354 461.718 87.7095 445.955 81.377 cv
430.194 75.0425 429.185 63.2192 430.778 53.6958 cv
432.37 44.1729 432.575 48.7129 427.849 42.3384 cv
427.849 42.3384 423.162 36.5122 427.063 29.8398 cv
cp
0 .76 .85 0 cmyk
f
433.875 37.5254 mo
433.534 38.8394 432.234 39.6377 430.971 39.3101 cv
429.704 38.9834 428.953 37.6548 429.295 36.3408 cv
429.631 35.0254 430.935 34.2256 432.198 34.5586 cv
433.466 34.8828 434.215 36.2119 433.875 37.5254 cv
cp
.44 .12 0 0 cmyk
f
538.985 65.2173 mo
538.644 66.5293 537.347 67.3286 536.079 67.002 cv
534.814 66.6724 534.064 65.3457 534.406 64.0317 cv
534.742 62.7212 536.045 61.9189 537.311 62.2451 cv
538.575 62.5737 539.326 63.9019 538.985 65.2173 cv
cp
f
437.894 40.4014 mo
476.422 50.3643 li
476.422 50.3643 470.182 78.5552 448.833 74.0459 cv
448.833 74.0459 429.334 69.9561 437.894 40.4014 cv
cp
f
436.185 59.3047 mo
453.245 44.3745 li
448.266 43.0835 li
435.726 54.061 li
435.727 55.9844 435.892 57.7266 436.185 59.3047 cv
cp
.567 .154636 0 0 cmyk
f
437.894 40.4014 mo
437.211 42.7593 436.71 44.9536 436.356 46.9995 cv
442.526 41.5986 li
437.894 40.4014 li
cp
f
458.762 45.8003 mo
437.688 64.2441 li
438.324 65.6802 439.079 66.9102 439.885 67.9663 cv
463.74 47.0869 li
458.762 45.8003 li
cp
f
443.218 71.2715 mo
444.684 72.3784 446.092 73.0742 447.128 73.4902 cv
474.2 49.7949 li
469.225 48.5039 li
443.218 71.2715 li
cp
f
461.713 72.4819 mo
469.188 65.938 li
471.925 62.3657 473.757 58.356 474.896 55.2949 cv
452.922 74.5283 li
456.274 74.5952 459.188 73.8101 461.713 72.4819 cv
cp
f
490.761 54.4595 mo
529.289 64.4224 li
529.289 64.4224 523.05 92.6108 501.699 88.104 cv
501.699 88.104 482.204 84.0107 490.761 54.4595 cv
cp
.44 .12 0 0 cmyk
f
489.053 73.3623 mo
506.113 58.4302 li
501.134 57.1401 li
488.593 68.1157 li
488.598 70.0391 488.762 71.7832 489.053 73.3623 cv
cp
.567 .154636 0 0 cmyk
f
490.761 54.4595 mo
490.079 56.8169 489.576 59.0117 489.225 61.0557 cv
495.395 55.6563 li
490.761 54.4595 li
cp
f
511.63 59.8569 mo
490.557 78.3013 li
491.192 79.7339 491.946 80.9688 492.754 82.0239 cv
516.608 61.1421 li
511.63 59.8569 li
cp
f
496.085 85.3271 mo
497.553 86.4355 498.96 87.1313 499.996 87.5474 cv
527.069 63.8496 li
522.092 62.5596 li
496.085 85.3271 li
cp
f
514.584 86.5361 mo
522.058 79.9956 li
524.794 76.4219 526.628 72.4106 527.763 69.3511 cv
505.792 88.583 li
509.143 88.6504 512.056 87.8662 514.584 86.5361 cv
cp
f
470.987 67.2803 mo
470.43 69.5581 473.092 72.1675 476.935 73.1104 cv
480.776 74.0532 484.347 72.9697 484.902 70.6929 cv
485.459 68.4165 482.798 65.8062 478.956 64.8638 cv
475.114 63.9219 471.546 65.0054 470.987 67.2803 cv
cp
.34 .71 .89 .18 cmyk
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 15.0.0%%For: (Elaine Leong) ()%%Title: (monkeysss.eps)%%CreationDate: 9/08/13 8:01 PM%%Canvassize: 16383%AI9_DataStream%Gb",kks??"d]gJ*i#Xoe#m;rq0.[E9#lt).'!d_@DM*T/G.])aoAdOXYH$*\gVun8@tS3)I*R[J956&T7ob^EStAgSX_OP/]h%u!%X@]G!@V_uSCUUUE)KYNAY=hAlUGke3Q5.HULe:"!FTl5Y$-b;,9Tma['@UOjI&l7,Rtl,Nmkl"t^[0PkCJt#4>F"p<$[CZ'T=f3t%s!+A_DZ4Bg5.P0nj[s);kLV5%;_f"AL1t:boR-hi5]Zd__:I:7"[\6_AeW;j)+3K\o_tcEnG=>-OqSc3hgfVQktP=7hpc3$e#"9]%]:8@8Ufe=M/4Wc@pgS!<An[mj2T.M]hUo,b8^qW/"!YS=4cp.W2@L85-n>30MMt[fIBbA_BnqQP!M;7nTI6%88P1oKqumt[iMn/&%;cdK;?gl(5MWM3ts!jIIWsY_(9e;!Nq(%P-d6!2%`DUem"\_I@f,[<3.$Y7@huTW/0pU-Xj^:2%=@-Qe5X\'/PYLBV:;a^rN+c-.%)l#bCe5jD5*K4iZ@lp-2-+?iD2m@A-.(2l"iL*<;%8;bXEg5G1VIi_e>)&eLM`?H#dhfuS#/RZY]:BsYB>s,4<T"rMVJ9>@:/t4e%gJFD810a(o:URdu/5(2c2aO%>q&E<j2=XGtFJsKC:O"C5SR_B-e^@t@(s?r1BPm*Re"A@O@i=+0-pN`ODsk'8Xi`,9ROG8=Wk(VJ%Yh/5ZB+.=?3L0gmO6JK<:`<&DV]ja/0#:.p<$WJ1dDQ(D:g>4bQc(c/NG!Ai2*(ogWCLrYOC[Z*&+Jb[boX]ujpXhLD@Vjc_k[Jq%FHD#rV?SrK@e=;Jp17tKb;AuFS6hMMSd88Hcbc"nn"S<Ff%jr[YC=BEaW4;Vle&8K+rikU-DJCF.H;0!<k0Yu-?Wh7fB/eqfcS]t%TL"F=)WG>qJcma93s"`pMLtlo7_AX/^T3MEl1CF^_[O7G(!fTWdLCH$#4[s%q(H,!Oj,7[V,hc/*_d'SW^'ppM#W/.#iYp?.A!9t%#tNTUL9VI,^4GcVC@Ge'(!f:2mNgfj/pVrtUt;2BnEOJc8Cj9NV>nB-@-^G%[UD##^PM&CXg2#X?S+.?&M_?=S[.]#]J</jSQp2H%QY)=UQ0I0M_MML3n<u$;qW/K9$+s%D*kcDjp>!Dh^&*D6RTDZB5>YKaJ5VQ-RPY'cO?aZ,m4JK,;ilaiNYOQ`H;*/?eq-XXKR*!Y%?FhObf+\Cd?,[F4i-)e5kY?XDbhD&`<;;+eqS1MY^F1C-\CpMS6)bUl/A3-o8EIeh0t]DK/Yr=P[XJ>X8qDq&@;[[o(ZJT\4$A/U%XdZ0irI+CjLY/FQjuN1%T%I\2jVBu4Y5>?T::9<3/L1`'\L3rth)n)h%aKQMGnC"0+JAW!\-8W[iKe5:,;XpdeNHJdKZ*LqqnM/i%_jCSGURPMAAui\[Z<muNgBhl#"mOO=f>_HO=E^`_?)$g`c?lDFnAL#=lK6n3Mi]@n8.?JrP#.CW(Q=.]H5,=,DY"K_1p:(rFRg2s%p(gndNR.&QO4%*r;Y=)N;EF@HE[TVu8"JFf?jamJZgj&C8l.[LM?^ZkVBA5*Rt*ISpD/QJr!i.7Q?,j6j`9U[maa!`q*?YNn@\?>%na%TSos\u0QV3<1=.V`%LMje.b*Tg%^Q#*l)3l/L7^5pHa\3niF\D%%C1qHUa-U\gUHG$43Jr+;aj<!L!f%Z*Z8/=KWG77)gNBu%%!dLn?$h(,r\)J-uM]`;fpr0dpTqiU&$?KS:jLL71-gd_"UuOGC@l^Dr31t@TWhVPZ,MP4?CM3"@S[+HfA)"G'S+&.K*DAu-,Abl;%F&pl7^aEuqXJD,O"&77Qn/p+7i1jMFV8>a-A4nh%nB%+:pnZ.KI$3uM[mI5/h8FdOpuj')FW.4/Wi=41MCIT+aMB53T+$.rn4D"T%#p4pd2LXf&L)GBW5C2f"]5J2Z"WoVs.%QD=rogna:NjN$,<g290/rjR]n?lGk&#TGThhuWj7I`qs09G5\Y,:85K85754G??J*&e!%eM/-lg1LoWAs/dsfEkp%(f7%(ZW%s#!u_Q?Z'f9&)MV(_Fg-S8/lTPF!=KX;K&1Sb-#0G7(LEM+,Qn#L(.Td2CX4+t.ao:5mGU33%k>Gj\kkN&=Y#L-i@W&UF<EbkrrOBW:(:7NJROR>q]63Fh7m0t@(B1:tX70d+VO`%t][cX>.p/BI:"JWJ?]=noWEcBK<ICrAX#n+a%c85B"o.L/_H#>p>?^+TP+Zn$PHXcnrb:O=fmuSC-0T6"8rCc7>\WZtK^?#=L6-2Eg`g?X"WR/9t?iD2%Ct@Rn.pZC<a&euUn():5%PMHmU@NA[L+q7p8D9(8/-h=B@0"H%h/CuN11M(C)8qlf#_)TUMME37uCUWNk/[10(hUq+O1ufLISb!lO@r)V>?DCM\0[e\FDP,Jd%fbdqOF1:,ilJA][oNHoNV_@nKf;\$W2bVEn0M6QTeY$Tc#T!L[4csZr:?pKS<*PW?I+/$7V(U`:;:mV!`6*lKNs2t91(FHC!fq$_%>OI8V^K&U,gVS%RcgPTOITPu'S;%f\>B[dDe_R*0+('Y<bh7YgWB+kfoQ5_3LLYn$3#]0f0m4s=UB%)$NICP9`[a[ICbW-1`!-ko%9Xepol2O>-WE=@1="D&Y9+<eIB#8'sDn*-mFQXFgGZ_2h`"j"j9PcH^7kLSQp&<Z=Oifkg<g3L_XJRCgR!G_=%#^AEgFF@Q\cr,[%Irmp;]\FFFZ$W:2$S@"T`;?TFN)s.$bsKGI?)!P1;&&M=loU]:\(t)[;0&_:iK?*WMQ:)82SA1.6JnQs&S[?aj)IqP0\7-/@^;%k%oEZpIiU7cshZFc%pLrLE3UVONYS-Q+]qs/<5?H3FeVe>%43kJ"#`G"^Z0u(q@!mAfn60D4T)GSL=1r>OdCPq/p?NI(>%tb*BY$.%%<]A""=0%9<"WdclPM>DqbMc(t@J/o(,Y8]tmZWsOU<)iM]f#PD.#"9jH[eJDeF`b[?i'fYTb_V2Q`A<D8-]$7(>QR_!%N?3aC^Fm%p167!7:oRLGppl22d>`q:ojDu18rBm-MaLps&&_[[clLmWHhY:RM"h(0?/6YfL?t?[s_:dCuMRPXcS4YNcA[9keg)lE7'r=2!M.e%8BfUi#Y]oGCCuH,h=nJHr`GIF==0(mF50XEm<eL6&)6LqWZ_nQoqtjk5#2f8SKl:FJ=0\N)IN+S?!^DC5#*jPa%7?K+oJ_9QW&%Q%qqq1&oS7ZfB)G!=4YcTtq'h^u$*Vs-(aa]bDMUE<DO]=9nNP'>,>0Ngg=l)b:A+8F[7e0GDnLNS4.?0On>0P%blibFGQ]^T(dgZD%BDe4Sb]>1i9?`?8-pmOOm,21.j,pf8?6>1lnTb90cT6@4#kJjZ'<g<$2t?[\XRWu\B5k_Tfu\.0@%$*(do7ZQHg/Lt5&AjD*hi;$%$i]K6",S-`1TR8lNSbRF?b4df=$H?#?9XOOIm(d<YNLu(Wk38YY,Af&C5j%:7RV0Y[[YAZbn?FBUK2R0*ram7^0A3>;anZZXN'^W%c*h1<hCtN!kq3$ZB6LkUjAfQrD:*KT)+qL6<U'<?[Z9u3Jj%MAGDBhfn5lDT%K'?SebOHjDY?SGKTS$rUO7Idcg3'@i&3UW],G9m%'G[A`#q;1_j[b/3b'24%iru^P7o37a4",F*YE!OK2kP"g=sGpV6a[3?^&8E!nfRVpYSjVLb>#GeNQWO*m<`c1+9%u5BtsBo'n'm7%ogZ^piA/-&$5)]P&WptEo]9!$F2snR#6QZ@5E%V:)VpdiYAB6fM0&,0M?XV[]Cd)l4gK.L&!92PKYPeL@<?U#cCe37XS\7gdicW@%,B_kFQ7>aDMCG+5^Sf[PjnTb3?.oo'RX\pdM%uM@61?UbpnId2N^<1':u-nJ&.rfr\i0j;U.cF\45KEmLc\N+*l('tLG&A.HOqBQ%oZXD&ap0*Xdm8f[-3YKEi.DU$Jb9!Q6:?CmbYE?mkobYr#9d]C<;?c<&0f7fRFtH_#9j)c6&:rcKt'A132-[ej8j?m]lkJNn;;5n%MVERMm68Y(#OXma:TjbBo^_m/@p3p9/46m;S5"$,kl/dc&*2U+LNF2#K[oGpH'nj=C,DSW"r%/S('$3u&/e=E.6qJ1&ASY&IHH`K%?2-,C`;1/-B`O`,I:>=`!hNM@@Qa>A.D3oF2T`Ypqa2h3eTDoV;+HH8T,]$7CX"*b^H+\&qN"r&QN$EsLLp5KffaL41M"TEJ&k6h%ohgrp<hZJd$"S1^iXb])^*cu^4KSE$'M2G/AP"W7hm*Cb?\e+>hfX/d:#T1s?Y9tW-KF$'Dssu.,$^fq_j=L_C3Z;gfGa6j(4;Oh%9e0/B(;++U3rG=<_Z6`_DDMr;R"V3Zr;@D;U:6X_q/t5U5GA#uIXNbF=3R`h^m=mL%I8E=Q_L8Qb59Bnmq<qU<lam[K&*aRSt#/Y%7<b$2UTltET2WMBJc,SOKt7koAp/j>ohtCei\_qhMgI;/UT.6KHR6Q(Fig[m4*71%A"6[QqQS?h0"Q'.73>=%WsB>ZFVb)mU$0Bh%@>0WBh=iqsr[b\=CcZ+1X%3EP*D>7o]O&.?*Qq%2&]Qnu]OT&FQ>Oa^4\Jd]O!^^99?Ff1s'"[#hn,,#jo1oFn1H$U;XuI%coHc'%.=%8#8C;^Lo(IC):b!5b&am`4q2p*?2^kGE_p"/+n^h#'>4j*'--$TNVX94'K?MV-O/;e)Qp]C0,NDsZ>HcO`Y?^f$N3-6nFE,ue%k::hjmW*]oqW#n0B*g%V'YU*Z]UZp`8cNtPX^BR@YIY3"Pd_,,:$KN%s'>3=??<gJ("W>p>91<5cg+8KZCVX/JG48mM1=EF(RoZS%M&2XnfIAc!n%3gUp`nK"5q)$ce(,RI(&*3S8uju=Qc-aNUE/mM<]Mo]11'ZnL:jPh&fG+Km00ig4VI'Mc-(_h>3?RXGJ<"04L>9M%#k\M"0DeNSN3"F#(=uL?_:E;\H:;1u\Xqdj'W5@iH';KhiO'&"]D*2r0WnB2[>SE9K9e39m=NqBGjU+7/pQc8f.M=8@PEB%mm\o_%^$sIncnZRGL(gc(h!Nh=9e%s*9/$n".=^ok\p))\qrj2M/i=0qda4h_HSi#MaK=_<boK%>q)ii>T8"[O^?DogMBAPBB@R_]6IGfH%Y5!2tQT]l"AKjpn4HIa_iP9NfSJ6KQk;'bPk2+EqpLciQqD?8pb![_p*PIuHPSnsQiGPi`3PKSCrh#&H!lk2T%(eA-a5nmS@f1pL%lkk,.e12:R?5!]PpBo:nCZ^DorB@MJrho)i_ks=#ad7KhZfpG!k`Ol[fe>U_naPG_]jm$"#Gm+"8j?!b1[#m%!S]mrB*YOe`r&p^%N.CH5G;'%d.XQj%o.D@c7@2&]rD0C(jVUo-mIok=7B",#([5a7-f1uWi]j^]0ZfeqmuPo7.fmO&L>+nEat!KKUkSA3^oWM+qu3`$%6mt+""O,/ea=@:td1<l&0SKSt8c[U3f.2W":t(DEip.ak6,gF)Dn>&>IOW-JB9?q6'=@AFjdP8NS$=cQVTObcf6Wt!%51fWI^Qh'%5(`(L(]Dpc<:u<AV.P2/>#j4n_e:EoEg3$qH6V8GlIP_tIFVB[!!_$C.$Y+Z^&;@qaTGVN2rl&)ZQI'?.<8nq^$n`\_IV]a$.BsD%`@hbb16a1cj1W,6Ks*h2Q)d_&e3tQY<6et/Y=+aL.+YM%J8[cBb)4;4X+&nT"%_n0Z<7lqE)r6,^)g]rDqp]F&U<tfi!_Dk?V_8&%./Bs9+d*q_)58O%i%mcF]QW/^'@)>X<'K[!R-$@sl(4uK@m(mM$G+GSkkAHkIJgX;pabQPUab.nM^d)QB:F`p-FT=Sbjo/2Bu20/%S#NS(CbnfCAf@kS5"(n)iLDrT-s"fAO)6eDmbDIohaqW@c-2hnUPXsW2O\M^+BFa(CGnU2qlC]2`WIobU==`'V`Qf,:49lr;0O8/%?k:Y"H:T+Cp\ks>U3RI!lE<C2[j9VdrYDc`*qqHK])>Jih[a1Dcg6VlI!=N9"";laa3HegU/b]8#Ap^SlE0h)hmN']S%i-n7$(bs%o;1U,[4'5*NTT+h5@6(<h:W@]@E%Z^#^M5)FN!,nX)mo#=iZJDkK;$J<(hl3PY4f>`:mY6G#h-Kor%+f*`)ObJr'=4K!VJ:N'E`W%B[r#YhE0#pOYi)ifXJW245R%M4dPfBoY\iaClJ>r[pH$uQVlNZbJCA@YDeq>6hT`*5D+A1TG18oH6V7E"^gPN8`"H,g\6"XSDTXa%`oE/1>Q0@g+F<TSbHmMR8kS`6V:reQrMSdZ]dRX<ob92ATskCI?2M4)ik_X%pIo(*KnU8-#H4jH#Jac-j_crAS,K5WN%-FjAb#U]%HjFps#']s2POJOmINV.ugj5rF=n/4k.=EkhGiY^fg"ho3YLd%hgKG,Q*TPA:m;t3:9"=*-CpnWmM7K'PJJiXe9t9C*cXm.(\L_bq%GT*&C]7Hlc4":$-:1Y#LiE;_o+r'u?0pURe<E/r4Y1`#o.EpcFT_53aJ:#f=&*J\1Yr=5h,Ggh^GJ"adPWYc!8".^6/Dni3E%c-6%WOS&?GYe%$L@@)HD2^H+EfV&bKDB%iQSoOL%R,NZF[F)KOM4.+=?G@[)Gk"[^-??Tc/Qfo=RK5=R7V#94-qT1\@p`YG^s+W;d/n)%mJEFAYm:9NGU&,Pn0d&U\AX5uJ+=^7'TK9acKkgc-muB2bRo5!C[+:b!W6'qNJKHu_d&&fqj4D4hQBh+/:-toWVul59;XEShOf5?%VL'AXjtj\iVb6"$ZDj97+ta&l7)$;!G?WPpd645@"-B=3--=S&Q)/>`V-B32jl'YtF]V'IaJ;'+fos!OD%n4"L-@[SNF`plb7?sY%\rdafZaRh?=[KWt?Oj7\9VE-`"BDa4T#0F"58M3I3B-O71@EDt]P5%V7_^o<TA3<)ZY[%rq;i1s1,.eUX^=5E/EkN8'bQu,/kX[`%K=SHKHt&!]LZK<Lqga,J@;[5knBX6H<Gs`IV1#i<??gVWTO*/cNIE42LM=5&/mS`D"u/o$^Uu%q;QZ@K%\UtF"/7D?/!*1Z^+hDB%J>e]$Y3\'e`n)X<&cOORDd:Fo5QY_'K'RDF72-u2@SoaReqWVWC$Q*"foRC0iX^?WMh?Lgq=&m>/H/Fp"XcH&Pr@4:],a\N<q0Zl%QJQnh16pI+I9"kVe#mZR1\(3sVFESAf,Bfc=blu8h3W<=(gj;i$Wg"hdR5<1;g>Lrf>n_TDV3#h*W_:GP,pU'n_WEJh!/e-s&5aY%?trk9<bZ"=/O5Ms/=;3BHgR`3V!UEe4$VB)OM5g0<CoU""W56WY6Iji#:2EK](rCr-Aq;iPhRVJ_lp':=5M"D.X`rle:Y9S]t+G*%K\no_nigHmJ.G)UTKPV3]fuFdPGL5-jX13061NWp^3l-@!X+!8R\M9b3ACP+F4*B'TD%%CYD((i>!6unblO)$Q+^p@FS/.iSC7-I%>TI2@DMc!iLD4u$g!bDXcmgo.PWPCS'&AQg)S_sg@L@jf[.(fgAUf'WK7^Ts#]oAkhne(WqHh"P:S#h>7s+#/jDNq)'fD2,"DB3J%4A^HJA$L**:^J-f9O0p+<%?B6S[(@Cft$"jQs7i7j5jKI#'pjY`nbdW8u?4#$sEieK6A5J':LPq#n%Y,@6<s3`Kh:fRh3*E$%\^,%+`MX(Z,OmN?JV!mbgkCM`f7L.0isdDbZ3dTF*43^eX<J^<TYcPQ+8qQXr>MajskG;\]S0J-s'.*.W^lcb$8M\:6_dpF-X;Y>\1&n%=!u-jS%6[HAZh'VWiaFDL02FG9Y_aMD@p)i@&kj]>O`!\m\VHi>T'[GXq&@7iQ?*[%p.5cFAu<ndrKOD^,W!)C)/;'n@,/(BJ!1m%/HDn_U(ZcGB:6*E=\EAP12!#]]K!]3SL@PSjskG;\]S/gY"k4^m"E>_AZddiRB)P5.Q_&n=.-,5<T`RW\]RZLbZ3dTF-X9s=g#%D%(3>bOb$8M\:6qsIKZ.2-Xtj(HX-;Wp4(0jFRB+P3k3?Kfb"c'_<TYcPQ+8qYY-S'BF-X;Y>\1'5PcH_>>;93IX3=T+l=@HJr`76C%jskG;\N3lrZG.,qQ+>%BAZedoX6acD>\1&n=.-+QjXU.30isdDbZ3fjA@]k^<m4S+.W^lc3a&Vk^D1gT\]S/gY"k:`lu0jJAZddi%RB)P5.f3F)=.-,5<T`RW\]XnPbZ3dTF-X9s;6DtHDoGsmXtj(HX-;WpqcbdVRB+P3k3?Kfb5PGc<T\$!Y(CBNBZO6-<b2-aCYQ9k%'u)/_A#L$HoKUZ"p9A(m1/$ZkW!q#P4?V;ZMW)\HA9]jlA&+;AV&5d4cNs"s_.G&FhK1<nJhIW3/_^P/7lOG=@EL98(Fb(f__`!"%/_qS;=o_>!;j4/;0Qe(a.DqDKU)9a9;`<qZSh]0Fc;+jEL*sm&i>D`hm,>nPA9]jl)4idAV_5:p'>p$m)$->;.Z4`^a0H*_Rkt-h%WbsO[RA0&T`"Zd?Z3nbDMuc`J9O`6%4;j_!cPZ.^=!WMJ_is'$n;IBDG"#kb1-?GG%*od[A61%2-c;-lNgQR@L8+$e`"Zd?Z3nbD%Muc`J3F[4g4;j_!cPZ.^T-K(<_is'$n;IBDp,QT,1-?GG%*tE\;dl:CL*sm&iQ:SJ!Ddkr@X'Xj)4h8_)";';,DIS`PMsXQMuc^t%2.Cec4E#2se)n!.%+#PNg"hGbaoH#?PMmA]T'U@5n76c!4;j_Fi5o:p$r;U*_is$s".njj`:.;^1-?GG1#U/[7LW(I-c;/,)$?Js%A]4(KGVVB!Si;G&b$IOG:PL77PMmA]T'U%,n76c!4;j_Fi5o:p$r;U*_is$s".njj`:.;^1-?GG1#U.p7LW(I-c;/,)$?Js@DqYG%GVVB!Sh]0F*_$Q6L*sm&i>D`hls[j%A9]jl)4iS@aW<n[:PNKbGaaqp,;q.&Ec_u/32UG*(4m8"FqfZ[_j!<E(o@^?ejLCI2i"<N%*_-W7L*sm&i>D`hluBu5A9d\4ndNm4!+i>Y"t0S<f0L:O'7_NY+YcY.VIO$AbX>I\JA2lJS'Z&BROim@1h:<E;\lS7a>EkAe!/[O%R&3R+nZ&R'/!bdFUF$lRW1,9JUZ`WE<ODk2nDMbB4P8K.+2hU%11-0Im((&^A\PIYau#Xl:"begC!&8DD3aoX*PShg'D%Lbb1\>o%F:pEApEugedklZbC?g\8S,A!cS#V#XC[b\"F)4i"V:>^k)@e7!$7`/=A!Si"0[#JRN*4/:K[Wqe-6'H/?s/Mkg3C3O1(F)S30o,[%eL[ApAHQKa)^qbm1<YmsPh"H>MCH`5jeW!Tkp0rb/lbSDVCBuYBfZQhZ@<V<P\J:\!gp1?i@DNF0jg?PXK=6P-UC[S\RM!_9r$JJ%TYNdjW2d9PlOr$Q@bQRrcrLl&#d@03<Fc4`hUKi(A\oX"g$+A#bCkjqgRk5iGg=H0*SjQ^7"D"I[SAd]_)%?ACZ(T\"Kb$=YAE>P%F&m7Gh6E?RbZWM-RBY-a/3@As@@=@4o#`e["ARPmMeU<jj`:LIfBMdi4gCBXbZA*]@)>ZqYQfG_0k$KS9NWY.Zj=jH=\MpE//+<U%4"\=T[h]XC$-TBRbh)+KQ+aSmYKU)1/+[mEHtE=0jt$%gcX\b)-UC])eRFt&9pqkPdn.oN4gLHP9N.f;drZ3ZAa_.H.FXM_;OO`;%i@Fe80jg?PXK=6P-UC])^1*Nd9j(\3^.sBc-Mq+(?^\+a)8Lor(1GnjM@%IZNBgTMPuUdi/]Y.*N<lSIqPp7cC<IX/C)YQdkpko>%ITK3EVCU,\krK9bZI]i?Q0HG<=\R:9d$/s[R&3PUVCBu9&i=/A/#FcEPYVK;?`1eCp:=_I11+0gAXZAGVX/HE1hE,][`Wug%U[oT%MYYDBNGoBCdUWHZC0?Q*4I$S?AK(20E@c_P"BbHRfJ`^e[Z+p&=c6k6#*`\;/>assQG!HhYYuaI`Vrt5==,T&\hZu-5u[Kj@[]&H%RAN[,8^N]MXdGtZ;r5E$^.sHelts^hA\PIYau#Xl:"e9YC!&8DD3aoX*PSiZ(%[^dasX?ZZI>U#HXSX?RBh5"M?u?r_Qmei':&sJ%X0,.F8^N_#YaD:];l2"mF:pEAIk.BFe!+Rh1n=V@D>()@RPIV56ich$3dbLW/*8ARQ2/RMSIT#[s,-WpI-%[79\=%kQ9DI>YY8._%e&moG-=tjdM^ci6j]sI8kp0rbITT9BVCBuYBfZQhZG..'P\J8sAXZAGVX.O+1hE-HM#c](FSO#8<m4Y-/+]&%3ZYr?rtY-jq9"(r%^.sBc%XV_@?^\+1g<)7C"ARSLMJ:3iASm_.3ZYr?rtY-jq&7(2^fG"]d:t\-ASC.SV%HriKW?\KI'5Adl,n)_FCj>[VCU,\l,n+=%#$opFMWr9*jgtV^YgXdIqdD3fRBX>j`AF+g:"^&8C!&8DRPISb5u[Kp@[]&Hq.'KsFZOn]5:kqIo9H^`VWf@>b$J.C;l2"mP\L!_%Bkk`UA&U99R^2>,I%:aSg$=Okb'`<7<D;%Z&XNBuR'97d-7fgR>(gJE.jce\Q3k`fSJGYes,%-+K]P?KVWf@>b.^nM;l2"mP\E/b%R^0+3e!+Rh1hE+NJu7mM`AD.pnp)bJlZDpE^/iHZjt#n#0k$tK=SBL=_D5PF4b.6-!LbM)J&O6URdtb)o6!*AAcF:C/+]%X".6=A%+tWUu0k$KS9NWY.Zj=kS=%l^C//+<U4"\=TrtQ35$-R[!9[cS[Pl7eQVG'pc.FWAO1hH\;VCBuYC!&9'"ARSLMJ:3ijmuNsfBMdi%rNDTlbZEZ%@_tluYj?kYKOr$kH2uE9!]3p1s,(O52!+B1k3I-ab5PJd=6;$:#;BSa79K8u@_sm/RBTB;Bb?[0YF)Of==,R4G$9Q1%s!oEI':/C"R&6(?.JmI,9pqkP;l8e)BZg<U9N.f;T+GDE:5?%>Oi;]Z^9Y2i1n=bDg&HqDau#*`=/D;lZsgg,*)3m"Mdn.nI8M!7%k\O@(-:$-::hOp<Z:nCe=n][@atdNQ:f_cs`B_SGNc#tWEC%C[<<C-oB.@oP5gJBCJ>46"D<<BjQ8kqMG8>7c3Ql1?9[cS[P^Tg(%VG'qFa^VtZLTg'$`I)72ZC_+1G$9Q1:FmhD':.5PR&6(?.=5>T9pqkP;l8e)BZaX_9N.f;e!+Q-$(A0O("8C]b'R.4fBMdi]rma+%bZEZ%@_tluYj@4cKOr"U@@=@K+tS(L0k$KS]].'jSH)B,p9e@u1/3&5Q2*H]^9[JJo9K-olN']3Bb?[0YF)Of==,R4G$9Q1s!oEI%':)^)RAQ1@.JmI,9pqlkilZY>%U[m6MttMCASm]H3XM7\7i'R<C!,-Zo6!*AAWJD)/+]%6<Mo"+BZf159N.g&"Du]=(&HH2_i[Y.%J#^Htri9^mXX^-Rie[ZQ6)BiqTLEM;11g]%f`d9gbF"9.jN>n]".''?bE5dDIgF67?gFM[)mmQ0%9iN_=>p-eQArqf=IEaC$Ha:R%R`1M&b4<s\drZ3ZAOe;K.FXMqau#Xl:"ecgC!&8DRPISb5uVs2@[]&Hq2c?_FZOn]QRh2Ko9K-oI%:aSg#\+eb'`;$=I?>A+tU?7%0k$KS]\^dfSHM[?l&'2t1lXn%bL%&i<WlCHcpD!V,HI]]>\1']\]X>AbZ3dTCT1"V8^N^8XI,kY;r4ok^.sBc-Mpk!?^\)pG-*Tb%ec78=dHK-]a&$UKU,]1#ft+I_oO9\>Z49g!.4ZgiITK3GVC\>K@)>ZsYj@:eKOr"i+KY!E$Joc6WK(kh6Apa)2Qe#J2EXnEZj(9N%#[3"$]s='4bZVbbp<mEq11tlVMeP3YR^,^)e!+Rh]3EM2l0ssdZC%i>='g)^_G6#nm$#DAA]""a!7Q$&1hE:1VCBuYC!&9'"ARP_%MeU<jjjdAnlZDpE^0/Z]jst5J9[a<pe7)3)VCBuYpSsUbdip>i@522YYj<UMS=M9Ffb]Q,bFE-<Q3fW)_Qjsn':&sJ/$DXq8^N^8%YaD:];a)SEI%:aSfaE`6b'`=D!%.'>#g6OV9NWVm':&qd/]+f+())u?bCjHD:7ACo+Ok7nS)6Pc4YB`LjUP^O[=%hDTH",b.FN*U%Yu(S-3J<OD%$bEg\`92kX+b)t8agG&Lk-^^DuJs0*FbA8(Fq![39=G1WeYKFCGn=*`Sii=N1YeW8+<n5XLhTnDqH!N)fttOF,0R@%1JA!;'q*'HT,[QeEf@GV1>l"k[>_#>1prh0J2m&mJE3CO5nj4/;b.!4@a:tEN\I:^@BNgZ?`eq4'r6c!>:=b>*.#si13KYQRF+nK%O><)i)jhhJ149p502#$C>86V*W##%:<m/=VTcXckZ2Q(.J:l+EolSIOLM[@o(I(GEn6r6<Dt7t)"!2UNBouYElY+B\Tf(nHQ0`o;%LbuOQo`G%1"kA0[8iNKmPKeWU+rf"tc,MS1AM`7Y:oD$DoT@f8GhR%E_j1aa1/m_8d.kD"<!Ekpd%`i//5<!H/Ba/a#_NCbVEnQ'%`tBS(@DcPHa$s&#jEgc5d-.@0O<>F$CoSnaG48j-F)4iu"BNfeO;Kg_oU^NAp97hBLI@kB>PP8T37k1bo;nM<_V3]e*g$HW`h3aW%O+QdEG,Sl+6N?9%5:XU_<e10>,/%F5kV@5sHL4B7CdZ/YPY(nMT[R^W<fsDJ@p(Ls:ma'`["].#]CM\14e6`oBq(<R)9jHa=DZ+f%.fb.I!mYp@?@1<oMIl#^2)??TS(]Ss;\M^L9h4G?'R#LH?AH\2LOGGr`CqY[Wbr9GF.[thIu=%BVE/d?HReGYcJ_oQmVP\Bn+<D=%_sbEX**,/(W;mW@X;3MJ7>`W;*WN73qdn"6rrp6#;.&7Cb_*35r-YOH1J>`)\o[IUX6mYf)oB?VH6)p#W&b@`eK&nI!'*TCI\$@R%]ccG8Z<mj=m\9,p<RfIZcV26,8S;^A763*24:u`/j8Rn>^YfQKkIS%i:Sh<Ma")&6=YH>TRU.40Q`SeE&Sp*'9Ha@3XScY/>c>,9%8e"t'r=o:^r*'OIBAm"$EVA.h2qC93"iD'9YW(ic\'pEQhA?k92$jjH-qU2sYC"ta<PRffBUH)t^[__/>,E<]6@p)a?K\/"!=Ghp%W#H#_Z.F@rPo*lCE9mmRs1`@VARnG%Wdi,R07-P!Ir)=FnNbF0)GRt%XeC39.(8h2EoeuiFA\X$*3M/(>YW#5'S]^hELcm8J?mBq%;'*S&D&!#on8*Km_k9jZjmP9h=):S3j$AI/3:bkqnB1`id_1/!R_EN'QITtTq'V?$hK;h7blI?4f>cA':T;^RN)HDniZ6WC2UE3t%`msA&.pZCLTm8$Jh:>55Ds%P0d(/$:I:pkV2@o(!0Lqm;m<Y3=R/Deea*t(\pJSMT2A#rGDq"'t@<O`qf.68CJIT(qYuLEd7d^k>%E9t3%E-]7JE4q]XrPE?%hLd=3NL`b-g0IKqn*P4B*!j4"\Q@ETV[r)WG&EOV\sDF&-"1m1X8Y;qeP"s!=-WRS`h.74fBW?(h.ni>%^E`DW:\5O.RU9ir.]*/6><WB_^13)u8WNe,^u!4n`3M-[67Itjn#r$]/i=k&l(+bs:6EpRi-Dk5:KBa"Lbqt`A'][k1fbp4[2"PT%3VKUK'2X<VDTk_@)T=pb?%e*eF:3!8rO:m-rae*]'S9Vq-poU$)+2F3K@S^t77Vo"mO3tBc:'3?r3G)LUiSX&"g8sbq5W`CYP_F"%\u>M.>/V&,G3tNfn\fK3oK63pR@oG>nP6kug@Kc?jZ\d&b+;ZonS95X%GL^G#VFT`Vk'j0;Gk*GX%Q9kEiJ=q:%+_:ka;0dW<T3=%`Ro[5I4nu-2593gTTc'8jGl77?1uV#nr[!hPoGfdYNF`/;r):I^&#li0AhH&Kk,'Yhj,KU:WNi&,Xb_USQr4#DK!+8nEQB*4:MX*%G?X8C*n<A6&%l1$(!`c*ZMuaCEn9!B.C,('NI&h`kb7s[=+9NpTbpTNYJ-37d*k;P67:oeT6JJgN>.BlNc9RX^A-9aF[8qi>SUg@%-e1Ilo]j1SaoCbYCUfkikc6e&jhB?VP`D[Y!hr:W*fM7'*I(9c*3&)O+R_e!dOMjl;7]mO[$iih;kl/9p*pNnc:0ka]N&_X(3n:O%etOU9GMoXkZ3Psb__.#QXeY(oC8F=**FRqcqV&&KoD;$K`GJi`R@3HBe_EKbdr3>K.G8J4SP$>W%RU?4=a-p+RL<6Brrm)#$IEPT%G[ld=S.?M9f_H[N*Lfh0QV%bh&)4C0!d'O0Ki6A_06J!jV$jHlIC&*;03[dt-QW&k2Dc.IZaEPsG(R)*rTuM'41,P)dW+\Sb5P?2%lV6W^QdWppf1LlSdRY^0Sd_VVA8q8@h=mAi-i86g>>:492nWR;l]&DQc'MW<:u*X(Pt"!bY9u<4\To$lYC-re^Y3eQK1d`hA<CTV%b,%3q=?/(X8^+#qGNo)Z[HEYN-Lkl$V3IIa_C;NHUd[U*JSC-a[4V"P3k/M8*^,'g?2?%oC-SL=,R]Lmh!e<90N.N^VDD\Ydpo9(%!d,Vh1?e^tR'2R34`ELd&gr+_59/>K+M,ur"\7Ehlb)GJ$XS7#p\4Cg8/$MsBP"T#AL:"n3G;Id7]GajSM;IVeIU7[M#rf?jVt$o%H<&mCM8J(t_b-=!j_IPa+i6>gQ-h7O_s9*HTR$dHPK%H3n#N:7#"iqrd_;1m)s=S-/bjf6I74Ua."u<4Kb=lKYgjPKU#,;OdMk5M%;RM-(kZX#Zkmfae'6me(`65mj"&#rgekWgRM@j<mSiBR<\t3HehZK.Jh)=X8?"LrI:,8`WIJ5e0feoc6_XA\]EA0/VBV91<f)2$2%b2rVom"mknbY63c<5lBHQL9DRL"=]K424"[&;EQ]]jj($3P/*^2Qk<*!ueM\,g]/$ZX:ZIA+is8'.p:fofQRj3<]"4;np)ofZ3A?%XEI[L<e'u/$*jilEk/;-2L<!F5<:3Wj\A7V%=]s2BM$Qt0?-It^GZdOfW4=G-J'1X<iNemZ;-C[;XGGtaK*_9g/SZ+#O01jJb6rH%hl.B>WG@BR3RP9Q'NG4bIh.NG:eE#M3gWh0Ie-#`XsMe>H_k*o@<V;iMU@WqMoo&Z*%_9-=A6(?*lo$5$=+lHPTlV'>.p&3)iBUe%*A8VFWqeAH]II*g_4Xs+ZL8N#X\,O<h\HG)_EYFrG;3c-mL[4<'j>)k1qZY[%uPt.-Ts';2%f^pf)&r\`o)Y99,.P5\L-$TF:1G]%0Q2<uK`nPClD4ku^`/hO=io-_0JZNI//1,Q4>K[.7_;FoCH-b4WnrHaltfB*M0*&jYmr6CUu4DZ@Fns&X3F&-Fl!s40oT!YfBPf>%UWNu`1a6,B08u+-]K\LlLk#kGUEfP65Z^l8PDsrk&@8uN[ug-;5ad4Gr`@7lTloZg`_`d<%h0`+;$Y5R6m@U>+c_0X\u.;1EkOt?%(_sCAf-80aHc>."P(lcmN$r3"/CHd?6Bm(@-5dtp&4rB9*]7@`RcPYmX]?;<7Z8+qYnM&#L(FMWYh\WY&TMf.o'5&0j'FCu[t,N>%jW3stSD-2qH+N:H1)N@RH6LZ9rRX^?NYq5*KNqn9^OFSUCLiqXT0YHV-oJb:C5sPS`[\i]^%CXj)]d,*j#l^haf\lEFB2F.l,[4k%Nn\/3c#8X#2ob39Bt4!rHJ7^83K<W.Zf7"<<$uGE</<RbhKa'HCXfs(?DDU>*S5g$p1TS1<::J25dtHPUHh5pr^;Zfl&DB?^(2gu%\Uf&C._@!'(<8hdf0aKsTtpnP&um[JGSgsG2f?9e.3*M^kkBOCB#k[<=[SoqWEC8kH(m>&_QL6SX]2'D$,MEW4dtF#nIHkBm+00t%,)A1PD(o/"<:9)]%N5u^?MWk7<C=^(Q1KJelSq9.XQ%g7)Q95$9YKJ]LF1maYr`V<KXfi0GjoP*@oJ%R*?k8]Q(]T!(q$%bDGR6e%N&7o_ce\FG"W?@N6WZL2ki,4/]nb`/01X]eTpYYuhlG]MKnq]CQeHe1$h"bL$0fr$QdS'"f*1F)_XZm,iR^N_[lS?2`cm,E4et4#%-5!Q<`bRaPc)k%FmYR<mZ(,W#%%5:KbWe^j4Zjdn`ReC=&XN#ShZfrhoL0>'E2t)!/oiFXRYA5T7:sBmogq[(<ea%'%W?89iEag1%hq_:t8laS.7g7t""[lr!CXB\j+Q>dk<9W#QUO:+H1l+WuB^&o[s!YOthn)W,@ZOlp#^:ei'<qdg90K!WL6m.tHr1*C`9X;4S)G8&%h#rM0J%Y?G="el:fcRPN1C,b4l;bCB"EK2,SPd4HW`KhEV2*)lZJ_?Bd5&8*<]FmTBdgaMk\l)4rjd+n*eega;l+[%P/lgX*S\Y#%#n)!icb08Bi7XHnNRQ/8lgDgT2qkTjQ./i_]5kH*;18'`pLnj2H+N&`)GeWPYI!AT[B92X0DG-@CO9E\mr-`\Gq54]p[*5pf:U-)%,P*^4Yq/,q>5t1=Z*giACMYkOe^_5+XnB@told,ic.'_uGC*O5\p'YsD8+5,&rGcff3Yjdp]U&l1:d3<lgo9UoCH0Ys1GY-XS@.%%jN_c:Ep9FrUm9-e:JXnRbKiuIjtfI%c2#0!Sm"n:qXEprfAoLanR;2c_su<lD/EP>^29u0&s]<;npDssY[&[&bu8-6I[hFc1<"10%<iWf4rjZ!&>rL/uen:hW3IX*6jH[Dc>8sc;T8J#haGoidMsiiWHhJtr;qQA[>-WQ@9cgK#WJWHYF:54]H0=A-;EgR/hCYNVos==N%jLk2&.J7l[a3n#bq>4FNCV=ugiQ[S0omGW0_Jc9ICiSoA]NL@u?)q:XqI?Z"rCnG8Sq$E\V7uT0Q/"HMp']'Y\@)=u;Oa.7f0=Z;%8lkQ0.ncB/l`4(JlXn8E<Z=IZ=jQOb935n$-c^Vs:#c=4S+YRC:,TSd<_BR,d(da&k/,9HQRZ3p'iBTZHh1J+SW,"pfk&3;5elZ5%0qZ+cdf0!;N=U^rC[1_ZDj9Y4l9&&0V>9*WG0(Qle9k?:G']Rf=u9:^dJQhnPEg&^p+rc;`j=HqV9a:3MhqtY;_AbqDI,MV]VEsM%V3e`Pi7l7cG#q(-05#cjbg]GR%Z'OCH0OG6m'<(*Fg2hFF1Soe?MO?i48!-^^l[G>ap?i*O]$*Y"o-Y#J?lD)KTSBf_Mh!abS`9\%`bW68c-POuI.AQSF"($mh>NU]h<.R4k5"mucJe]ApW8&0l7c.!0)aN#okj)*DEanH3]Rk5q:R<HcCQIX+&_sUj?YEioCOS>qJ!+8%(G#(n\TI@q!Y+qqLLhJ@r9jIKj'S)-jMB]2h-=QsYUeG)h9\L^U%b%a`4MjI+5C4t68)'fh-*$W5#.]^Bst0GXfl;'mEk9WO7c$1%XH$`M*2K'Fo@_HDq$Zl9`iG&gqmrVd#]0FkaCRUt?7[b+I-5j+?hLjD\7=86+XH7$AYV\r"Eb$[e!n&<jOkK+,\CPc[f.M\:u"bj%jc,JMlJg:])knIgc!e&@*&"ejXL=M11lnfF97)M#=&NH,I.ECRa4UMdkS=T,atp!MPK!15A[Z$LkMI@-Xj?9HIifZE/q<*,qseiQ%Abk+!e0WD*\!rtY:S-nhQ@LYBSP3eee((,>;TqtMm8$ap##/-`eSTa7]&Y[YF,Ph8oj#N3X=h3Arin4;hlR^E.UUD21PV/M<t7D*%E"^=Z&'OUnbj(8CMq$'bTopm,5PW?abE#FBMqt4)#.<g's&RB->HtmfO,B:M+ka>;.<B4l;UBG=;geSuK[T^`JqDYd+()Jh%PQK5%G,"*,/iGp<i.#:_oukhFqtYW72r:n%dE.`\rNj/B5t($6"Rq`FF8q64Oh+_pQ#[hub!LpOT9!<giAQ7t,QqmO5&Y!K2Lh9@B:?Q4%+NY!clN2t,*FF/2s&`I^BbZ-Nq'SX(BpHFYO+4f6#>^oOO0+DnklaEMnGt&BpFN.gDOi)7>:4ak.7FH$5sT"^SmQgkH7M*A=$LQ7%3_3=(CY*tY^M//MP'7]l=nl&A-1<=;V"jWfmjHjqq"PK=goYO_Efm(1n<S#e2b:HjE05#cr!D6rSO8Md8DS`Ga@BcAb<`dB8+>nY%7RRP,f>LlS`PY7*I-</I9RdhO_KSnj\LM-AdYK)Ui@#Kj"273'PB+T./Z+Os=HFENMV`raqjXN_jSkM6D$4\Xq,(G3]F(Kadlc95%8FKp%^V1u29hDNqpqG9r`Jo)8-4oS?q>&cg0&MlKQA)g?G1>HQ]kL"/F[P=DlD*`i@mND5k[.Z)gSq)27(hr[6=*3'nBKS.0Vg<u%\qFf@^9r"jT(`)=@Y+J56nh)d`TKa<iEC@mja(Fa"+8:b`Y*EjQ=r3IW6Q6*@&&m$K^'O6@&M!?CCP!0pN<e*/PTo?MX#Y9g%/+c%:V?>[9,]J>hWjK.d<:nPL^l!kBW)%9&sM8S#R`)plDNh^I"'PA*\/nnj<$h@\h_k$phh!)$np&6`/qPUW%PIpNF[G2U3Y,b7MWdT%LmgO-g8k(`8=k4]Xld'`HRGKN(Y/#.i?YHX='k7TIdDPfb<:06J6>S>cI_FVCqoNT1mcG:f'/Cm([9BBZ`S'ClIRgHQ%d]oUNniS%S-c5:9;c=GJ1]>fcqm"a(FtEIK^*ckZhUpia7WP=nrp0dcPN,DAaAQ$Ap<uN.U8[sR?p%9Ae)80^XpdtK.V"APhrl#OmTCH<\C"]%XSg08rD-K:07EpHoKt4"?TqUeREOkfaDOsTk8,$)7J:k*[mEgR:!;cZ9V@)f[1>U$>?H^^dhHY'Vk!@:69VrH_+,N/Xn\so7phH^%0$ohJ>;nbG)ri2qBnDf%^GJ\0QmRC8f9+DpXI:i2HYhU.='Z3Q/goqfK0FNEIhh0;+5`kbNU=/Q2lh^F=caf_[\mG]c0V=OkO=)B%o@1CS0/$5lk.`cF*L>T!/(T5o$JQaMp+O\H6tYV[j`[+&/.6:(T_Xf%f@G`JhF[:rr@WmfN(tOdh1?%k.R\Wt1sHi-!O/+ERhoF&%qk'AHlMoHDl5aEDYN@tb?LKdk;'QV/QCHX:a6/Jh['%12c$"#]Og=L^&8""L>i&Y9e/,lar6_PIFmJuN-a6QG??jh!=8Ec/?i>BF%,^oL]d2E_om&]%?h\&cA"H<</ec$0u,)8V#1I0O<0_h6N;E#\?+*<0A?7T!t13V-9*ZNd+jYjDO':iC0h"P_?T&d3-(5tk.hPo-o%ZBh,cI^-$QhOE$,_lZ:KnPeOd:sddkq;f/s`ui[ZDEg,ZW<I/*5Ei4Mf(l#P=%ede)[B]_n'/\Im!JK&h`NjT&]rg/]mfc`?e[en%75%c0?`j>nlRjb*Sb,Z*mt4g/F\6SKA7bRbj&&SoI/0@Ueot1V%o2b(M,KLQZ0_$^rUHB/\JL1I3oK9;m$m*''kXA=>jcFud3[@C%gY+Xe?JRYj\+FM(Ep:(:PFqH1j?,inCC:u_=#+^Z07F0E].Ph!Z7eYjcM6eK/DB;fc/^[L!HB,lh"]F2MiOQ&Dl=d<HGL<fMs4-7%AE'W+aqrDHZG4h93C^7D6eT2#">b7KoP2NlHFHRFeeJ#/>8[6qT+7@4h+pX/FQ;NOgHqc6EL,@r\*t7$oN-&[rVDA<N)ojH0,%e<%5cgQJDAm<IO(VeG:9P10;rtr[!gt*28aVn7(N4]uhYrg(q`b#`$@hSZlW<BK6>+<Lm)U2Df6fUi/`H'SS9'fU?i=6peR=9d?c[C$%k3K\gd$1W\rRu8[gauu=)d:h9IQoeV"5RK.JQ#gtk*P/48U\F##P^BgKe<qL?@/ucn`p(ZbYG#,-"VK!Qq4r<EHmU.3a'VAGa[Ig%Au2Yp69VEML^@X627)mcmfb0[7hc-j]Q$'4nFju1VoQ?S-dOtfMU5\/ZMel*o4DENJWuYLfI'DQ@f?^F_Kie#I!U0#i2&J.U.:40%dL3AuT&-]TC1jO7>9BFpS"2M,5o3lj17NVNYkV,98ReOZdITm!cBmpX+H+PC8h7:G5E!Lgddq\[T[GD>F.#h-?OWr<:HW-$DLVPR%s5iRF80;/?DtE9"I8SS/mu(8SNjeZT@_J"3p-1&m7RK`g)nBnAQ0+"f)"2+,0\<,a8H\+<rC`j*]J;]hVr+@9]]t]?@/$DpkR4?6%^Q+tN[sj%<_]UHi!R5spS"$;bO9'ckJFU0cR[^ipY;\5u4eo%\#G(YgaeMQ"pkPIo4aq-r@-\'>lH:2tO:5R4T[4_Sq3nWs>ZHpl%CY@OGoi*NEGm>YM=P0XW3%\\3<mphFGag-C5?>+_^#lZ8p2kc7T:`p3s8>mE^H?`A/_2F'*Hd5<r7W_b'^F4D84m3+RbAkbENYJX%PGI:[OkP&G.DBT5N%@d;PkOd6>WV]J,+%/t3-tOF;qX`'X&mEZ;3ES]DLFLtEH<(eAuIOOi[9erekWo:/\>%JUNO]EDoo#;0;u'>%M@M;7el8Sn]t%rqQhN"'0<OWn0YdP^]`+nZ;&Xs?gV@CsG9@njT5B!)T!Uh0^GOiT15VdCb1>;$T3!2t*<((i50d0W_:D7l\Gf+#%HdMX)R/M?"s*8n_dej$=h:/#;DN<<RXj$,"NCIOU4I=l+Hoh9KAF\-P<9<&7EEuo-4bi4el8*0IlcK9J:7hbkm:8(Q4K3t<-Pn;,%&\-<bp1&G5pLncOroAD^;tTC4!<VT&XEh(,HTN<jl/F4q4+%,,"dK/t(Li)UQ$`AtB1Z-`X38`\bBXUt%*'&tYk\g%)kCfsEsk'`%;`$,A+sT9`]T)An.^YMQ#%2eE7shMFBH-X;;p^E1IjP\jPQkanX/i@^QaJ4"Z.N*0i*0VIe;A9Vq6Tnf]q.q:/%b6]'[$*X:a@OS%pRHObE)(_LgT+rX7MXdmP#r^N=O32^nU:uEi6u,_:DO`N^BIeif,g6s!bbC#`S1<S"uGMcZU^-IC6.#*IMjL-S],f`$%r#KRZu?(%\T]/q5NHY[;r,N2]rq<K7pbmdTehBFD1C7he&Ggh>qBj,q>;Sh3\]lI99lW]VdrC&)jr$j/m'c1aGZh$Q/Y9H;q(4K`;]'k3E7]`%Ie4NI>o=#EgZR72H/j0PK+DuZ`Ih^Sol+!l$#\>8aWl;=R9;`K<G6/?=055s_t+8Lj]OMAf_br>bbKJ:CEL7X=#PN@52%5KH+d=*%p'f1=T4V.@)P@,t"0o0=l>1^g#b>H'1qRl!HjL_\qoYj^0DAllmQQ=`k7WF(4?)/CpZ^6u3O]jV_>?#M*^9"2#ldN3brS(&6<SWf%q!<+]#dhN"D(`J*r.Gj.gXX`9[>dGFD+Da>Pug[fUflQ[5$hc`p3*3f>MgsAKf:M(d`VGZA)1@9<e3:R/V`0\nlLOP87_:l][og"%<mj18?%f'X!q,5qmVC2BI!NEXo'62;oj;616Rb&8_^%'[oB%^F3<jp/31&C2!$ORESJ9)eY=V2:[0,+`q]J)#.d/)rqoRm[/a/OZ%(Y/"Z83!sOf&O*4]omW!$DH-#?8*C"]p*tG.$u+5J,<VXYL9W'QX:)\dDC4B[II#hT%VrUGhgt'mS=&`=O)>\h-0jP*n3sNh3+il%s2kH*5@;6s>HB-3b/S-+K\_\nNQ$s>1V7Q^&GmiSg*!&sGO5o*>:4'clJ+M?9Q+Mq%.j#/EpIM_I/3(s(9F/F^N(:(Hm"Ch5'>6%%Al?FL7UT185$QarZ6!ZBli7a\>M;+jp`#lcf:IFukq6kV'ajc#2:[+pQn#9f-ef_-J#kuO1fN5\4;$]Bp[_GRa1'VGT!il=[a@]i%q*_-@#^<_95OT_@UU[mU$6B.q+^$tCBQVnXPN-kp6??PuN($ON+$b,MhLYt01_3]8fBPO713T*KH#K6qgWm@`qRHhgYFP;;=^io]%3/&f]-9%+Y`nO[19p?PHomGdFo:iU\hcTlbRnDDX4.+p3'%DWTC.BEcf(/4R#rK:G-r[*mnmM2LDO4[W_KJb&MY-<k9FfpGFnaDc%$.eEWp?-fUlhI=CpQ([0!B;U%#"8K"^-DD`1EanJmd&64F,S:c5FXSJNR[se@`bY<]N[]q]RMg8*R+EX\`Y*\:HrJn51p`$rDZu-%omZ0&njW*pds,=#g3$b>Jo/.#`moglqn>fX0/d7OS?H48B"jNo4UDEu-Qb,0@Eth\b<gQB^>(3>A9Q,[e%R8<<o8=RP$?R5g!DC-%T9oLQrHm,3bmkU`BR^rRo969'-"G8j5GR6-\j-YSm1kf1%]u_'NNC6UhDLY-XS_&@EjGQ,d:)I`_D`27_q3,%7n'sm]QW.Ehq*&^%?6>SN+5`\X?+aF8,(c`s[!3g&5js>o[g4Y^)IBI'f:IAJFL9,.cBbd59+HolV.CK2-]MsAj_Ms&rNk3VkC*'I;s3-SCh+sICL!3%%Hr$>=k*oJms*NEZ2V3<D/OR!Ud>:;mpX!S5<mLpq'W(iP*V%=ILLmr@m=;+`It4a-OTo+iEW%lT_O$g6\OG\CrON]\7q^bRBfnJ%%R)tnAY)A,T2q<9%qq=V1Cc@<#;KloaO[o+lZ99(N`4ID^;>9GPTMs,&\=LOE,Ki\Va[J9Knj%F]C<gZQ:VH?1-1B1T,)F5j<Cci^%[%e[f(]/IHIXK@,pVPZ&kt]ZeGu?:q6CEi`Bf^4m9\)_CXH&FtcGLl:Oq8Tlh.iX),L=GS'aJ_S6FS+tQa-8oO%u(7KKV0sqWtXt%F5/fpGg2acD'%Z@rnn'r@?*ma?$H=c$bYp&+&ugD>I,T&RL]::WEkFuUU?X`>_Rkr.9l't`]^t.G\#KEH7,&]b'DMhPp:E+#^OGi%;\_NqZ!44tka"Tp+c'%G]qJn?CSeWa_;2SZDLkWjKtoRaa/NF[:VCF0^p4DaJC-dnIK9"Y[p29_Y9RCh2UM2qK.ZXhbLQOuN5\#1%r@0\M+)#?1%T<UX;MRbkhlS>)KGF'1aXjqJ]%]&#.q"1oUW4M!DXS^\d>6L*5[d=)dO=RSp:L%sWh7%Z6@+8pAand^6cRaYc]"e)%k?[lFg`bq%hR,<M<'f-`D,Q?W=q.Ijk^+QI88UDL%AVXRI0X%5?h_n&k+;J%CX:J03loQin7\`C>E\1Kn'MR4p>W<j)#_lH!P%jS%Oj_]_idTih34X^.OC2sjR[9T[\8Y*#p<>XJ0"n:7&/Q+m<=+r1782:`*3lt![t2l:rZUYj:(q`e9p=G\TO^4=rq0Jn%J3g1B]e98%Jp1TG7%P4iF69;K-'L[<lEUPrmA-q;`ZR-ebU;jN-$"f^V6Wb9ro3UNTJ4eGGK@ut.t<DPh5P#-9=UIXGcu?2OJW1-p5@bTPT!H#%HA0+2SJ\(GLZY+S]i9p5jf[%5O6fl2r@np>GV4hlk@OiN%)95n/8tiSeU]ZM7),mI'U"'7U'#d-O[^W91*K(Wh?0.,i+@\!VqmfO%n$;"Co-t]QfYV^gMq+^pgh7VkmsZs&+f`UBh6Hm\H(uCl^V,&'71$7jp>4iZnYkc_AWNnZlN#M>S#"lt?17`gds:kb<&AM\5I=%u%mek4RqrbI@7oE;j;@WO]?irdjcK>rk/mb]i=.Q*JEgrhBQj^&$(!/Y()L0#"cUFOPjo#"H%%,Qhmk`$hX8p=SOSeqKc[^ts2k1sh%r+o,oP5(gEJ*'r(TjP9is+Bg82=O+q5Q6@$hS>JM&G/JEn['rtq'J`<I+Qacrg8g[R(BZ!=aEEbF@W>rTTu`%BL<'T&rNO=OtGDp%`K;U@P-?OgU`di8*=+EkKPW'*Pb,2r4^hJi.#=cJ2#P1(>K%Znf56IZ-"KZT,[7MeVQSqe9W4fJ3)Uf\RL)\E0L%p!R&6rOG<-%9%[T*`6+J'&d>!eJh%+4Hq/OO.G3Qm0DABIY+'=J>V/=UC,jjj$WUY(<3=cf'6(a97>(!CAq<^K_A$oB)>-p#;1iM@='e4DV(K\/nK%b%a7<:ih#ZQ*:Z+b6kLkc+oLq$/O12KrfqO@fp"Pg\b;rmepN2>Zei"C52ZZd)]"ZP'IlN7t14s&<[fjJ48__l(%N3WbYmr_6H'6%'$'H19H:Md@2asZQ*eaNV_dkFEP$;kC^<pVfUW@'U'`]]Bil/DCC=Y]gD$+Y=tX5KWM!TMCjR1/]qR#l6?Y1[_B?bEZ&5t>>10\b%BGFG\7<N^N#0<lW-WFAO7IQ^(oVlCh4B\NCJ9KEN88:N@3i4*)#We$b*BHjF<NNcG-QIXKoq*WQ[1E6X)?qW#FY^>/@mfit;DhmN%M?SS#c*3o?Y`EW'A,n(`P%)Sd.G*iGC8f2[)%(1/2]O7K>82\L[jfI)lrM)0W+*4d?""JWAVWqGNES4cZt<NU*MZmg'h5KDP0c6d%(^Hog#W*0KDF:ZOStW(s:JYZ4lqfPK)_8&mS8=2S%,@N,?dXZeVEk:t\d1*U*U"aXklQf!ChuS>2Prl/"2Sq!6^X/n%21c;3!fQ9%7:r2u6V;$8=`ogIWg_9L)oo<s69JK"6ub(LW!2NA<CIM-P''<').ir7Cs5S*:/N#HMebXF<0@i!:+/#p$8ODS.P?fY0ekVK,Wgfn%,bTo]Gla010FYnVPSL-_%Rd0PdK!=&Th#9SGMG0_%F_uS3#U5&(`^"(0l>^+`*jUs.rfOKm7^1m]0!:IYrd("n;Q.rU#B\g_\6$B%b6$28p_/sRDSd1ph?k8*'nj=B7Cj\u_]8"KeNnpd*5j`L=f40`&WTC>cj`sl7$YQm&ulVPUe*h(&5Xtn'Q"jG0rXO]KV\k&7V+o`%\J,ste6sE,THan=ecb)"gS!4%<!ccO'JV>cfS57a1HT:t0ZSfHN1$(?lnVHC@*YUj:.M/6^d&@cDCX<-n8b!8XJ$PlXUe_#5g_7k%^-ST/`f`D(#L0%n3iOd4@UMVJ'?r?:Vu,1])Dfs;Sj:tdgD>r0IW%L2\G_!INSPi3%^GnAdW:t^WL^l$g56&&6,a\#1`T5ImO5Z$%jr)gFqjSq$BCK;Q;_^>aR>!5hclDL>j$Fo.I-F`S;C'tI((eXl3+=68ja]E(UaHS9F:4Jg*F5SR"+Y%<U^dJ08^G0p)4D(?`rp6"%MI8^hbFi?Q)ZjqPdKI?:!&iMjTG2K2,R&U$0glg;TY@?CFd/R4DVIHdRP\j$%`a4R#8Mk6a2T"66K[O^F/U/eo*P&5;q%ZnTE3`A%QG`V$eA`Vq<YZ@!OE/gUKkM@(8HTng.@LSPI&CS?C1R_C^]_G7:`!*o%3_I3,.(0sZ"B3iK)2!s_?0E@P[50n9sY<>(gW=W&Hm?S%(E,!H3E.^!(R:Ek-6sa\SZ]Q\V.me4BIj\ZFYPLXp,aO[ht)phIc$'/2.l<PdN#n!&Un^F5YT6RAH4eF[M0j76;t/GV?am<WIZR"%5RSH;Tud9B".+&h/h<SeZ:2]cP$.9@A;,S/@$/tLm:To*_,JCKEl1SD3"FH`!5$6ebD`:O1uJhMAhBH4+D9.;<OR&8%FDl*@L^Be%>+1g?9EuWu=pZ+tPTORjT]>:dcAJ<2@NqP5%>6F8NW;N_E\N>dh6KTC!JQBk'QbJJ_5%F,?R,`^0T=F:*K+Slc5*uFVJIZk#Z@>B%'VnRIFOUBBJ2+JU;_795daXMiMFcb-Uj#)q:1G1ae;5SQZ+CS]a6lJ<J?c^afE!]g;p=<B\l1j=Aqs.<hUSQ;'e*:\JLha"Raph&%2IIfJhr0\K#OBmH-B".O($ZV1An[iE<CELZ"[-]aBI$_]_JouQ5RTUT3m'dsNhcl3**l)sW+!Q'J3X8SjcI._!)fb71?eT:a/2sD%!+m^<=;QQSKbQi]'Ii5pd_`q;*Nh[fVG/_oohLTd&51r^XVekm),*)YdRJl+&X`grdC$"6&=Yq7LkTm9JdJQD_d%b&KI.KU(]1F8%'Fj]]@$1YlK1SsqW=1V"#X[Vhk%PJU0ATS]"K$(U`jJJRf-kKEO4n%a2F1SJdk\lF$,]er+IJp8RRY,<<-2:\12U:'<(X!BD^LDK%'BVV8YuNN@b.'9>ij<@FoVgGP&qqq=$Q1c+;nQ,<E<QVABhKfcK!F9J0Q8TIXZ`-8;+M+h7A=[\qE$A3,oYr:9b&^m-k=IN-lP'7%78g@%@I/hB"f5QN*C^_)J7ZN4CQWW</<VS9#dgQ`P@4GE^m-[J4,dA]IrltJ;D?TPbsF+_6Ml>27@aX)IB`j(9r#gFT_2KG)UQUS%628ihdDVJ4R-ouglHlpkSHdsVa:3mDPFVHTIj$n8355#MRH)Id?ld7N+Ipd;aq3jbZ)("Td.-11o$^4_Zil=t+$ptOb?u*=\J"O#%%7J8o`!W]A)RM='@?uXZdhQ-k=un8l41(lehuXb\&YNs?QA.t^_hOihlCaM1FkM:Z(fpg`N`\<KVLY*u1r!jjl4!6WbJXcb/VHSE%jp$3c!r<<W%_rnE$7LW1WWL9PW&#P7Zs<p&]a7`FBQ3a]5t6d3g;0<Af_A2uJnV7pqQISdTn6Hd;@hdH2cN^CEMZN`&grVY(i63S%#Q\pF28Z)Bl8V?E.M4@5:ck[bnj(1QRt6IJ[AKK!.L,O;#`[Mi65,=2LR:&504LX8p*1'YQounP.TTnOIO.PL%Ta[dLe8dT7YcEn%)dNJ=*7ooZ)kO%)L)?S<=K$t)I_*.jfNg"'K?gn?U-!Ij&Zc8+mBp@3[6RCWKW3<B)Bd?lKOGGa-<\I#05JoGdfU#9/LVLK#0cB+%;?9nWNf#$8*CqYEF?U"k=KOF^Es%d$dD4=lG&B!rJ8tseC5WQF@8\,oZ7Qe`U6%6lg80?e%+MXufa]s]:bfkPL1pg<d'E)$AZ9'5%dQ921^o[SF19#'o$8o+2WGI_a$PNWdSt25-)C)@BibfW1?8H<9=2X8+D1_)U4-bpkTFZ$[MVX2X3-INDQ/6aKM;pC0?_SGM]/P?Y%a6Cpl:WDeLXo(g*_hN3t)T##Km=ab&Tg27>Wu#`3q3VfU$h83%9L[ee!&U/Z&P<C"[jmjS*L+BG1+`bgk[9#$T['D93]0_Z`E<@5%VH4s08[$&tTd?ZR:,8L?feBf>FUrRe>SGR/#hkclC^`'="m612E%MbJ$re82F0'nd>Eg'Z?K`T3YG+r4B*4W%"NP=T4L,U'8]Bq`%R#MH0j#?;b`Eg42_B_%BW?DeV4]KBDWJ3[-Q?T!MTZ%@&2h]pP\6P`e9Fm"3Zj*l<XsR!W-l+)!ct[#S8&b'02KkCF]r!6GRggoF%FUGEbK7Ypg@L0dcV^k_/!JC\#C^!NT>XDLXAKb%[O!Rqh('J?O.Kg^IV4&Tef#WQli!PuhU$A9fdX\>m6`pYOW!JF:UaXj")c_];%b\"h'a)0Ic9=F),,[5d=[5*Y2mZ;mPAej`Sck_HFPD]j*5QsihaM``c>T:Y98N_NRVR:/j8dn^P&/DLu!`FPOCSEupJVpQ6JTM/!%9n/]L`[D+:3\4DL9;NiR['B<OXk_q#"IP)j'Bgj3A(m0_*Et@f0aQnaeB#`mGA,M4$Ehb(0eG#.M/&b2Xbh0':mtrPaIsT^:-13\%CA#FfPOZ/T'uU2k!R#7)FA&.aJ3F3j!eNZN5d%s3*4.$![d#3*-%KAQ:<pBD6WO492]tp4R3$p.JkNq)mK'd"F?GR/d=)UD.3g&H%L":fT-'2-G%^p2XKbVo%#o!rCK[kTN3,"rBRPLGa;ZW/l's)cVp#e/2^-PXAN13piKBk1q-"m3.^?jdX;/GL5;TG)q5[B<n6+E<o%;hgBmEM[@>Au,@.%htC-FGKROEN'Nh]0\EKNfN;Y5hneo%I*tuXi6\7k\XItK,t#5fb$k=$>A-C/_S$#+>dj&C0RZ=E9A%HLN%:]%Bcfm^'?9#O)pAkZ3/=6d>b[,+6<,Q;5UHsJ9ir*]+Jb+T?9IGkK5"$ih>d`/Bf-Oc/6rB=\jG/0W.^!`/Pod%\7d$a*$p4Ul3csU%d-@YLKNQ*=KJ7X:YTg.&BG!NA(d4E4;[btB0Z$+HC1o9*"5XMEES":Y-UZX=PhHfSc"W*`An\J@$;XY7>TDNSFLd5UDeQZde3J#d%)Fq>*HS27]g9s]0To_O0iMJjJ<5uVE(5<J0UlfD8io-%+TLD5kMaHY&:nD8K*Gn[dB]-n$N+3;%1Bgp%0<BaJ0kk<UDY1jL[*Z6*%#2r<&Fr(U*eA,dl>P,7rMQ-k`@$")P*bdGr!"*aW&Z"?1>+.;/i;<Y,<"G:Y25NHPnRRiDFZ8e4!pSbgq/iPu:OD5s=.;Ju/u.C0%;*^``JeZE<Jh1*4mfWss!arSO$7$YL`cX)f"A2#@94UDGAs6(rEWT06oE$(>"M5CB!>&t#:(>!`"$KAPK91gAb#K+^'@R<6\L>%n%EPYIKERil#KmlIkp^V.kRQ.TeT]-g?`J0t@[!(/S[&ja&MBS.k=[:3(BqQK2*X%XHs"Tg*X:Zrt0kl8=5]#:bin22cR4Bn20Pt([%@+s8g_0J4&Gqa5Sp5!0bUJJK[EVLb8SsTWnMFT3%M4Tc"+\WlF6fQ`g9G.X:R<U7qWuUYC,YhXaj:O-l2N\1FV``RXW62JoQKfZc%X9,X,S^nM86^CG-JcT4Y9/a^JU8+m0"37d#2NlIg#fj;@]=)DOJoXDG3XD<PVcb1i62)YRTl\ccF?l*l.*+++!"=l[MbZWITI(0:%TOn]a3@MK^c:/q`[ZF6$P-hEN5m5:lPuesH-/hnp?n?0s#p!;@l^%78Y>o]`f$L&o'u;Vo'PS;o;)*(GAeh/&fs$ZI^p(Z`(hCui%XUnaEqGSQ4=I+(j7fYn\[d!FM0T7gj%qQ9Y_/Y<;CKju"Ju9MeaPEQc$3mnlbOW14Y6@B;3bkU&bJlg9,Y9t'i9;kQ(7ZU9]+WF*%i(7lk.>=KW0ZBudA)L7M7a"Ef,!fNM8/bDMq`$R@J>WNDND)"S&6R$&_.d16-m&(<&-Y!W`SR5%3d=\+TLDPkZq+blg'mLo=jmKu%J\DI3Xhr>3YQ-s;A3:oE,Pl('_B\/'M33cr%+o-Y&orUo!be;?:Ha6K%5^WGS(q(^nQ$S>X4tKUZEL/i9OZarO?<dNpZ<*>MHjtc%5[>qD</<mu1$(_AY)XkI35NOu%9t-;-69rR2MulUSfVKgE^XJ)%hq**\GfMW0N]!CJs_;Z5V:35M$jii'@JUToXHSdg;IqMd4`AO%1H652\fpbUT%c0AWD!S\ku9"4/t'(l,2>)0b8Y?)ka$Gsm02JfN9uG_0-+4n7i*t^UOhAQF^\@n\i@)_lX*\s1@81eYU&ApL=h:G%X(m)9FZq/Xa"UGYfLkV5<O^s&Ul4s8%dUsB$D%[EP6Ru1OE6Y=s&Dpo_-Kbl31qsM!#:_^oF)IIAQ'CdMK%%]BI9:Y"K>=21brGo%"&$W\,tg3;UQS7@7]HN'J3p)%n3I6F8%GTXhnU9L_(kglpn#LlF]9YspU_8]nToZ6^l$^I@r>8)+Y7_(bJ"?;r<G(XD)JlQrr)/H%U0k*[8)7Na`X?t8n;[pU`GtKfffSL8l2'=VqrHc9\i@J1NCO1EK`V]lM'J?u3ePd>HS-Q='sSHg/*%R;8,d1q):.E3(:g?97?5ZY%#\roLUNgn!Ok=Nti;gN#5dT\pQAR:DmC1e+%;D@hOYZ?Gi_^g;LP[M)'KiUTRL1&u,Xk?@l6Ms"&q2GE!qq0t%B*s!!O&9?$mSjT%o4S:B8CbR@`,kZ'3ptJ>kf^Mg$gY<4*/o)(*[RR]Y(3L`K"!6I32>Eb-T\gB%7t1K6uuQ<M?j;j!FlTm"M!En`.7h&_(g9V&%BLF%F5.:_g$>Sr`9m:r_`_20NZ[[J'U;l>m;cS7dq@Y3ZIJN$3$9&hLOiS&1,V*`C+3W@<hk?rlkNbW$G$^(*D8h4L:k6Sq$+t`YYKEO%"BU.fRQ/FqnaNcc'("s%$D+!*rmosoI0$Q`A^un(L^FZ0maC5(*lPsu?"ih`oVRX!!%*#&34K$_KcMlkZ=D=9#GkIpqiHb/E8:Rj%:H3janRBksP[J7$F3T#X^E%s"j6ZhE_&5^GoYVst>RRhpZ2J:g\8"@ei*)fFR:<o7QZ?oIE@2!oAEXk#Wuee<:WFS4HPhOL#U2bV%9PUse=rYMJ7W#5_8s*bG,(f[V3Q_Lm_/U6mePQot9[ac\&'ccdXVU!,Vp^kLh55ei?Z\74*nh)Fpr(%3o*@7-@LE96\211:*^K%:%1j[)d*j/c-GrJsJK:f#S#SVrb,VFHE6\YY"@$Mt"MPGBoEl3-$8<&sMh,Uk7>t3fCXm1/,'E_&lRuR[':"hJ3e\EL->#cs"L92V3%&pdh^/46Mk;9PmF8.^e_oX#*/3ZSboo]n84=V2R=m,0<r0RbR2(9ci8dkjj,Kll,V"ZgnNLb:c^o6?W:Ug5-b.9O>QI5(.I1=6\b%NcC`@(\T!JJi_n%#HD!cim7iY:h3l(RUlj]a+K"1l#8!h98C!VfOA,f_*qd&)Gno1McHch_&RXI8TIXS@W9O,'i'34gJk89`b\X+%FR4/kW>%j@fC!7Z.Lt3TGDs,j-K2,(lbEL@-8S<u]o(VM0*UG@9a(V809F\pNggJK"3;,m"M)>c`_@Zp^BUi3R^<a'UUN(^Or1^H%J.$sNg`Dqja%NHQ5S/Xrd6^4/`*k#aM1Gd="*^q6nUibK_1;n[7H[1.+a)QB,9L\g`FVd7)hH\:>nT86J-RU/E8iE3<e9[/Ti_L&%)0@X#;EDYRN.J#gpf,:4p_M"'bgYRG/?HKD*b+&!.uRq3a+LjsP1m?H]$W)WOA<\"0)<rC7)?Pi9W6ZeAV?)A8k]hqMke>(dlsjO%TOXo0g8p=(.(#:K=M_FDH;;LJ`h_\s/jY.V+4P:A`G!#<N]$)K0"'[g%gGmH@<'QM5dZ)_$aK3VZ\A/XCJ$,l%1n8AheqO@H%FoK%&qc&$apb)*0/`Oa\8ig/*)gnI-IS9e"%hNG%j[/g5?R-:'%FD"FL/T#F9=0T+_Mc"G7tEjNR^T'YW(s&MS6!YG&RJ6!BN!,SGs$i%Ti3i8FVCT>OUQ:._*&'&%OC*/*,&4/F>F*S1?``_Gm(.3)dZl^;*8$!5Xc>4K04`_*XoVp_Ed]$NN(ff$J`DX5Hmlo*2uu+4A*<L%c_Au!@RdHR^nUR?*l;ml\&Y[#CE9lC%D3km*A*r1nX9egrTaUOGe02Yb;)m'G=\7k5RYT*V8JZip7W?n=3VVK/_"n`7uE#dbQb4Y%K7*bd\koQ'D2a.NP<#;r]MB`3eip\&@nKouLUM6AD2b,hKBfKN1i./]=.\J<UI3!)3h;r$Q`b+5Tc/0.IUAP:UdM1fL5MRijS=X`%ifl/Gj^RlIBS<$f:>J2c\k`!2=@?(T32*54$oA6(`;k0si8n'f&.#\@47tkp(O%JU[)=gh#,)uh#=kjI`]'?V$@/jb;R&Ami'fp[%9dh4FiZTGP33-tZbH%V!+NL3\L&_KedQ*OK&4FC:787EOc$^#:CQGDKM;"=n'=S]aAami4M*_W>?;UVd!(9-m%7V<VQ;(o/EemX5%#$t44Fi"ol'j*d?ShRr>()eA$hLd701Vru`"\hsl0C>h[MN,Zj.EE(d%Rt)b[hAm9E=\AD+aW.q_1bY*Di1DjO+q/dGcl^O'Qd\;%E8=$k%gL]Baq7C6ii5c_FR['R:6W7=Ebc2>lU.QL^79bL$Km)pisHF>+'Fsjmar-lME/7EM2=C0J<baV(^A#%@j5p:;$Mm;N\a?I%GGJ[$G[jI\2<JS)`6lSoL_t'K6/)*DY#!`u@iV:!1du).d#b9S^FJ2->eknDW)fCFXGb\g8K.i`[)51CDm[3J4+TA[/Y/-?+L=m8%qjf_BFTV*o'rmXpbj[)"*-\*C[Y#-LS\fO/F_f@LD*Uhm%??"!d1^oFk!0KtD%L5Ylm>#\N85n1@\raEi;>*DBq<O"OreNIf8'c.%4)KrBTU1;l,OZUF,<H"PMdY>?BVu_%AWQou?*B^V#b2df3GRKP%UFF7qPn651CS!o&4mVN]-qQ/S*>0_.@>cVJ$F?0i$ftB/TaVp%XuA-"Aff,$e24B2WG&SVn'^T2bEZg2M`B>SH-NuBck6Bbn_+&m`bc0L[Fjji-J*JodO/e'.l?6<1?##UY"Crpe<.id&*Ie`Y$Ef%%r==*sE<afZUV`7)j5r<rBu872KBNGTSs3Ka7YC[_s(e.U`)0G8fCX%D%th[-[m^\OjH'-lC)FfQ`O/)OVePea'1',ai':34;o(r3%d+_(1o/%<?VL+r?%[N*<#G-l/M#S"sn*%_k%$j3K7MM&HY>JR.WV$3dgtV2LOY#1R:V_24j9"->VS`AN#;o=tck&UQ!4AWB*@4=Z%lB7g9$4oh_Xg`6Gf((e5P@s(;fm_&D\gSh<N7\a$DJoK_N5^hGCkV)MG83:P^">Rl;\qL/=?0A-MHr'7!(!d5W*".FOe[-??Ct4)%3to+<mi46<"`>a+K?OtY&2FlS%*26qLmaU!nj<',gGd4.4(n/!F76VaF8'X.GP@/FGB]-MhV1CCa6kR/F+S=,20td$eAGsWK[V=s%UPF@mDGS;4IQ4]&6VGYd;gb+TXOBeJ-#na?'m\M-\Ijga[:<7\'UeBNgsX>_b*ItgPqM]Eq$@b9[+m:KKAnPUeHCM!G$8?kWf0rr%DQb9F)Q(KB=28U%d-%H?6$"QUerNj,8d"@4kAf5:[GBQ;gN"7;%RPL2$es.*SPJ,X`U]HsF_k<s3()gO^.13U_H60`Z]2G'8PXjh%2ei)h2$kmYK0d[l74Gj+?R:\7VHcP/6Famim3P?!\0\X^CS5-\I_?`oEZ;=l'R>bb5GNLi`QeSo1<D3DoS!^`Zg1^Kg\]:@gH4k&%Z+9U%)=QrV-Kk+%07.i&"2&#'4CH?DNsi[a+ieZDl#(B=^+ND(aJDg`]56n3e&2n3;HD-aP);<jLrV;#*,]KTi$B]-_O@m_'[)q&%=/Fn>K$DlF>Z6F-'+%$f\lCoc+qgb:"gh/n\;gI%--b!99@W>QZ83Msa6-gIOZpU"H%,#l$%[3$\tA0Ol<Nud0ZfN5R"EXtbf-6:%Pu!rgMA!1WNn9Gm`!oVJV8'd2pPBI-<+'&NK;YaUdKl/aDqT&#<MK`/Dg`g-;+O@5o<6tdei-h068Z@1F,8S_Nj@HrG7<?qSL5Vg%^%Y'_mG6rh2toOSh<+cUhW06+K)O^_%JD$-JgIeLFP>9=@/mKnI%Q42O^$3Jh4fM_R7%U-iog.T04OEV!uG<A8n;EXJlX-LYD5<(%CfUguqW9i#EJK"%aCW9!9MQ^F:#bcm1=R'=M&.<t7Hc8)\!r.s-`e<SdZlo)8.MlemVfVG/u8#>,f5`P&1Y'nkrd-(S"K!7&i$!Q%hV<39i[cO8e?Ld$8baQJQ!6CY2icF>:hbagkkBfgX$^.uO,M(':(!tlIuV7!&1aBFqF'l^/!G(%h,kf<O9XO>%ER[RY$VR7<B1)C%O6%Q$ZEUF78t2KPX&J#qn]$LJ]kQ)VXNQ2O44Rc<7oatV?IO4+ihL5s<FjdFn[obXaXEdi.k\QK_nY(uhX@a0OnW]>\&@!1F5'N<%N,F,WPLU]:hILfe]ZKT?V/:rW<c58A8dt&@4ZDi8]m"4Pna5=SZMrI1A",O\E7!*7h#4%S^>':SYpKZOG2Q7f^.4$O-Ui:m/36*0%eZZ,B_ras=U)_H7W<-U2*P$HiEV((\nbcn%BYPPY<_$I!DS0<Bq5WUr!`"a?ZTFfT_Sj$p'"?p,f>8N8[i-6\c1U#Gm1oGOTq8:m%meJ#j9UmSOW$#I[6Mb^qS71Cg`'e9>b,&CaJ3:X.1sF_g$#?9:!?TS=Q)j?Aq:D30f2L_\B-NAe+^+g:CEYo!pZgn?(Fa6MI_2ND%T"j7Kf3WplMg4s/jnO`2k^oIQ[[/7WhHpt'H[Ao0Z!.$'ro=&(U+.SB9.o`Qc_BY4d1id1/"14fC2^iGY@lj/(g\0lV8GMoS^g4Y%3)\=m6IdH@NE$L[GeT-nJ%6'85B]D?B!5hk1S-#R](n4Eh7S$q,#FWsoOc]Dc`dB@9.rO$-#;=>M6G$^XbCV\c.-cEim)jH9<c#P%hh\/5g</<Cln&USiE"R\ZjQ"OZIBd*;L)!9i(_p*<C3(2_QQQuOW$iXBfU1Of,=/NkBBlA*`WH#=?AO>$C'[=#cWDOc+&t[crk_=%m2?&L8SlO[C&u=U:A#HACAHiI'_8%$D0ru,2d-N5C,]\I<!M3Z5%%AF34n5G!P^-qcTCIik8,T04'Q)3kUi8hI-tk+5`fH!,@K!V%XnYQL)nXk`K[!^ZjI:eOT;%<#)_%CV5Y(OWl?0gsBFl>gQGUZS5#poFO;MejI?N;_5btoio!:(h<\N7.G#nQrCM8Qcnft=43%g3S%"r19378,GfE!Fi_$5Z7d<%t-`Y[.):S3(lhnoceDTd`GoT5:T-I9h'2F/.X`36C@%e(%+CW[ssFq9bTOs'lBY'Nq@#ZPtO?_,<$'%_P9%=lV`@X#m\X\ZnV%7?j>TSqu)g;S@(QM!?UMP\\$`GDsk.,(n5ltc.fkUCN&V;X-9dF[]JA)\9sNBr[Rls.U>l[H(>=IpPTE!%[76GGRnPQ!U"?u`e=Y&u`Fc=@E1Fe1\1Sqh1IKe43ULPF=;n5@n6D>bfW`8b0LU+$iM-fB(6HWjLP(g>kGdODf&8SnaajmC/s6;U%ZAGQ>Cel!G7_G)^G<Y]i'0j'ckZbmO_2M@td&@f[&AH1B<tI`'87&@9\d?T6d@k;NVC#(_>oKeX/Z1s&oGB>Uk"S?0`J_t3_'=GR%cW>tehQFI[FE??eR+j]`&\PaMYFbU"XmC7-rPSR(=#fl^?#@W'kODB2d<!q031fDng)j"?PC?-LMG/AM+[,%<FZ%Z;XQlW^"&E)h%a]2i$B6HTfSZT#cX(D6+OU;0/Vfr7u<&gg#i(;'j*B\)2<DbL?5L_hT(M?8f8Kh&-R5ic=<A?hXNN*$P>kRDliYf@&ouL.[3dA?T%q%b\`D&fb-M&`\M;fs_@3^<:*.D!QhFS@JcqU@D^('9?L7+l:n?o<hGV:b]@'?^.#ZkYnp1WR0W9fa'=!>L%7KS`H1]qcRhTY^W`%:K>=H<ZeK-9;e7[#[q!VYi1s.Fr&=s]pY79h&47YY1L)/8K!-6RFiE-bWii5/fcI9-;_NSmg*el6CLp['LC,Hl2tc4+4#jEru.)D%ZL,?C6#JF&dARm)lC$ti]_$g=S-'<urr'J.`7ldNqJY9>U+F36Wc=F16H8pI@^.5?XV-q[)T<I<[N!8<X`.Vt2UJB@?rGOph3P/g%fHt/PMTV,r*#`7N6Sbeli`1ulT9YF@@CZrFl$uV\kY*L)Xsto+St9cN=,T$s4-!j($6JM3/E!gJUbsRWG<YZ,%V>"!q"_6ZWakJ!%Voa998d]3X9qD=;>?/-5m]Gg@G3.K1od6-YIZ33^OL83(G0_f?U=LpBbouGJ+jLA?AYZT]-tI^=6VLG[':]Q,Q>=(`=M:._f$""=%$B<R'=8eX;eCK%ILeK$RPq5fbp*UHqO]S:"`<9KA\FRD,9TcR[<-bFJ1<UARk),"dliS?1aucNK0WoB9h:YV#3o@8MjlN4a\h@2;%<8P@_8c]NGQg(7,=/rt@c^pId6dmL$'<bbO1u86X%)JFLPgm!AHDWP&>,7ZoBnGhTO,oTnI_l;:rH).QJcVK3E]K==!DSPi+\9YI%)._ne3lNHOL;oL/32ppbTQbs]Y\NIPj\=Oo&#lXh[lQZ/_<c!=<9jODhJYO3NdPJ:mL&MLDT?B'ZK/Q>+fY6F`\+(M>tE;RO>'$f%g.=Xi+JG\9;A[Er5m0)af(YTDE$:jiBZr'SP_*K(3F+!2nQf0C%(:!3*9<2J=b*.^_3!Z7o)"q1d,B'J2C:!7>`R>=#'!HqQDlH1%6rY=0%+JPF)VW*4*S!ppStDG"a87>`RU_=Q<U$>67O6E>7NEVm;Fa&cQF9?E'3.cNiZ#]9Z!XPE.g3'1-(%r6ri7_KMc$Y;eg?kM%BP\nq^nkDBdW:!!(//Olg^h3bZkLG/C/.+^dZo!/4D!0JJIUWBW[F*8]0\KsJ3,-5!$a*,?lAd>*<5aSMT:9&5WH]Z-jR*K4tt(0%jYDelZ:u4OH*fP-^V)-9lH:W?[$l;nfg2?@'[kp[#K]!_8L;Ejl-5^*'#6?^#W"#2*Rl/j8Sg/7"8/3,5Z_hjCJ7ll;TjZ-Ni+Sp%lqg5^.e9.<FBs<Bl!Os"D]Q8p&36%*dE*/EP=88^h+A*)!k(]Gf0K$8dV566\@$pr5pS1In,YQibbB=i[[O?]5`LJ@<(pJjfA]h#%*d33J,5FqR2/qKKE9mUOj04/_jl*(nP4>8.!<>+pap>W);aqYHUM=nWk)9JgRK\UQd"081>%\1*RHPVYC&Bq:"CV[cP4/I3:^<EB%FWbaX`)EROX_eMg9JlA(=>(/E/%6\$76\aI(uSRC#+r%S2uV5>"L0pG9R!RPrL2`P3FaBC"jI.-FO6N'Z=n68AfPn:2i)#$=!dQ#%<[j^tK*2I;bgJ&@C*2DL9X-.i-3"l^n\S$sFI];//ti=QgjT[J`2)`eO3!o5ScB\%a4"KBGWC>9d`s-_$tK^i5hXL`_>d^N&(dq>%Qr7a*,-<t*??2&T,.ad\)gDW8Pb1%e:R\F]__e^iAL'fVfspWXd>B?5a7ld6F74T,S]ajWC_l)6V9\eX3sK\ZO?kj:+C3t0Zk13F%ej9O[0\c%>S7mN9kaY1qPI(,Q:V?hZ`VtRHnMXoM)AU!cUAE"K1$VO=.gIlV"7Om;j-u'JG%2d7\$im]4sYq$nPs9(fLdu]*\;Kt%pO:nA4g7kQ#mTK2<eoYHdCFt*.gLNGU')3RQrK;%<T<FWp&QM+ma7_ll#>h[?MuMAW+Yo4qkY0<GS=Hn!Se^MKm$=G?pB)#)./jC%U]r!D*c`tn$cR*XGRn3Dd>$QXegm?qZptHts5USGH-\Z,$.%@\B>I]:R50=X%Ki<mRGisG.t*:Z3EFVmk.tom+XT%oMdLi(X(JRq%?+E1GUN3N/ng*b[c3%4#!'X0bi%^cta;U888I'dSUFq$,78T;$P?#pN4*g#`rg2se(8!XsV&KOi*T':E6S$^i_O8MWZ/Q"<+E*b"%h1<\-2NbIikLY14DLH#Nmrp:2'namF8uj&<#j%7b[Ud?D+]t`f?eDuMYc:6&$Y/W\XbG6Df=.PL//!%]WDt9t@*!-ElIiT>h8TN&%[L<Y7OiLJq-\3eUQY#ZB%]i-SC).6Y+f@@nfEum&6a5C`)!@<[(:K/FP;u/KCP3OHdM+JH'0CGEV2Ks=a!c'6UNo**4RiM[KM3MJ%R2MI4M/,U"9urO`h8]Y$"2Vc;SP:eqADrn9V?m9DAM]%%.I?,sVA'&S1M<A\W.O+OVf/,Dk:p.#R5NRd!#6Jun9J,$2iDc?OlgX6%1(4;hTO/Y]2[SM,:*ANC6O!m#o0\4Oi0UL.E>aY(5^$C/j>&1R'Gqu3Nmi8ZV<*-A+hrFQFqmbaH8Ij,Nt6lSc\[/JFe9J\GF'9/%V767TT"E=2gq:mq?Kt7fjQ9a^AES.so,cN]p:\-0RsFV&>beu9P*m6uYIWCVkZ%luXN:6?d)^i4hLk5L+6Wfm]>2bnH#8>MOD3(m%&1p>G&6=l[!S4Ji0EP!RX-B@E(cZ[>UGR,R1<Q7jm7smCk1XI-c+uP=AK%7!$NX:'8-KoeH@'6+"deg)+E>f0a)Qq&cLt1jPTo6i%A25l!a8l9G230Rc6<%f85o^O5;;17JfCHm)I4k_0QtlW!(qI*lk0M<.Lh!j++$=dl8)iD(4c,[&GNJK"o_)S$$)#nb[#$9]7FrR0%5RaQa1H*e*+^18"?<]?0@(=/[L+I&Dor1WCVV*5.F3?('Q3`WcNFNL!dV=kC<LG<4GM')1dZF#0J$:1kX(&P*Z<qTg_D4GkcJY-A%3^haLWMP<i8'?2j1AnC'$AOL</cbDjl@$3!Buip3bqZCuqip1kU;7Vo?c'`Y-WtH\6E1c'W.o(`2"/%2QdK8DYj(d6]PNt7`BtQ6%"<.Vp>+AWn?t(qjrX"!CkV@<0R<>@p6;Nb:N)'FN5d+4er6)Mc-nLTs:B61o@@H+*$n%R9E558);"M5fE[$%$EnqUHdnmYE\;k\Z%Ut?H?'Cp9?;f/YV3!g.ch[c!&hJAd=.pm%ca,%aT?hERj$6I+VHs6'*7.pc"^>,0n*"#Yn.LNQA\+RR/an$Di#R;]\\M=141C`4X%MY"N,pUoVDO72KJn*p,@5K2'^F-Mbc]8$]l]6g(-hX(C[p[0+PDVdNUM!")7`G4c]/2hG@BOR6F*\K"emGimP]m[]UV>$&'`Tl>F%A3[n@XKS(O7?p@mS2lE^.dgJkS5:498:ud_Ski/j2ACs:C*Lk,FXiALq#mu)C'R=b81;\q49[k)#pO*&NZk@uk*QgjiW0R'r$78G%Yl@t=_9uU/Pk-.^X9ME9QS)R>2^`:hdQ2AYo4Vk,Q,?2t5r"(L`3L"k((>o6kDBqP:$Mh/j&=A'iH3.r34Z#(IZN;Ape`G=80u]g%WpDds(@#]XN(Rt:PL]N2^hCcdJl[C3PB2LX,>&tD'Ho0!U,Y>T5.f)`F[),'b;L"H81MSTbur0XA&X+diH7C.(E&9afRVG2\(S((%p`(&U\eHH'*&jM.Da%prh4>4V0k<bD/PYNkP`m>+"%l^K;P4;.YgC-7YVd=hAf-L2>TcJg:/H-/+Z`?Z`fb]CN0GM+2RnVc,>*Y^%@gp"Rk3+@rjo%jOr1:1-UP\E0!iUJ/+R\#H$0]+:Z`o\8j/9`eq8R]9)u!)1YI\p)\9%OH3%2%U0$FYA-R3Na4<*(dG<12_$E:T6%#cHod8iBI@dJi-5Kp(O(etr!UcM$>c0[hEa*O<ICi0i+nP5qC*O<0S^D:qoZ;&',<0+P=LbCW%R.tXOLG/@IX@?a"pWb`6CB2RBQ%(M/Hmr(B1PO3lLH`;)R]F]J,+NW].h8lB"UD!pAHBSVYd:k:rWJWih1#P!G$GKAH/E9ZVb.G@7q/M;2aKf\::AB=u&Le0>^B4^1h%H2TuGQYK=!8`Lnk6"%C!d"86,XSJ9u01aG<#!)@`fo)9"1<!#SeqNf:HdVaNf([Z:J^`eHUT#EcVSp28a_<K-VV6DumRH.D0e=WX%ZCD@D8gDR,B"G3u/q5rm_'$V<8&u`n-Gfk>2[G;&J)MDD(8mTDgMo(<POGPE2BjBWOkr2$>,J_Op4cMPpo8Je?IU9]2.#nDKTtCK%9_>Z9cM!%1C`b/o8ng.7Z"R$5*,X7u:c,S+=URG:6/@H)(#j&139Z"=dRaa8?BH;u,Def(Y^qZ+Y^*V_4r7BeXpl\?MEhP&U5Pb'%""5D1FATR<;,LN5F\+E4n5(kq<N8>r&#B?+3]D>90fCm<"t?K@6XrHqKV0SB6OqIl80jIeLiR624Z&Sn,*DGnAgQc6ed)Z6*S'Qm%=<f37PrlF5Z\5[fi3/#W\pFpE\n*i-UBrDS1t?_fJ0m!+]H<\t62!I%X"%fpX^mqN6h8\?]Xg-86YQBAThM-k>*-5eSj;OT*KnXM%p^3apJh":E0#^hic@BA:6kko^H62iZG`mZI:O=_%:oO>I&hN3D-1rU2#NE79^#kirl<)SN:kHHY_'ES7*;Ks&L-'R9G#C\0"L5BV%V\DI[I:6-(%dA65CM9(d8040f.2UT_17SVn91*"MBZ=m')bm;B.`@*7d[L1YD__/cHV.Z2KTA>H`pg+m=i&c3h1H$>VgZ'r:]L48%*=ZOXlZ!qu;7NHV\8b:Tq9BFDjOMr27GPGKNGND!kTaP1HQ%`+c^mnKmbQ>aj;[gb&pNbX-LT[<9t&G.[$/2<%K45)>8dk'IS33,%M2uF$J)ZK[im'\]jo*iY<DIUPBIe/[L;(N3hpkgn+^eAh&Q?CSCV`NaM%7MD1s/a>LAFTV;b$G>j7EYUn;^A1e5DX7hLQruF<IlF%i:YX39t(Qp>=JCnMCg]NY?2nW'kOg&)-g.E@'BjdZ+p&.9JpK^5u#.$)^Ue7N)ooI*O@=TQl`@''90%V\Sc,^WS/WU%o(;L4g^4M%Z2`3/e9$!p-c4I4+[JjS3rV\c"Ybc)2+>;K>#<_5Fe`1R`rbF5<HK?4'H[&D/DP1V"uOq@d^GH=7"k\o\^il2oFra7J4QSH.&^63%Y.2*tk=M2PF!7A*%19*-O.plE@I"K,aP)O:>'lV#WH@1^hZ"!/l7Ru\hI87#gD68uiuXtXEnFhY9Z9/,6eCe3)gC^**-T1Wb@)me%1>P`fK-#f0hDuF@1f`#?@V.)eWT2^!,^lk6VrUk\eLAhpm[e!#JN-3LT@!WpQ*+Ei<#q(<@;oWk@6E8RTp2DE</gcY&Zn5-S)?fU%#]-PT8/:K5ZEb9TpLR34"FjJFAo0<c!P\p5aa8@[&OfCc]"e0S59Ae\fSXT('0=<o2+.T^;-8VF;JYtCo^8?'<p]%k7@:t#iXQ@O%K17YNJ1B"WKnTpR*=cF`775'r'Sk[dm\=D`[PTg[bZV@ULksh,`MaZhJWodnd,N<hN2fK'qB!%+Hnqf^Iq'I[mOU1-L2CrcS_ctJ%$eo>Y]t:;r/t0PPe8Hc7k*u7NI\5f(ki8H0B$`2&9)6H;s+&th6G":1%[sJ4Onp8bnIj>D39^JgU^`6://pQ&,[rpiMk1rpU$/T;%#qVZ'bsbc56ukIEJpckpDF>pHdj_ImEu//P*L="jiK]cje_L[1SDlWS=/WTl9L+mkbkq.R?1Z`RQK#EhppQfX4F4Pg-LNE.13dFD%/\<s-d<Uk6L&;7&LA[_+gZ7WZ!L9\O?6mg$07$GoJ]FRSDJ[6_"9`X3`tum3&uA$,gle-,#I#NF-Iqp6d]t`(Ba)2RJNp-;Gaph!%qD>u':9?3U5,\Z\?$j]J#"997=0N8g!)7>fhkElqn/O5Y@kYRaHb:<OTtIMbkD"1f/tn+`MeGItB,U(fDCjl1&O3pmYB00eQh&.&%\V@lG)B;Aq&I`g^L3?7XT,8aj1fb;Q;mWGk\SI0AQ.W3l<^CLbh>?m(WYH\;V++(+B/DQNW1HN<'!dQnZ=qAWi=T7\MS48YE#=mu%LS7U.1+9N&.rWm=#Wo.KTVa(!_p`Y)pTEslIbXV,1=\)2*t?r\=[AuJCZpTA`[X#3\?V(,l/#%HcBN6SaW%*>?8!-s&-RXF*:=45%@bSZA;gQZU<*0_D(u1F]bGq)1P7CGI5G*_`7qMH4AEk$Y%8W6TfC,YL:A+;QdXY'NafLnF`Hm\X3(7@mhNff`Ori6B&6&nE'\M$%%B;32Q4g'A3c"j64/>=O8Gk#M*j4#%i>^DW5mk!CkDCcsqMOd1Xlb^Xsnu=bZq)Y:bI3ENNJ%A',#u?Br5_[oe6\9`+qtI'.9Ca6*%=AYCA&,4@IT:*%^hV+2%$Z=n]KPk;lHG<]cimH8n:Nr2(U1o4$Ke.l[\o53r/6Ks*aq0>dg=a#u3o#QnB\/o[1^iu2\[ua0)6Q;s%8RQVNn<AeKo`rmhRu'2=r7'=8Pp:[Br3f).)a:sETTHXLeCC=@M[I4:0.RRi?J%JSgkQ[=L2W^)29G)\RtX`jMVV)noL2/B!Z'pN%:d#(P(fTLo6@I/u!o+PD6j)-9ZWR4n.&mE7At)7P85gg2a2%o%+d+CK%hkb_i]@\2Bm]nM'0H?IUC@92FCNXAdYdpr^`#b$!9Hl&%&WS?3hcB`2l7ff'O_K$RE!&Xnbh00sEV63mV!/0:8JiOKRh,>E`10q[^\u2s)Lr)_VAQ^nUDU!O*YOcVp(u8T@VD5&#XH*58+A",%4Y6HumBju>HgT:l\(_Di4hff+38E6XfARD#[%Q<3:OJC"rX/.O:Pe&u4Qp`0;Cdit-Wd\VAfn2%XfM;@U_73km-W+gC'i4OGpcVJ%;aA-K#DhO09dhMk-W1*Cq`DaW5u"re\-/'i`&f(+SRT5Pea1'J+W=D)6YK3,o@R,*_B4a\4q^&T:-rWf$"uRhhnI/C<'1(8;.rH<%FfL'M3"I:/B0Z>(8+(Hk,3LBTL*IS'lI.i&Bdu&74U2^hI)!^tEc4/k_OZAN0q0M$SOu[C)oR-_s%m,HP%A#OP1i0^A4U2k)\-K_%TAK>(GPsgTmSO*A3!&^5\lTp@05=ALLA;-bL_GJI1"(e;AO3Z@NoR]Oc6[rs.h.ZQ9+D[E$`o)S%/ngE3CS`=s&`4N6lV4c<M)_t%WH8$Pf(J.JI0[m[2F.(<.$>',<H?:e%J7WH6!S1TW.#)K8-h.bS\d"U[(;3+V4j&&glB8S(SN:+bn^ZA;W:Nd]`@?M!\[="J(@)E%K@^6B(!!DU4$%hS?TL<SL$)ID:s[$*]sMZW:r>s?m%E4)$l-OQ'\LU4gOL86I8F@8"=%2(&;=b^c[*/u)]XdR+@K+s^i_sY(_[qV%67&@`L7/j?l)^PtK[/i`F`0Ve&,D=XUCjCcHb?9fmkV/k]mZcKB5a[SmI'B7G=#&C=j-9ON'GB*Ihe4<^C71V2aaum*t0a'Sp'*H%("_K?OZmbtJ.Oo0HgAu&6<O=)R6W_e@,q)-JChk11J+%Z><<V--Q`/ad?.ZJT!<?TMUR&Q$I"<CYf9L0@U2k,=Zo_^mt=KuA7Ket%n(!'k7,43.dRj_uV'0*89<X8Q0`Yrq.aGAAl'(F-d[<,M6YLPAPU?iJZe!lBq0):W5fQ?O0VS:E0h.G`(XZL3F_Y1VWL#?H-`[G^%k]7@Ib2K)mL2AqECBAYZqcc'ZW\3leaRTSRDtLS45gl&@e$BY)G&*?*!24LGkB^<7]aH#L5SDUK'j<$X0nR[_'&b$^olWJDBln8&%:#/r@I,_8NFFD'P9%nF?=N_eY2bN['8>-Y\"f7!f5)(Q3%WDfFrfDpj!*(ie8XSsTCB!P6aZ$2r9G1HM/?.9ZrZXnXI^n2?`&s^"%%R:2#Jb)tD\>Y=]2$$78aY=lK0"C^m&7%AOUf+:?K-U\Z``D$':SiDnTjL$bZ>41t9^JG,:e?Vuju]ii%b9CJGi*G;9&9Fk[+k"=%=YjrEQE,j#5O@^(2K_3m.g9u6bhZr2d/^^FqJZ/R0Ki]7i)>=prU\p"&HC@3PNqb:K?"8Uj+dX8#",]1]W8i&WA(n]<<GSM/6>8"%h?iA@i%M/UE?*Q2!DeKtA+e[.`P;(R(8qQanQ`l0/0Ws-I69d!cH8n&]uiOVp$aMdEn+aAO*0LS(6s-VB"M?io+6W'pgMNnVTdb=%Whj)3;GBJV<U4mW<4u,7msP(Phm1VB"o?]Oqb+l@]8IB,ZbK2h]Xq!afAX2WRI^#ZMM3`X<c:7+:60j$-VIbP05qG%::pqN5)`AT%"B0.A8IEmkNBU/FD,p"26)E]V]2b8+cW.GIPs7#'pqYm*'Wt-\:oU)s=3"7MTW,<'@`;>GOA7AXB/LWu(_fdj+[K@nH[Ls6pN3;[%23?cNJDsrJY)BcqE#@A'coq)f`.W!m!IC&0-5]91e*>tI_1fq\S>4Z;NE0;2lRn]A/p%=23IXi$2>W4aV(UaerHkq^N(l0BWiG8>%VE'ZV<nAmul&e8".hn&qgQek//SaOh=%&p9i`7W"e;DanLg,M7eZ%Ga"Vqjs^K.Zj0W8'AB2uC;=rNDhXbO/gdho/PS4\>>]B_LG%l=;I\0FQ0N#Q]?ql'h_c\#RWX91D0@W'UV.5iLbb,Pl%.WI&2?X!BY@D2flh^kD>B].f(<iWO3$-60%=&kK`%P_0a@,jF.@02Z0r%ga7#Q$6&H!W,`Lhp8KY\\Otdm.M-o((J=0hi6E63WFphV?9#[)Ar:$/^en,kp9\)OE0]@J9?mNB.hla('`K\uZQ"K6p]kBa"r#YZ%QmK.T0pAXMW":4K6F<&@UgXe,Z2"Fm$`SB9lpauJNLFX%&RQUK(CKu0$uiDcVA*./oQtTYFhT:2n?063!Qh$PBu#qAjT/`$/J4M*%h383M^"\bY`qeAP$i]-[al#5J4kW*VcF.g[=msH;%b\:Di3Ab,!kW&K8picu2k=;'*#Tc^L[([7'O%J_L3Nb8qk9Vjn-M:]i(+Ls%lSG`$>"ls]cQJAt2M<p1CGJs&j+k`B<A<BeHCBR#aIsHhXon4^q)pSpM**si7[1qW<ea.=4N+D4I5#PpXTbL#.JZ^W_>#aHM891L%?];ms2D)/+#he&0bh(>)`s<RWBU\ke@[as=S8n#kK#YLY9=i,-mk!a>.Im]ZonHts@qD2^X[hu)$FW'eL*".+%049r%UR]P;dLL'%a*cOd:og;p;Cg0BeUc@fU2]fVJ:qeJN87IF*p_\e(#@3RWC.SlS;/"a!BB<p23Y#&lboYfjrlj:OhC"er7/[n*Tsu4D_d-6.:7Hf%;Xh(m^f)(uo\qr^#"RQR9N/Ed'7SeE:`+M&8U9LT7K(URh<NVPVuOQ-,Q0llUJ(9\.BfkNlAf.k,\uMJ8re#i\!%AG'C_>309T<8%p3RE)]4gk*_,Cc1/67p4-N`,S+:6kl%;*l##uq@(:k>s63FiER:fhWe&9%.YG;kPYl1(hli0Is#FJ=nn8BOO1%U.J\Tm:!J@5OWQ%q[D`SUdDDY-aRCt@gqEYkJL_DXA2dcaB[/\%f45_;Gr',1JF+:.iT1%4'%!M/!EOf18*2P8(;<Zd?\:fB1a5GjDLdPaU(L1p"=Fb%VpicnAlFAqe!iZ;)m*4F]9Jj,IBf,'iLo&d(X2VZNkr$UjVcK]gK]@7^<8IJoHrb*<h$a3j(sd'OG@'<oAd5pIu\jCJM]*^82sQ=%M)9):Mm2$[HmYl81IQH9,*irZbKL&e-:!3ONFkfKkF?;,Wm!]q_AtV6_'+\+Ylf<$3DFaP8a\e^?-bqj>r]mF)E]NJP"5,^"cHgq%eT"n[[k8W#H4c=bm*n0r?E[DTHjMANl%7PE'OJN$C+!f"P3#LDH`\q9^;FSVk;a<qWu_jNDWeT+R6*t)qn!-RMH0-,buN!Ul>l:@%RNVa3l+KVX:Toie?0&FK>'m4(V[51Dc=\-:U\MK;QC(406:bjuR#@>hgO4h1d6p%bM)=5U]V5*VQh#U>/7#@nH31bq.BPjg8B'[-%#d*pp-GWT%rnUI]P(!j+2WkOk6+X9udT>$XMiMa0mA@.^JsQjC]0(+Nr8B#bO]CBaSO-tV`VF#+"QXPo7,Onu#3I`J$q6`%8Q1C0%V5)),pOs"46&&$Q`,R&n-L5E`75eYl#jE7*'4U\YiKWX;.;f<1<:_?,LpHYCQ!kAs_^kh9M'[_-Ml"d-$htl)JJnm^VfWiTeRsc-%a9PYegk$qF;m"B9Sj0)[LUp0;7U.CF`4l?-0s5,W!?,EF&f^T"mYZZ!W&&hO4D);>*g.lSS+;F.nXbj<oHFcg7h-D.DbguXW7[D)%Y"dT57Rip(PXec/HP1%,ruIM<Ltt4nAA_hO0"GP6:GV`e2eA1khNUbFT^BiKk?<'TPjdCj;&lcV.2=d[b:,!=>tN"VG@d%lKq$NU%Xt]_ED/-8(>sn4lhGrTqo"0Q>M%P6bjIrY80gfFnVie'9-B*!_PoggSAspqTkWO#fE&C4\FRHqb<=F,BQUj.DM&r=e$B9k(=Pd$b%?Df,;%#S9dRU]:(5$aRUT>Xj&`RO^"Y'TH$HU=tXdiT;ec9Q`_ah;h\^A69NiBQ.&:lirU>Z/n`fj%M3T\X0bDnWWa5<d`ic-5EX%n"PB7VQ,]o@%Jj&n)QNoDook-j&jbsUsbE"?Uo215WDN:cepMLV2DS_Zd=6CXh&Lci#*uA>#p;^B``#U$lVAXjn+L6EbK8rUM!^_%7^q4snP=54`YXVME:RY\-F,<S1hdYLKAeMIdK)aQlf'MT]2@cGC:!RpBk:+T_=5Zb-fLM8"<%hEq2:2_+Ft2.%8)J?Po!UArA+!A%kC.%Z6XueX/FAANik<mO0%aBXMr]j<E26ub&+&EHmD9dZ[C$O@X1!63)f8FoN/!PTlH0.+F]>4;&<!D]',)N05mL^<.tXJ`\/4EY%l:6:Qbu&Wo]^)=D]dKlq/W(leN/[I/17p8@d#sOr-1sRt:UUVY8$fE+=%u\7.n6>f#@(9,NIcK%-O*`XHf=b=]AH0l-X/BqnG??5%O\_8,oWBpO2JA-(<a[n<s+ktZOs(\U+g$5n\WlX']*=%\YU6OaPB7!qUtE(AT!7K0<lNX=4D.A^lO:QK#PQF$M9Li*$\A8#71K.Y%a>9U<dec-'oH/QL3<($YR(U<I((>O0JRc(/'@%TdE!=["RkJ"i[`KC40Aa\fNX<FN4+=iB/mhbUp[]"?7j]CQ+kE7i/Si_YE_hSa%l'II.EABm+hM(O_SSYGEMrbE(d;5,%:8m_1P+^R>Y(3u)TB"#98NKmK#j#"Pmo?uFCtgq6[Nt:B!A-\7b8%D0%^]p=T)9<4AJnd=%H*aUiGbKZfjbLQfFln"W2i`$oXakf0RS^KF'->t9dA>4!es$DXY3KeMr4o>h`3S,>Q>sY?#`]Q]O0X_51^(t:Q\8A@li8W,'P`:T%=E,@t(39!9H6$u+&TjG0m9DLsr1<D!l(enXYL4:^kE%Dp<eB?=A(TjD'M2m!>JQ@A/fauqYo:Hd&'7k6P,erd9,6A6mm`%db,EaK%eL(F_T_]C.Rh^"%Im]`Tf$*=,<'iojB+d)eJAiQ[C8;%s5#g[$hW"sN$Hc,O[p_N.[APG:i4:F"AV^aKJb/)`D%D4/2TH8?.us'r%600PNe;Tng-#`.qMUKT$qRjtFHb4_[Q3=I-W3!i1:pACuAS+8BOfsDd`iTZ*(R?"CA?sG3W`(%U"7;lsSX99DnIPM'&!2M-n[>U/%='HXdmI:l5Y9l8MZJq6t'[p([Vgo=g@R#\dgp")*Z`;$&`;1G`\N&4F8']mj^.P^ti#s<m5SL?;6Z(AJ<%uMC]B*">M#K:Tks!gJ%S#TUW'&Xm^'%kcT#ah$:-a_n)J5C=C^Sbh5U2a^X]pbt,I5Ed<e[I#"`qO9F.\BlZ2LDt[5H(9Ai)/*2D(6ZKG-4Ku^Kn3C?%_lC%=)-PkRWBtT/(_\7i?0r>jA;CYVlHd(I[q,G0WeG6fc>%pF=L>bJe'4Vk>Y-<EcZVnO#g%fcV8%B5FHbP(Eh.*_%X[R@Mo3,+`OLr%>O0b]$.-?kLIU!Qk6dWB&pd7kVF&1DeB::k]A2i/IBWf["-7k\A[f'I&E1#;(SDD,B'kO=&uk@hf-mH)P:!ulfu<a16eB`a/X3FI%FLh9@(lEMU6oG>rnj9rqUDI/t9.sRJPp,gh$NCZ4<Ing0oW;?p1K%X``e(JFb:-I$1:<-p?;?%!Z?Y1AV8dVVJeqci0?$l2n><aV%@N#9PBG1LVqF/?e9r7Q*Weg#OTZg3g5+!(AHYN=(;i*b<2QZs:%Yl%=(oeX>6M_i2Fr"na5-[fMF4L*]KMhl5'bcV:OMZr.#heKH%[d$1X`%pA09[)pfT^ZSpbGX^ro:6EJk_E1A(fYK1%-t[pK-7]7((32N@I^;pnSeHt>lpaVS$O5Sr1?H"#ZXYCi!M@CBlsIgr;Br8%X<me?8"I2;>A`rfAeUE^ghr)%m1#tF@XH:*[3"54XP`K(I[!M).W*R(S\>_/Vi_P*Lq&*Cf"ViPC+M7l1H?KFraBK.+B=IG1DXP*%cM&6;MGKf.\kJkR#]H8+$LqUUbB?[T-\h3='-BL8UuLao)>8TlnJM8V<_c>uc_"bNfOgB,a7qM`e$=S\cDJ;QdZ("sA<.L'\Mo2d%461@`J-3i8Pm,#ACj@MrUsF^Kb$fk"o:<u,kgcoJRgnr&-8m9R:4M8-c?kE^eK9N0\@:EDDf3+*1\WeUiOA8m]0SdX2ZC)ds0d(K%rdfQ\=8iQirI.O_LrH1b9KmFsq.""RcVut]SZ-7IZ=!3JZDPFH<f]OBWtOC7461D1o(-!@QCQL]1ERNC25"]CnH<5kC-&%GYY>Xh%RjggKTk+IBJe*jX[2-C*AUX`,02,BF$q=W"h0(ai#./q$N]'W[Q=5S!oh,6ZXk.D^M`$'FKPB34HHf2&+h<ApTD+n8@CVX,^E,Fr%pX\h0^[A76r8-Qsror%ZQ1U%tC\_`+na1+;'7%6`S,8((I;$hcW2a>2FLU1B1c5LANBoc!A/ZS%/P[G5%.XO)>@Rk$^D">8`a*>X%;QL+C0ZHNaA_<2J40bYBN,i??a49,UYs"`iJ7V7Z?1QkfL8j!]>hXl=O3nlOX_R'6(e$8tcoO,Y1E?bGn-/)&[%bTB2gEa#*L_Ws%.'BT/K>2&DONJPH>t$*YJM]]f0uV1>_Z1Gn\h?/OQ+Skh<GJ1hM[Mc4rQE1X%MT)A1\.:qb^3P@DVj*Spq=phM`Z,@%c_VKlZD=@%k/Em\g\3aFhV5O.k3/XC43PGdAp/\?kNp&`NfOY&UG6Lkbf;c.VG.gOh8Ksm186e2WLR,TRD>7#`FIWP49r=W&li#j?.)E1Wk!!"%PrWi"aj.BZ4VF_*L65.1PVeInc?SLdY'q9m7%+<UopgO^k"3/oK-c0orDg_0BZ+qZmm\_7CNN3/g;OW\QrS/b>++4YY^J>:U6/Y(%U\&SLIY+<)[fnf>>FQ2tc2KW>c2/Fl2fESf1tC/hr+Jf);uKATjC9\S*c7+Bs%28_d'>RY%8E4"Sh>]r=gV!1q$.05F^iQ0Wc(-Y%L'K4'>Z*f2Qotn,Se&]k9kbU/'aR?51aC1_%YA/7_FC\[a<7/ORKh/C^)BR7PChhRr)W'_Wo0$c\cu#T=>2Ai2QGRQgBY6\CbRrK%edXsd63r<4!Q:f*iq]b`MR49<0,eo^`8l6q);\Kbf\tb&]]7rlMRYI7.kocBK8plN#X1*:WV+ed!dC5)c8u^!HLm\=9uq#Wqr-Sa%6.keM\,4&)M8q6ka-RbA/^DJ/*=q/dSqgq6gNBL9XaQ6lpNAa%iQ([6q6[d2EUWW#F71^dgtC['!%u<%FZX4lL:+tSMXAZh:p;[T%JsV!T]!br7V]A+ogL1.`2%ckm972FD_?)u"ND]kkY\FsmEa+Eq&V^5ZDR>[dBl_S*i-_ddc9]bET#B1KO6Uq*YS=KJbV+r/WEt(b%-djOK-*h,2+lJ9;Ye%ELqLqHK76-,u\?RVL<+0mi^r,[6;D\f')"Up^Yh9Md/7'sj:JfL6p++d)Do^kW]fcbfYd\DA@JBK?Wd/7?%ia)<PmY?.]jVdT(4/)e@]][ok3Qn)e5EUO9P#86&O&&K[kX@*0o8<(r',eYc2@s^P<Ss0s.Op9&JGWI71oEDO=uhS9O[tFpX-ITH%Qtu*m<_m%%`Dd19SBe_$SpD7;,>gHMi-tS7oi]5(`"\Y&ZjcLn%6H20@>ur.eZo+lILES+%PG*0Z=e.De-;*NM^:t^N_tdlE)@Q`%QUtt(M9aN`blcN]$S;p4Q3X-I`>@-r/VbqX_hmr;k2GP>+5`al-<UNV3<Z%;e1bTlO'\.)a@,>\Oes=DH)`V]<@/68FTNIqeC6aM%Z^*S0f(j>VItH=_a#6c')(0=YAf^<qAY-DUT7-Lo>mA0HfOQ.)r\bG/c.d(,j!E=e4Br0Z/;M0\.h'9KbPnOnj6=tGa*QJnEiZ)\%n+q%(kD#6`Q-pq..AS,!EMTJGmo20Mh6)-KBbtG.Z*5dm+\3;-N4h5)-pHG1K>H=$%%PpA_J-)6Gt%i"@(iFVTAG2CIVM,]R(:H;%Q<7YpSV*GS8+g8EE"B!Z5[E[_V'"-6B/'H?Apmn4S(MuEnnF8C1auhn%-(rGM6&Ta=7o5]cMF>.$&Z_s^GN@cTlQRXH"Tu](D=Q]%YsFEXM0iH>=+"fT*!4dG^9D[%2irg_D'9:k]8=7GCE$VBU^q;%:$A8J!&Gi`ZCFFmT=(PNB]=YVL9t_G4.MtcMi,Wt4VF_u2J!!c%TRKstS\-2tPnKl)_K7":1Fpmq@2.D41tihh0B3-Z@cJ]]HOg/*F`LSSe&lhKTLf]=Kl`WdUFoQC6j.ghLm>ehQD)KR.I!P+L:JP[%)[%e#6<]LY=padu'Z3M)jj!%i;c_rCSlHgmY*Gc>%;V1U%(/Yu[n5)a>i20Ip$_8lMJRV]\TrBH\T`BR&OY<baj%Hpah?FjqVr=[%phJOT0*`W9jgM$<:31\lW670uDDEpN-*(CGKrA;Q$oK2A<jAeOZB@Or!F2E<YY\;.UPu8sQp`1A3gsh5=!H]B:eGe`E#JiC1Ch/T%KAJGp%mXA7S[2r<'ekMDR%i*5nSoeU$:IPW7WbRLdKoA1WjR9NFalN&qOnr)+0VFfI8q2PP[YeH*bmA]RT2Ni21uYq<`S\+D.)tQ%W>1),>154l>_`mEb&snDU:Hfk8nNkGi=(ILK*8DjW+LqB2+&0B2+PUijWp9S+'^De6&#YYdTC(p!4iT.>g8^GR+oLWpo\5Ll@YCV%*EUi\-P79d2!:=[UaqIZoH=JZr=37_##7eb<?XFZ?HT[P5rc';d*&F(WD%pWM@L/P243eu/>0!FHC.ThUTO,VfekTH*^Q2caqkBg%`mc&*`<I/'6m+_.$li,)q/Ld$i1#@p5uV=P1o+SA]%`/(Yaj1^*F3]^Xg9UX+T)V"CUU9!4Z.eX:4H`?/D@eImaU3q.R$=HKX_>n%=Vlq#on7u%C/h!F`_@q3fAJ>jaoNDOS;%,EXK#,BKV`K)5.tuM&*4]C9iPGIn5&;0:Z-LRff_6C(d$pkT>%I\_RDPNq69%-k;5H\%4V%hZ]b@)1d+4VX=)-ntd$q^g/f8f:FY]o<gcHHpkO.T=C>M&pE5M;TM4;!##kr5/P#lG:hL8(7D"dcCVu'55"Y,o`T1]nN7:WKm%BF5A#)jH8iT(\)+m]K$!ST>Kf\7[h3mkgD"D2-2g*<ii;Fh2204AiohTt)K,?59ARcATPe&GSW6`Dm"Z<"DYLVgpfP)XTrCfc'iB%jCb?2$Y!5&4OS'mN+`Wp"^n*1":\k0X2"1]6M]k!oBbT4WcT7QL.&iHAX+HteZoQRJWl<t31Fd?64jI%ii7S(C-N0L0Z;kjKoC?5%P"PdK$Ij]RT0/b),J5\O-RFeG$tlKF?TJ0d<h5"0DB0cHF@;5V3m"Bb;7%`=nYdfR><jp=T1;t7-Dqp,k<k=m5_4[:eCooH+a%27%Ej[;!&/PYmHqT=nQ?9^KC(8,fb4(Mc7QaK0>F(mnYda$YI[r93/]M>;p-tqFHnup=h=23lk+^)AkW2rXB_mF^2&iDLC<IG[H(Ou#%[,Sjnlg&L<`#YcoPXob='0&^_pYV@i$-;QfL?T([P^o9>BYlOtQ7'P:lI`6;ZrP>PoYdS7U7+K5P)-Y"')4Dp9('>]c_:e-bVrT<%$W]DhY^T0o[jKMJXGoWO\knc4:gFSE/.6G/dLk7f;1&lD*4'F]!YG]I$#sX%EtHTmYKIVf8KPur6Qr,K+*Ct`00;$$9lE,8Co6\;%%=NnYbXp?@&3]t'DE.]870L45Mc8,5*7R9T<X8F]rmhZO?URj*n((!4f@=iu7*<WLFHQKpkKqL=>t:s&J<WHB5a=XNg/:X*RbjBP%Kp>*.MT)1,0Gan_P?UJBYK8Nc_NJrcf?m`JOjnl]4`.N.Wi.WBZZ87o1m.T;WQ8,?B@hA#CU;*X9=0H+P%1k:D2JZ&!(Btk!me`^%Vt*94j+Q[NdA@$?X6JJ^@26q^T88$KOk+'?-[kP`l[8W=.,g1m;VBomAl;(PNc(!`\##X+;f1`rRtADq1_eL2><5C-k*D=],Brbo%XZUs!9$=Q;X2%iodoLJOVS5rNgm5rX"jW^b=t-?iX[UfS>AnNQ[cVUjD+f*+/)8W\FsONg(HKH?%E?*93fKQ;[Fk&?p@K1\mqOWT%oUEG9WT[&n[VjsNB-`3i2;6Y.<i&#]@[5[4@1PfX**+C-=:OXC4f6UI*2b?hN(R_CW0O'Q_@<l\>LDu%@9/O?T@Ku2j";OkOI8XX%%9r!j9hLK].p\.N<7(@'TZc<b>)cRci\j&4P\?Np6VRJ6%`Lr^DY8]c,U1lQp!i,s*.C=#qPQ05O;in$^sQ$GJ`t5b^%G\@p#9N#%/Kp-44b>=N&`2p)(WEGFfrDf5kR*tA=W.3K>'(&T8)[ho;0=-,WTg_iTnOR!C-Y"L<M;V*<Yl5peH<rkI&,coFCkQ%N0ZKY702@6%.Du%65m#>(c!t(Y`&U4u1J;9Z*ON()(uXH##diDr1W\=0L*"uY21e/abU/=[`GU2%FdM&R^[JF4gpkIJ.X0]Y3u3%0nU>TH.\uJa%S<M0Z1p>8;ep&m)daMYl<ToUX;eo(>>;Dj>,'5=m7pn)se+M.^AuU$B<cX-$WbIJO(+CbHW3t6'0GC*/h@!3PW3k"lP=8'GL,eJc%'`CCK**J_Z2Z"8^Q#na<DIm>mk$F4Ci=D\p*%U15[r+&3Ws?"?paQs?*`*`?)(ip_/mrqF/mdq^7p"^=^^?c@\G#!,iNBtAaVm+;%&#VJa:!LO`_R;r>"Q/$QP;bFj[.X-YgLT0rFCu@I\,Fieoqn"&9=sZqSFT_^#GB8hFaOEkri-1[eQ*#fJZILe]Y[T^oQHr/OQ*#d%ME9G-=BKN'5tgXh#/*DIbIWaA@SV/HX+Es+'M9@R`UsQYpi2`q>q&H[3Mk$<b>Kbk:$GTljhQ[0eK$C;,PI5`W%LL#2LalOfBjRH%,j:X`HcDj'^n#`ZK<rI_,lfYk78R-pNjh:,B_n3=ONHPlI1UX%a).Ce-smDT[iFmIGR3tP"m:)Q=OaH9%]-YDbFrQ-p\@V"DXR/_%\;,!*au>jS8!r>?E2!e:eYt$l\=l"e<-9Z`-D!qGpIe/XgMolWU/+485L\TN[,"'%Ti"9hjToE4OD?88CUpY4QGNE2P0'W]:K6"u%>"`#$)iL_Hs!RjS[@eBqp)=N29Cmj;NS>>J?dYDp4N(dkU'_qg2AQOLk3.5])Ct-r"@^I=pa4VL5'sjo54c0#P6WY=2`m72=.9?=%Y:pZC2uuAF,3"LP0EEqOV`(SpDHIYh0L")Z=1UWE\H9bT[c6TmpLpHT[h[/laj6ALNp+G#XL`j!5,JBY]MkD5eL@sB<fq1#Mf`Sb%7T:\"O.BMiI`Y%d,HB`11'0jL&ZD%'qOMqd(.S%nBLd9ue)\1WFjOT=:$pO!XX__pm<*j-S9b"ChKT?.6Yek%1+.XDA#PH\]%D*"%UXOHH2c9RKiI-`,#@Y,L887@/k$a]ddg3QHk/iEY<Cp#TVR7%O?N)G19ICP%GG&G&hj9V[r[<LQo2,*mbp0*BM.Y3`@J6c27(.&*%`4fT-h"Oo-[dJC%7IR@OW#KNNKZ_RihPN^_>=W(dpK$j-VL7u-hCrMd'pJ^]HR-Q\PRf5\5O"ige$V3[CW!O\`nEs68l^Rg,G=L5%1#C$h1Z:j$c'.5P"M.<M1NBsaTpZ^G4$TlG'K9&fKeNYY)a?A$8DUu2i>!*E-q@<uJMMMG/l<ZSMqsWM8#@sf+e.1!$B[25e_^,A%n$"@.QMj[[H>b)QDm-"36p%I6VT4\hjE7q5oMsIjqhj60%&F,J\LN.P6Fm$JDEHu!^>:\TW&N9'e!D?gT7dDU=VOED<XW.(GM:G7%'l40C?cUMOH1YR@.g0YSGQ52-2Q/[Wl$rN=huD&RP.Oq%IbV\>Q0nbDWjAgQnkJ/Ql>Z@$U28.4NJl.U,gmN<%%\LAU^p;Zfgel@%'N)i))5eT[Z"5e6RgQZF[<\s=HKJ/JW+BN8XNQluV]qc_KlpdbQ=Go?rUc*[S)ED64JtPlN^@3&gq<!s:\m@R['2f<-VQ]d]'>4-%Z\/H-@KnpVPDH+uHK%$IBW2M5P:Lo12=GS27r)mC'/7rYNSL8UT.H'(G<Y95f/FGj6\7/^&Z8X;Gj#%nIeaAgWhoa)O8;&!Vm!*+%778j)isW55e=.bB>(]@_f-T<b2:@b/aIGWWAL/H(_m.o&d0if_P_J%Q#Z86]AD;d'1OruUIG)?7*$TB"gc%]0Kp)s*,W0<YX&,HK%<^jQH0C(*!i5h[+l!I[GMF:g#h@FXJSr5u(@a/Iu?a4->`T)md8C&iTDQnElZ#MdWI2W7]Mhm8eKlKDkXqaZT0n->(\iuTKm6(pg%6X=cS(s#!;ZL.;K]dYF1W=JnVL]I4IJ]`d%_JgSS>sO00:92A^J:rDo,p55*!r;6,/5m#YfF>_uT8)@(e^O6-Ori1s<'c/F?SXo=%G;W3ZXHO:*4>WMWCI)r3R.$^W0:XOb%S5nrS6P)B\gD9mQoS)<SV6`r!2f$+a&B&%:sdUI9+fnK(Kk8h[i8GN\5T4a)S]")/5b!B%gis9sl8j)['OrT?3g\>;#>O-sqL-K+bWK0jn*>fR)[@YJ1'Y/PXuc?ZB1gg58B:.:6"A_-X@#gdPC(V5O]S*.+XZ5pf>J).:(ijn%-87&#Xfg?6n`^bB'Z&"jliE$TN&<?r;@%-f249k!e^$@JkDB4_pJe6^F@T>K151qh)c]-C[fS4^,'.onBIC?#Opf6p'Qh4M*>`CV%5j,&Rl>1?!$mP@AYr3I5`PI!1`\TE,LjsWD30[eH1_b8KP#*jg$c<h("MVI:OGe+bM\]C/YDE[!Y3FMK.^2ZhE<1u!"l?hNF<]gI%6?bBHK*J_sU(+AJM-tn1(SQBij1O:VJ7f8^HCB`OQ)5f1k9)kdAI(&bK/Q_QA=FC8):>5pVr)add>[jLU'["3DdrRkl-cl3N9-h1%^)/eG`>HpDK_e#2GL2C.A`f1;%pU%!>\^.EW2rSi&SS8W2,8:[lOR1hWSts4lEmSG"WaG5I&F94Qj6&"a@LqNaGocgMrn7a$RjmI%ldM'tY&4;qa/ee4iopdd)XS"]?]='/'Dq4eYt/0J1tirYO"TEgd#)iYjPt/*WaDArS_-E'Mii04@PALX/4.)"G<r4"=Za^)el<_8%6WcZUj!=;-7C.AJaCeI-AP6CRptl$I`cIgD:^=8&ehpucej*6oc@au4c(B\1X-bN[K"?s!j6!V2+3fKS:;6=HY?7Dkj[8]XegE$7%a?=bO>%=esLM)CQ;iooo6P.scqktHlrHCt`o.5`q7cMlei1&VNoi4A_V#E8S50t+[hLbUH(/Ps3js<PY'X7f[GHQdQ)RYGr/+a_F%\pE@.s"7<8"n'BlnV0TEo4tOW<=#GP6@cc>Wub\#/:])&mk?e`UsTPF!g[o.4-j(T5!h<!U$/NAMXR"Qm=eG'ZGu>1hQ,NK$T7/1%r6`-1`?H+!*AOQhrLum)<E3Hj3Pl"6]$1gtM4/75$"pdK]eIA8NLG._F8nnA$R81JR=b31'$Q+]S1*?KJJXCW8\NnW9hHG=0*oua%MeP[^h"At]^%u$>cYjhGoo3+dhh;#0SA3F+jGFI7\>Qu]%0A:U>>&ad09(+[m]\LDhiRG<XKA!s`?_kt?TJur"Z(`C+'CSaaZB+A%OMYHGb@*7@MFK7&c"#^HL+b>FcFb4`3GuYl>t_>P@m+gs/?;(*0d!W22df<`[Fi--8EF:?j34*/M1W*cUOKCtDQR\$1$6a1YI2ma%X9N[tFS+ID]jf0=b!+-oT$&Ou*"uWmZ_Ta)&`AFYR$sa!6M[1>fGLJZ7[<Wk]W@-K(.SFS50R4E]^Ch!,d3(.@8N&hB+W.()!5j`%nkppi':oW7Bt+uGs'r&<O"PVoBe<V(Z9s<en*fb_GL-G$1[!dXn96jPq-2T9a3D5$a5i"=^@NlDELuXTj?9O.\%0gpI5guJ_nu.-%OLO*._,jRtDs+s+!.B;R5gNP`gmuQ*hLJG^'H.k'.1qVtn,)`0j*;XLJYiW"\17sP9s=^_gP,WJ=9*k<(82.I%G?X)_K>#D0jrCs%gR&-h2&?tV9L>-YZ-/biLs[SJcJuJg(-&A<=\j`>RGLG:\`#?JXVUD"VOYsibiGi[BX9%r.aUGg78^==#5_/S8%UB6l`eR9:0oog%l-;ZqQp+,[ADB^#JKp_#:6#L1Zk.RAV^]8[88_+Of3<3`]]eWAcZSP!%a[<g?+1l4!t88#$Q`b4:5T=o\10=gimT;X)JaZ,**%Cf%KA!Ta*/Nt@5X<'!b()PV<J$PnO9n+]7bt<hCLS[-(aDe[WL>n#UL3!99Y7crGd+JL2MMg=ZKVkG\CD@cnbs"':epoZ)1g>X6E6s6%r6LP[688jOlqu2-V[uR*=@/YnJctd[WD;iMUf/?E5PbNks7tEKaS34B:VYcJo,tf1dqLSpk&kRuk&tY!k'+OdPN1]SI@fWa?*968%p\CDM[lN?8]Z9nhn(YA0)WNFID^GCK'C]#F78:g0g)ck$7mF"<HBO-a+uc[NB4@r6#&]Ba[n%##JLmJ)Pg\1s.$u2'>tQ(fIn6Jp%ejPDO'kqoVUplVuN;$\Ep7:OZI9Bb9F.n0pq?o)VXaXO%@4nO7GSHQ#Pb%Z\`iBtLQru<a5i,,4q2<1nJ?8J7eTGGg#=)0f7>H"j%:K?/tP+BQ>piNf3Vq4Jdb]t4'LUW;8%&-iVc,;.R04j]EABbLin[!2,$)6!k/<WJkF6f8i.&&&=69;[^KL!E+b7kg)a&Nr?ZaKgY%eD':]nphl,[]'n,E,eeR?RAiq?p%d0V$5_3_amIr3Fg+&8>:8)>1MKQ/9>GIEFfBE0prs,7?B?m?D:DC&>[IfaNnB/8mBFp%ok^2%Fi$\lKpFn;5VqR,\T&jX/eUq`=0As7Y$51jIOb03GiFDeHm6CI=j%NJZsq$&UB,FAP#=%bB*m\4Jf59E+SufY?gB29)Z(YfNC1c_%F.2+4T^[\o\!>pF7eTFq8e3@QY5(3nLb2/=Q]^JFeB\Efe-p9a_caYLNgK>;E?Sa*V%a6!T62ksEZTS1('p;83s%SBarWABmkpFs%O]?J:H6>X<V+670[I.#oMKGH\+&=0M,Yuk2=4`]fZE3)@!XM].i4A4GQk36iH'Iu$2-``jGd<Ck<B!M=jSjD>&3icNN4,r]Filn)%(*>NeneQWV[5N2A(6W)1!6qRf?qFAH'=sD&'2in?+^cJd/dG'eMbQ-F1j!6GO8Q@Yo\K#<D7K//r5W5B<9htZ\:5,rC);Q!m\.r^%TFYZ[8;ni@EOq&m%2=kY_Kdk,S$EKGSN\u6&nI9IiWp""=r]T^L;@X#e2&O_5kpH-TY($Bj`B*&>BBLW'j`5L!A>:H5&2dK?(s=B%!gPti")#na@Q]OtgZa8'V*6I`ZW^Q'W6eYeG4VCK'rjUM"Y!6C3$6Eka<`u+a>5Jf>,L(3&0&PFo7jqf$E+/nQ=D(bHV?#jnocS_%Tg&"mas/6U=<fG`-'LEj2WcAeC$hlBkXG?X<,+$=Y5:i7rr.m3HWLeHhGhH.^25B1DVeC6Qr_rKR@CZcnhTL=PVVCm[T_hUD8j.-%Q9EcW&\P691#9=hZgI`d"jP<H.bY9=WMI(M=&!c)Y+k(89iZ&]gf2ig'79#5Haa_J2fGa5bE-Y-[]+Ug)lIOKEHC<Ol?59t96pDV%DQ7WPK>(=Cb9>\?i<6m(PrQ1rgM5M&D^oco^>#[c;Tms!k2/EIUtaJX2n#o#E'+U6PX]4D1nH[j-]bS*^`dR9SGA[U6F?nUS,pC(%A!Jj\!BYB;e,(at5M,a2:VC7?2"SOU;@7?5SoX%r:_7\[m7XKDo`Wo7b:$Xl!eZA]F8fXW1P1^IA)l8i'*n&fg_H82hKO)L^&66L%OJTLsR\oMT-[CL7'nls<f/-f[HW>QChVia=dK9B<!6nI;2/@RriQ\U8WY,nY>UG`jW1G=31_\97o-X<U0(^8QLW[6XoYMDMFa\"\%aI<"a7!8$MpIl<3pCt;g:$9A]D<7d^4-9]:ejIM3']LRK)&CFLVqSpD;\]td^4I7S@X%]!1nc&>%?coAPLICNW(`Hc=8a/K*_&"b%`6s0:_(1sOlu)lso?OiE%(<p[U6tQ,C[,m%k,MU,DltTLDm/L<BDm3>V5X"hZ]?eMimSBfN_]Nr0u`Z4?\jmc4Q#)mq98G4SX'E&%J!q9#Sq0GtZMXK'Lq'6i"j5S!O4K(Waj[(W?BX+QG>hF=("2P\H!;+NNr)2$f>,g3ZbFfD=%GctL?F9h:0FQ4Ua2RkI&?17V2#ku%pmH2+Kq#,\KVUQ7[B^Kn?)\&**0!p5?/m6JCfA80m+-,9PI[iio9ENOl'eOU:mW_*UQ3\rOb>]T_jH*MB;o.!Cb@^h/mG1C*G.J*%)??nl4)0V@f%sYt'OG.Ue1VHsFCA+)bf6_l4fP.jk/H@`;_=AN_nf3dpplbI+m\U`l-D?DpG`ENYg#8b]ZE;pW;$&lX*C+dE/1lI%LaVY3&W='A8*o(j-iJ9mG!=GbV*@H<=7,,7^DI/#q4d04n0V0f>f%q`j<8p4e`ER]?J#Es&e:_ceJa:N0W(@6OFr-F$LZ,`/eIFa%kj+sBjLJG%VX53-g5a'9BOc;pQ'iLkVm(?/EbSMe)o=>OH`$'gp3*s";V6:ao/,841=ZDOk=`QGWgh;WLDs4]/h#fJ-,lY6>uZ3i%m:GC]G8Ku'+kdGXluO6?R#aPZ(#T'n=7@m`i"lu,!>i.2?q1r#*XsG\N2T>4IdqsLUH<L)c;p9^L^J:/jE\fd-_*^6[^lXjeR5?p%9XAojN&K6\GS[XtF@BL!Mc\e7W>&=nmS79"N-nZqN7nRIo0@M_2FX<@j-?T3l,C.2']-R5UaC"4Wd/r4=j>`k$d3=(0C9;5mZtoF%/ZhsBM&1Z^hl[mN5A4Th!&']M'KVAki:d)-o&"r]TV;<2-R`>0%MTo\G44SN?>E2.N@@D:qSK>2(2jG$78`G<(%g>aYta`0De_%J%qLGtTlgSieDL_W0;V:ATHa>r:X8Apf3"q3MRo?FXh>bE/Wp<Rd9Ij?h_V/Er#a$ceZ4[3253i!71TLQ;3UdMUYlmU#F4VNl5b7`7%<X_Vd5FKlN."n!gq^1VV/>mS?G8#h'm)IXn/Yh%m\<GQI;^ba(W%b(3=*%?0AiAY5j;:de.n"Ve8bNQ^BJqSMa/UPb@>)2!&&PYa%NN-"UWR=gXb%]ard0Tr]K(Zf^@llq(,VMPtW[WKc+E8(r%P,P34Jd54(UO1GOCVIY-<)o6FaT66[5qQK[%u'kco0+VUOA'Re4j.7%Z6gXg@S;3*W4^/1R+'fkj&#7mo=0fqO+$$EI0T7HDmBp\^bui<Nn\+iFMf.Er<0Iir6*9ud[E8>^tEuQ<<5'19a+*A,+a[$2^6?I%<6eXj"DL.kkH9Kul9#+GJGcI&h8cgE0;=YGg>gh?1n#ptZ;hF[?_,])Kt[T7RT$QOWJ76p?B+odJ1!qPQ7IdV(5B1)#GuD4HJW\i%7<5O!)@Q1b*S'8WVfDZCg+:10[MgODK$(4WEn&OC,rf5oE,C+!F_\?Jj\&r+DIo?.*9X6cide*]WCR")k.*8:+rU6IHHDqc-#k1_%f*h#/pSH`:f&4GKfL/n=es+mLdfm^0qG]5N.5*Xa7;F'W%3LMo-u+\'f&Z`j#aIM'CNQN64bg9rI$K&!T1Jr\AVIk4mT_Q<L9!^F%32anfRanH,.S*,'V"f"R(AmGRkoe6g;U,^UOR1Ub'7di3;n6I),-E$:#j,>_\k&GnF=-42gZq,nak-D&*efqY2X%pp[;7aC@MCV?%9HkpilN5_?E=.jhf_He$]!YR>rRYIOolJ5O&soUqW)P:oHp(O<n;6^=V`1F,]Y01Wo#GkpU!PoUqS"RsL9ekrEs"mKC/ckWr8I^T%5B^m,p@9L0ks;RA>m2GRMpNt$Vid.uTdcC*!^h."7qaR(a*Z7s[hiU0G6APpPAQG8B&+1oXqoY'9;o=:_;pdG:!po(gVSf:\&FO=%](Z=ApMPm;hn1D6r5kF;MOSenPqAY';<7kL9jqVqg_<hmK@pi=52U]2MepbKcuQJ6VV&I1Q%&TWje)EFb.fbDh,Pjko=!Jon(AqU%NiCHudbL6;g_@$e";\).5S2e.+>.7t7a/r\"&96-j9cYnr<`:I<fILJ7'1/6#=i.aN]Nr=R3N<8?Yks2\I,Ih-t1u,GgIaEC@iW6%6Zq4UYP]hee\/ro.G7j!7*=YDEpN.V\hn;G;1Cq!WSJp!M:3o:Ak4#UY1+/Nii+->@RJZU0!h3599/=$7gumDSPW<T\:^[o083&m%W4Wd#Je>n^X/0.Ap.\8S\=5raB\/%Q0OEu#U]epuMi\+A%S%TH8SYUE0J`2[_%`mV+bgt8e2oIZgTg:2*+*f;b8LaVX&I7YF4EXW%7Q9*I&l&(U@<IX.-42(\=Np;^_P[EHkg4Ic)@<eO="`M7BTUTXI>*LSBjA_Unf?>H-D?hD&Dog4^gC@\RO38?1VLQ0@K5k1"Fon1%Kr`HV3<Q=!QT%s)k8nh,]su0+0"Tp#&Ceo^O#Z"p(+s$"hSpp-6(6:<anGc6\,Z=is-J67L\jC'XFV^.7=@!.iJU=oh.7s-FD<JY%^>4f\!=MffG?*^GD'>`U)$?(Ybgb,gJM9s>q7?t96JFFTPd4G9T)1PWj!3k4bM_9k]28"sofERSK_YSJZB3NI2eJ"#ptt+gB8_OZ%JR%?R=;(Mo"d%9`dKF@b(8X.l=EjmB2D]f-@CmUE)o4t&L=T4WqgoqS=c3T=05D!0,4a6X1JWiup*$eRYXKG.a0"MC$mQr"Ykk<9%Fu=9E7JZ4)5JR(kJ"5:hjfQW%(l*,#<le/MM,&("QcU9?1E<PO>p[Rs&1;5roK[VB&eZug#W.amEL*Uc;\C-]S<e51@Af1E3AiP4%IQp!M<fD9s@%F<W@UnQ;&QB8j&$82)lLSt2f0s?cJ0okVW:)c0HD@tslcuF-TLJc#cUk!"#k>R4?WG<l[]`2G_796F3-V\u7AC44%JfkK*a%>[l1bjt-"MZITHEJ\KLKdP.o<49jc1='E/TlWn5#(5Spfc!Z[Y!4_"Z1@ZnIt<)\Z,#,*l`.fqJ$FBU%MmR[O.?=AYDl-%[GR438;O?<Gn9UKGr!Z2n"+0;\583)78Ms\9-XlB5@lsY:(73r"Uu1Jgs[*odnp5W9.c'7!!;\&gTdoHFVmH:5A43&d8h$j4N1.[%o)<6A.tRd+H'*`j3d4p*KZCs+g/je^GTHl8+g#:k2uEHlJrmWPI,A/o:fMI5<@+*9#sS>_r:Srta8>&7q8PpNRJZk*@f13PTLPcZ%\nI$(a/Lk&iEXbG^?T\3/NFQ8iH99^P\u:gh'h=rotqRH6fG57[7:,:OZopec</'a.X4bu.f=%(l&1emIe"]-ZaJ*-81)!PG[&c#%HZnR>?\K8DqgpnlTt-(HH,c2oCd22uC^b?/)(XVr*Z$k"plVZ!KiC7=@>..fc6W(]>9XEM\rh+Mh<u=Zja[KfJ(=SW:Q:(Wf8BD0%!+cutQ_M;3r4!,<+<;9rNuHeA>]Dg]5<(b%\s#JH45]jd<cAAbVhQ5%/d%L;79GeopS37(Je!^Bot$lF:%4C7C?&FS^F(-1^WR;T%<<9:n=-MHu-iBW)Vj9"H>jQ($NcjPpdGiN\Q\US$99utRYn<9`a_eUC`l56>aA6QpXgousXm1g?Y4@eu_^edVSr%M<LdDP(&rnrQ%),>_-["mF^o#DiY!d?SaUgKN_*"38G/<6nAVB!Y^!Ggb;9ahShOeHLCJhTqXU-IIZ`2=^LmN##0TB(+Oc9gXY.mb6QE3AS1!N`Ll%"HGlqir\rT5.7Sj.o"92BS0?jO#$ZS51VONP^L(:i#hYa=(,cGJBoj?(^i"pF=B89Qs*(T\K#_?nP1T[$]10.+CXkVA'un4:eO$P%XSOb%0a7&783bpUn;mDiC,]4Y4PTBp4Oc6s()n<WqFMl@N4NW+WG)I_"d*)-VWb&@\N\NZ)L)LJ--[1(l6(iQR2m"AjR'%Wd*FQj%73Y80o&]39TTf&h0^<RUnb<0$RLjlIB,?@IF(VO`kd:4]R!&77O1GCB=<ZXkQaA`M`%',@_j/09@oUqTnd5=hj=8enB?SI>$gUl$%8hmRhb#Db/)gbc:RaiP(=;;jKoOS*VZ+GRf#I.1[S]jfN#l1u:NS/n\0(_lNGk-oYX*8cKfb?S$[:iq3n6g-,&cch/h,<i0Lr6aq%+8%K`&nuYg)j[NX+7Y!/X=E(Q>-Pn7*&"ufaDHM^'#oBgCI:]sg.Ro#D!&ksS-CVrK'/J[+/G*TQ1uWKr@/OR["m%OTC+l;7t"8R%CMj_sU<skJ7<MOAY,`YoKC%jXR236qlH$Up]LZ>N=&m-5)I20s(-em1"u(j(>Q+1,]m0+/qBdn.S\7%`h3Te3W#2kD@?ntTIZi>C%k:1I4K\]lIBil[QZ;>Y*Jc:R7Sm<8k)])Cb6XGiu?)?6;l7rN-0jR5I#,ctHG!AX*hL_]_9PF3=Yp*i*N]%Z@;N>*P4L9n-$MH.^%q+Tn-YanMA3;$Fb(-O2'JCAl+F%tJhaiX:+.)?nhV\"ctcB=*.L\iA]^N5Rp'8>1][j]TDA'$'AV_P<qc8*`SLG>M[T4tING$t[n%btRM?!3336o;UW8g_7ESG][uPh$#Z]F%Mp7gfma%ph_W6&)LXF<sSN5I:7&Og;[Uo]>+3m0)VY`DT6L/K+`N)*K.gcmj!Z2(h]0R%R[q:ETgq5j/dtjbbOe&R7Lh&UD>Jf$OP7:,mh3oH-ZYuEN.`3MB8?VdE([2$S13UjQN8Pi#5nBOJPi/k^'<n&7cTUr'PB-co$g(P%Hqat2WG;3;e72^>:gSB#\:u/h`S\Y!Eb7Cq2a=8*:T@\\0MM/*"Fi94GVFCI&3qDBBFGt]MRd%>q4[Kk`m<C?6dWlE_gjU9o05ci%-3AM;9>7aFhs%A'-hiD:ES]A;aP5IjYef^dA7"p%<\c=SG;HdRF$"[1m1"KOdI$<?HBW<Z#2.NpV(OEoH%6nkO7uUs,o'.E?qt'k%&&q:\[0F(H$F"ft=Z]2=6\MhSrqOc<_bb[MJQYs;kp[o1n7J!\(`FijL;J<[1p<1]B(fPV("Q78[r>u>,*XRU.''N?@Pj0EC<)EB%o*SE7J3$KG#o`&_0p]_`=,#jiEKn8)%aOA&FdpDA":(J*F[eT;1c^pAqhjj,\gu[XAIC<4;d]jjoLG>^VDs<!;)'uq*r[U%cmo:?%4AZ'TMDrq8E4$fToQB,h-Ek7YI4\f\.au*G*IG>@Y93^FY*n-)nDX3,hd_b@m]jj*IbeQJ-E:sg$$@J>N:NlR2d,6<^MYfbQY2(Z%oT`Vho9s?<J73=`97H<&AX]s:`A/YSS\.[]72AdlRE?WV!%&]aY%?u=nWW1Ld.1m-bb]lE<j%]'i)_+^IulfYBI^ZY<$MNT'anlS%Rmd7+#!4Cd&t:/'-:'E02UP_Q;Ou\/,L(@80JdWeJq"EWc*."-_s_L5q"K!Hn2oq0BYB^%eaL1o%.`7I=on&n-!G,#21=NAHG6EX%hS,R?/=N.R/+/C:<Ng>inhB6#,o3Ib+A.LG%`\heAg"oX_`DMfF9'P97%2?3_LW#k7W(tiLHG;<-r6u<knkK%N\iXHN=-T*P@u.V%Rl$!_,XK17d-9=ARuR?1#&).IB`]Y\d[]Y7Rk,[(L8LsN:SMp[11[_)(`XdEKae7$,K_Q5PJc14C@Ni0:Bl[(R6,3U1Dp,J%Kq',%&,u4eeh2VDhV<m2i9jA0rS)\hUCU"ffY=e]MD;VN'WlKIYf/9a_PMI.l%oUL#:ZiE.1H(R>e=U+-1E4Fp5M9n-*@hD;RalWeFYM^%7@KBYINpY,`)08"kBEip+k+G%3Pu%D@o[*8Qc!l,n0D!-nk=p>6'D>Tn)c[!)1!qoLWOQ,$CX@/EjTVP#I7%5TKH-cP!?=T%AV&c%J0-ihVjmhHfLB.:nJF)RYj3@A?3N=/XnW=Sioi4h(@JhjbT6VJhScV!eXZ>MK'@M?!!tJW?F+/7,%ko)i+LA1eSl4>ae;;K]Wd(f%[7b^%oA_dC.X1VKcGS4nLG?3IkC<>NHe6ZIg\Yl:]smSsqO;hmJDB"0ceRC4s)1O/O2k'E0NqYd7=.)BLREB(Y4Mf>!(fYnGIB%,%-'NfXOS+JZ`!6qs86Ln!Y436/5p;8pY&fp9Dr!dH^ZPWQjJhEANkU*&#5Uq>e,GA+.rDN4E&rHA54G`-`MHAgG&!)$\#m2r7uH<a%")TR11(k"l!pgQn"@PZu,_qOLo*U/8e'JMb9"JnWFU=Eqqso8X@6M]'N1m(9L",j@(ADGim!DqBH$^4`a5(TSQtC7]3J#ph\MX'+%Am/s9D<DEgOOFZ9gR2c(3bZC)Th^0rOK)_hrRZ7GJM9"?8Lb0)C)re8<,A;[NYpToj;5s+1C7_[Tbo2S8/RS:W2EIUaB9,[d\I2M%,X&m:VhE9`&q7;pEqV@:lf_?9(d"dI4Gu0d4X[r'Oku9=[e-G=K1WPE)7b3p(a'5RZdWTjD3ef[=<XpK:5W:ac8P84^jW4q"jWW$%QK:eU!diA2/'LYtfkd&<fPJg[AmVhs$4j'hnm&L8p#aa:;O-fn8RF]b@0spl4a:6#m@-f*XdojM^:ea3Lu$mFkAK]pXME[&`f6I7%pt?U6?k72Bo(IH#GEXhIO<bc*fd=P%GIUL%,o\Kbc+p><:kXjL>A?a&#iu](IPg$0aVm-?kXkiDN.r/$*hfXg6_;\o4I1,AB>JEn%P#L9MjD^d#EU?a(J;c/2X,c7$;DJqD<[dn+\iLATXobh5O+g7?ZbZNn)8^ePlIP3V0'EKd40R"9#ig/7-a>%ZBuSVH>XD0!/?k>l%L3Qt6*d7eQ)6QY'Z`HI;#_0CR5=*cTgTn&*2`E>VgtT9IEHC/,c>7B(gpsn>ET?3TrHQS%BTf9*fE75nP+N1oC89eWIgB534!O;E%L"cqZcbG;"YZXlQ<IBKEBuRec2IN8B@#@qp5#CY^@0`-4YdkYo9h;!h-)Hu_7^E8olc0K#b4:G2VV81Y9=h8>S'Tq6+lr7A<Yskr%fq.`EOCF=6'8-A"^o4kM2buPqQXBSmea`gsnK712\A))p656f=G7G%uXunTT?NUpG_oU5/,6[:hERM8Qao\T6Am,t"SQ(h_,M&'g%mC@hDq)!3I>XKi%0QZj0R&5H\`UbPt[QNEUV_5+4:-&GS"m0HdlCie'@H3B3ok2\nI5m\[OA/OX7A[s(5EmBi&'pQ8iB6FM1hdXV%M8)bTcLPNLW8tf<[)CaU@o76aHcJ4><=5&;geaSBe%=QgVMf\0Kt>d1.%u3dV#EeOp^Rb.(I\E1+XEqtIO'VKVnDF[N-0o#8QT(R%O[;fp8e<Lf8AM`5!F[`6WS?8&6!2Hu+5B^,S'bfG`5aPeUMFfKQO.7)RUVBR$slK-@Q&pll0:R0#I6CK:Ud*L$oC8&j=o'[a>naC%nVee6`8Esc#?94W#@s@%3q\m6_L46L$)ni`j+Q$uiQ(Cdo7ZH0E!,DHSqjhpolc?Rpg3[Zj.*;(jl<uaT#.8X:RTT?s6CDD:4RAK%HY:-^R(ZE`e]-H++Fh"I'"E#G/A,/:p%G_2@rU&74:n)"1_7PTjlkpr_/NtR0Ggj*DRHng^h5FeQ&3^,^iNRMBfgc@@ZIlYC>\<1%QTWkjO*Xf$?\FNKbrr;Wf>Qp@XP']CJS$C3$BaQQ.rt$5O9j$Q<a0Z>p#0Ipp#lRj%K0N4g;P)O8A1*A1dto.89@4l<u_SV^ZgTj%^ij1E2l&bu>G%EJ^oN]"E1g*/O5lmU)]><sB:?4/[`07c$b?mLj5aWIS>:NX98Wpl"USrTfg%&m,)8cE)F/8$r+>V9+&5/`U[dn7%9bP*2I"GOkpcJF#5c\F]nfh`f4JD$()Q[8`#/<e[/=k=[D$*E*diNd.'^(!1r@6G<'@aB53N#A#6JOC,'`LMK]Hb9sK[Y2lF,^Gs%d3CB1okuOCWh-97Q1:?-9'n@Gj.=q)2e9ad'<:"R<soJlFXW?qmdQ?M%3J,/"W67h7)@SM`gh@hMLl:sSlJQj-^@-KfjgLBF#bCh%Y.b<Z+fZ/]F86L%rODD4=K.i+8dQr^IEWba(a0DC:=;U';AKW-`Nt$).,7lT4)V3qT9#6?qOK6.<*sU:AtAE&j\6ZTVQ(H)ma+<>%Bq>g!UJ&<B.so>7VXEp=W%(SPGLR[kR`;$X?rA7fLF7&/_L4+M^:@p-jj<sp*Kc9n'Ll#>(I-%sW%^8U\>n&S<Q-p3]MA\)RL>*?%Q9WL?c8AUN<&_k=/QA\UEZ"tMk_n1Y#Ams;l;C.fcm!/64R&6D-oAP'0b22lq(+l`c=+H#M?)&7Xs+bkV8J*#\mt^[6X]]%#pr9f%907nWnP3+ulRfGMZE4hadkt)]U*k@];pp]<=I;:uW>QWD`NVe(6_cWGJFZ9B.Gk6jB_iT@.R"'=HYW-W_HS2N3!]E(#sDMr6olfF%cdSJuEa'eG`Y*Dc&=c@5LH+NEhl)Mrg>umXmZ%>Uo4gVrKa"cUKYl[#;+%XQ*`POIc]0I^o5@,:JMXU*Ne!&F:e3(ZHWVS.735N&%g9\iM;V\^SR"DG`<7@Igh,I.F?1ub]G4_AX_LpQ@;;A^[Ug1gNUS_:q]q_O9F%95=na@nWT"(]$\8tGSfdGKM=^Kb$Q.GNK+'2\%%\=pG!n8G<ZFO%>cqRWaNN<dW61o_0AEDC_^I?CX41rBR>So?7<F.`q=9hQ)WC\8Iq_%66If^),)pM2(hJ<p^E'pL>"N/sEt6_pM%%R/O#T'_bdKWDk$Dj.i`@1D53o76Q?7)l$%CIXDs8RoG8*kbF[:Km&7@iA=EW`gd3$HboAmb(U-U`FCKFS^893[qi1:Tmiq.Q5HHF%5AQ4QcG,6-.(5p(#1.st&2?uaLFJ\jVt03:?3]%JIQI_edeRW]E2*U,iB6!B5[;D>.Z[b8#?u#1kobC4;@Tmc$Hj7Y^tt.+;*YU>%]5F.sYHr#h<N$doVZ-SVDL_REiNR6'b*$n&WEa3-3*T8CZc-%?,r\rl:VUd%=(q/!p51s+(efLt/J_hf2js#&a-kpCDu3XF*;:BR%VdoorBMJ)O(ku9qb*%]@bQ]%:Q,.2=G3-WkGg;T?TkY#]?9qLRCFI_'_Ok]K.(,.\j*,fi[cT7XZn-=)4(NedVGb2@:G*_"H\#rt%2mC>*/oY>j'f5Lg?4QBOU8Wn7jk"p0pUC1e#mg!<s"j!3+9(#Eqn"N]nFuDOn\>+[huB$mpi$0P7dC$QrkaPVbnHR<.Lh%rZ>#Pr%do7NMh.*.TE(\)KJ,>;qW#9&Z)HjC][_eA.UM"sN6=Bs2>u4(b-FL'6rq8tjP^'+@I8-a6F-9m[YhJp7(7Vn?aV_BhgWYY()pR?p%gZhkdcC:-j?ejN5ra5Sqs7FY;mN4XmdsqDp?l/h<EUNT<s6_!.m^I];GO`oW0CBAJia;\cs'tTT^]/f_l+_`<5HT?m1]-qHoUl-A%f73V"k-+:es49L8cen`\fB5)=H+_bNVCl/VKnT4K`U-@n9^ZQ;DYuN4_::duXJH&A-<5"Oek*`1aPD/L;as!E!!M!+JW9*`.cKKP%r,.[^r:Z3^@9dp"=-fP8[-OUj#]ZXGWK4bY]d^W4W\^DRPhmg.>DmtmY8m/P'<37(ojKq[q(Oc8,s)>[E+I%fL9q\Mc3pt4:H:Rp%IN<&q-P&C*lA6S!fht7)".c+KF4;3QAY^c4D`Q,Ko+B:Rch#?9'l@`9V0oaq=@Ea]n$+?/*o?![lQk>oL2T&m%l2.3jWq%h!S%[Y%mRgDqX+2@SVin+S#K7Yb5b987lSq2e+r*SQ%2.KVT-uTkK=kOCP(HBGCR%J4K&RHe0IVZ!X\.d`5f,L\=61K'5JSF?Y+q+qkO@td%i+L]u%jt3H68U\iAlE4I.1Qup+cq4_J0Zg=dXF0C4KDC,4"_3PlJW_!+M+Ap!iZL0&n=th@6C&rn;@gdZ2OeWkn,<S$@,l'J!05B%ZQX9=9SqhQj`9@`8q2u:`Q65([h,G5F@;`V(/8s_D2R%h_?cMahZ5V]G`n!F0+.0EC]c27`[\g;k$O1ik2tTSL*?'@<=hPt&g$/7%LXDk'>%h3s:Z#3+NVLT<YPT4%r]<bdlJme96Y'gI\T;[4\T;[<Ise]74;b2.%^DIDHS^9=(DW!Aoi_n;RgNaF,)U;Q)*<`WBLd4C%3)m^rR0ME&-h%,b^^@>tFt3ajM^O-%L/SC0b@b7(FIBpt`s<\!V4>fJK3`*02&bZQ!HVs$QC-+SKG"\?"-iu4<_fkh5?u2%o&II%%]O<kP7uNi)Xe<iI2V-5@YK'_lTGTcV82tR,-"#ci\$+kP#C;XNe*#6-[qLi25hVGiR/%O:(mQ\pE[2Rn$F2UJ'i,0E<5B_397j%I%GmI'F$ZbW$J>Y<f`,/#D:m[sTH./+d-RI&bA]Z>j)/F[Y.?NM@/jG1iL>fEI98&BgNCJCl1i[boJTTdud!,7=I%!!S`k4T&HF[]5%5.YRQYW]^>b47[-FH#\C=M.^<n*Q$W_g;"Kf'Hn$GX(PV:=OeU`PSQt/eAa`E68&HZhr"rZ/Ej1C!.&u!gnLq<eL*>/MVNE<AnP2%:oLutjDEuZRrT\=K2CoHFto=%-"Mm-?5;AWSG:XA*YMQtH$bOAel;70'e!/\+BN^V%kg054+%p3gO)!)E+eRnU:%7P$7.mKId.Vm%GQiBc]et2&4l<u.2d/@o4`WO[%O-V:,q@Gl0&o,Mra2_d:*?F4gBR/%Y.;obUJslV3:s#HO+sk&6GG>d"oS6Z2pl(2aF:/fC5l0"%2"!'Kf'dq+JfJ5rZq@]45503<cSsTBWhk0['@K]2eWcu^M>p!L9H?G9M2;O=[HNHRJe3(r=Q&dIKTGb&c/e9VgI&<%kCRc$AlUiH%Mj<(t!&Kf/:-]Loi]^J??2Xg0:?=K:)sE/;'.gq?No'qa\(HBFoq,8L^J3)<pO2R/J)K!2+P8WV(4>&)K)Sa7OQ\2rcl+a2;h1D9%0iW^)&cTo?]J*77LdRu7'TbLPPA3ui3YU\`cno)M!_qh?SMK=okp[[F2#Kp(FH5_22nSt3s5=0/mcC)?a4$JnG;F[/%<eOtH:<Pn%fO>?a$SXPr"^Lab"Y-CMX:m\#:N`oNRP]_4h+o0M<@.at4f]G%Db]^<RdAZ%/N&21+^H[r_A-[o3skQ\C_=bSK0ANU8./?0&u96#%D*:g]:#\p0/Q@uk-sK`u8r/7eP\;Bo'K7eWpf+PG\j54agt,Se@Z^+-iB>\f?BiN;;f%2KP?s2%;'1*c2U]][_D[h4#S'ZQ:1sd1%@3E6cfUm[RGB`pXhUoWREISAro]uK'`k@kraITp^aW#/:jU]D#9:%#R!mKZ`#([%Oih*mJRD#;,M9e=&3i,1:TepMEn"(HmX[S2N%W[abMci#?^B+Md.3('bT</\/"<1]`(fIfHmUUCJ=Vc>01QmkV^o)t\:=Ximb_j+g]4]TAaB*kJV,[h-fgboX-c"J&e<6'nRP[HU>%PX*>!:odBGj+\2KWq88PU4Ig=RY!S6QV2F`&td_L.t1,b*9XjG3d+(1iOtGpeAG\?5tVpDr'BXXcBu=Gd25lSi!&0=Sr(Mq+#V?o%(<AW.WUiGK29Y&A=[10bK-b4M47be<*l:UH3V_]ZrWN/0]1`<PQYgE0gghC6j1DB+p[0dIG]MR*'0#A9OOn6.L%sS#-Ml\gFQj[,%DG\][BauM6dN$n:Ch?]B17bS^*3.lF]+YV!E"d(R`HuZ2Fe=KaFsp6[E?ndH(`dV=h.GcJFrR\s=IWL^R06t[A?]jse3P-FlO[=4%\sUu?'DghjVs\DFlq!<,gaD#AE707`GnBuD0bpSqBI418^ahsm/^C-no_-nN[6-4.b[$^KS]PVO*&J/K1L`k-]=GKN/6g+jY'qeX%s7<hP4BRbcA;Xk>"H5<T6:=BY]`$:9;3-*?4sB=HSP^JsHZR?G[lpe+H#m:V^/4Sg7i_iIRjX3sRr)(Q;7\1L`jlBJV9aesSqdZb%5-rQXZAsLs;JCq9Wr&X3@(&Of$98Pi3\IOSY+CeDfd(u*H:US(9t6WaTTDS/Bm%d*Bb_GFV$[>`kGco>7g?)_+][IV>+O.-<P>dO%#5ppuX[Xht!-;k6@Z%YAd#4V%S_KiF\hQ^i@ftLi$'7]ICB;Dmp1g8)\(?6[n#hI*cfU[D4D.sreP\O=@e/)$*uqOg\QQ0$b/HRU%NcDH[++XCLJS&eROc>'/mXPua4.:LIlQ"I.4N>7\Bm,`!*GSi:g)Qh/i"':)OFaQ[_oPXV7/7M]IkoN4geQ68Jgh3U^Z=>73m85M%(b8#'HheMt*^Fis/9U)&'qOZi!r@n7O'>(KUIcs3=0RAqlKSGl^'#N*9K#SQ!.btJMPALHZ-$`qW#7[<;+-ig;Y$@JUY>=`Eg)M1%Z).19KT)'`24%kT"9XF<-Oc3GejQB/j^mD!HWd5TbP>XbbfpmsQIoG`$>Xfc*Kt>eh)Tej=!"cW]Coogh::]!g[!26D+_SS!:pG@%ld1HJUTn-^.M#3E9_pBf]/sl4[iT8J4LML7lI2[l"ga=%ZUuMk)J((7&:6<mX']%9$2K!,-.J?V%^s<'/pb>G._!GB`\c^c-kT3b%Sc5QHFmn7E&U+m=PXuZ'mSK%(cAU1m=Z2LB7dA)HAR>Qc-:pXm?*4+*Z?[q;E.<+f<<:U0X.C7:X(Pd0NuA,)d]:Fib3`B]k8SL>%43m7u/'.5R)Bt-PX,,lL]oHpDSX!FbpYK(W?Yln-LRZN.HWf[uIV7h3rQVt"G5U_Y@KW<VZ-H`^Qbu"`SNpNC:eAesO\.SQLS@4k%AsC,*AJNCXOqB%:am_X\InIAh9:O-M#6B"1>=0fV/m13@L-Q$q"&?1E*A/&o9H+\mF>$-s<TdcZq+b[RZ3XL3>LZ23je?7BeE)@I%@O(5ra+%V9+eHlu'3ZS_pSrq3D`!1]pIJ#I&]![E6ETNc^7!g7_-hJ&%;l(3XeO).c#lEcCp,*[hH`c$@WODTlfNMB4Ib0sZ?Ne2%m&1L1'Top%1"BoWoOgCiFu_J`jG^/e]U^`X1gk+"GABcDmnS)9(&1CCh@!gFeEU.u0,m6+[1SYVU50So;E&:dE+R=?[:8_3Jf&SC%o;WS9Z6E;"MDs?,pm/=gjTO@1#?Y,>U*u7FbU\&GmPVPdMFLZ^*&H`O]4&doeG2KnAE]aJQAKc_!l.18UF\'d!M7ZiXANZer!>U3%mdE,tDlk/en_Pa9kOprWoCbeNMmh6cES%nSjPK:sr:i)D=8D8<0M7M?!.T,k,>&.\Jl?K<5:\580(jI\MROjpJne-n'seAG@Ari&%@h*M>l>h:..7QCREg$e3OErnM6qU:5:l@i^O\eS?ZIe4Gq=DtpnknOV]u0DpV./p:Sg)'D*-hD8ThO=40E&BNh/uJR$-kb1("_o:%6-h.dMS\G$Bp,>G,O[[.WA?LG9\$sHhq1or-smOL[ps"_.3e4`<(,Lj`B0IjH8d?Df&7sC!X'a]lJik:@i=0:Gc)Pb?15`qj9_,H%!KObdb:=m"o:U.[GKt"+C/R341<'lT,6nf2ffc'?mak6uhEu`(6qheK40j`8S7\PTo.%[(etiF[P%QK)$^hEh!j?$aUem[+1<1k7%-\Jf^+%3EHg8+5L;ggM\#Xjn#:D-#@kFtr-lk4,2-7">[.)gG&=8oa^%T5Va<T/%24(Z$GQ$^\05K4&,ikU<bTSC+fcX"bddW"`!%arHNn2\.e!p!P_*>_h=h=Da`e40H2nQHQ4(l#S`]eBkKB\geOB6t^],Z:!$:<#p1]J@1Hg/,Y7iANt0MTt"r2<i6I-O8Yj?\3rVK%JK(?\)pn.72[C7Sm4I<7b2+K(m+gGE,ZH]]9&."m<Cda?D\g+[k&t`BF^r>A@G]`oaNX(LJY.:9gMlcX`qeiPLj7@OLZ^$j16he\%5"B&0$OJ=.]c+g3>KQ[BF[u?;a6%?h0s/P"T/!N7ag&K+!]-G86":<]V$0F;dkt[$D'\DIle"iZY9>)4#dBcJ0d6seYCaKAIF())%;j&;,T,q_[rI2HKZ!tQ)8oXK+^Xq\4c&`>q%mei1U#&U3n+.(q>Ijm0ce$QD@$i>uCh,f<nr0L?mrSPc41eEe1"[KITB\@Yag55`%P+iF#$(KI64T]62D%ZViX<Kue-@rKe+`qJ/J:9L(hq6%BF_p^@SQ7c;c0;D]9$(fRl?L&AA:)$!H&bdgL4-TBUAFQ[Y]R0K-@PDW%S6jTP@p4L_3t/[W$:>QCfQpN8%+c'"*m5[R*lPNO7HjdV9sJhq;XpqJCC*B?H/l1o1^aWkaFEDjQ"2@4OcSS`+dYPC/L6]^73_A[%3Ya"QVa?Z2$je7-%OWt@XV%X4MGH&Nf2]1Z7ZI)fIhPgM;"7B;Z]AWb1,_M*hKqSi&2$5E2c+*@6567q*H4L!1/sI<Q,h=N)T,6\%aB#^'E/@mANRn`NdXk>SnoA#AIN5P2_P7.Q9oM83>o_IZ>E5B@`T%o5k9Pc%l(KAn45I(5$(\)V5]LEF-;eAJd5J@S*)`[oTAYg-%d]CVl'3W^?`1;2(AA2:ba7BoHFR_(Bipr((OMt\`a*:YLkgqf,]+4O\qV7'S-2"<eNRl]1_@mG-=IqK^.QgcPa+rY<]VF8LY/7fW%GRl2MoMq44Fb!8pdlPk,()*A[^Q:i-n3$>C^fZpIIs7HoM)7%O1Ag[(RJF:llEm_-==@q3ACkUtMko0akU`ol^=k5SB751KYY\>3%H"SqBBR[U.Bq0g!oLM;Ol;`%)%+m5Q32nDdO2PeeG,YrlI[/eHFIXjK<gn&:QV3lTH%6p_%]SBd)@5Fm0?/:.9&erD1PTXXY7IYB%#MRo8jc)&,X)Imb_ZngYpM>9FSUAHGD4Z12]RBWbXmVd1gq.t9EqAE2a9QXUJtB*HF-'V8:I8sU4pqtHc-qbfqW<&orb_6p`$s>$%'6+ku:IT0X4r4[+h`D_GA9Q9gmbL#HEFedg8"R;?6J?G63[7pWY]i]cQ8d.3'qj2@.?TVGZdL"Y^!i-SDYq*E*mSafa;:eY(TTZf%?<&>4GD^M78L5*>jJD]A,:\'[c"a0fBg*;A+[Fq5&[:7kgDnJXe9+i9;NcXa&%0fjaLjcj$%!A'O/DWW<JZs@RU(;`;>'P>\W+"]%3\TNmmC8HQ*V/.B+EV%?a;uSa6[3+.B-.JJB%RonBf-ge&^#d$fai<hXfoh]P&j`>"%$"<'o5!o.prB[aRSZ(\EU+`TH+r.F(33A%JQJk`0Od<NKX4bYSJ%kg%(IUQMO34-.!.L8Yku0`.X]mkU"qd17rgmO47gjmJ*=@OSi$1h"t^+dNuC0PJrPPcj6dA%p^NI>2l4e]%BM\%)"PK#%!$0h"a3hLNIAF!RjUZ]H<s#pV>6Z*ih311fH<UkDS9=>rNcbolaDT6'KSYom-B5I,Mc@K$^'JU`2(@I@Y\o5Tl"bjW%-;M0%F=m5SWA%^H0pC-T.Qq5:=4J5(f%7%%&W:f]39>mPG&>ob72AY5S*T!h[qoqC_@(J=AB;OULh2_6Bh*\uGl+=uP*S90^bYXI%a]q#)W0YTr4U'f.nL80l&45ab<dJ!bKLqfC$5ljCrVHj+Dm$PAaQ@eY8oLmm2fGn1;^bkNrnH*3*uC0VKu6TO][Tu27#j-,GM&ES%Un+M9fmt0^'r'.@/j:NTE+Tu'/B/Cq]+X!N3?QVWWY$B)o@_];M<ojk$=5k:0N9@=@-L!-V8[B@dNI^t%XW1<3TNt.jQ$diY`k,*%<j6oGY*HuHc_dJpNDJBam4VF\h_WYk-nA=mm<97ug?rK4(.VdQKBamX)G(WsfX.Bh(\fIG5+6sC7H)K;kPX1CFJ%H[bAPPHk/&(t%Za]SAS[WQ*>5nQ;>6s\=Q?e-u*?r$.Ftp%V*UT<7RP?EQ+W7D6"Uk#Wo*C7T7JYH.:2!`M=0(^Ti#0&h(^KBao4!L6f?PYo=+3=9%%eojnB"G'%!t6Y2qG.WFT*r\#6"hSrqIuN_,jtj]"Sj>$;V_NkM>-`oJto=OKk_SN4H9-H0e4>2CH*`8/9\;)PHt7^+R)]\<uHH\%nhcnaGCI6u,V5*FYAtJ1L:^j$M#:$><E.<[dsE)#le5<\82j4h75YO2N5=BA$=Kl=P?W)Mh$/2+/8mZ/&F1E*q63?s"Yn!6$GB+E%$+t1lisI%QVh]`reDC8\\2g5kmnTi4<];CkS%#<GjgU]mqseD!q-^uA6:OJoj[>XH\BrYjiH]uGfP8@l<99b`U+(dm'_Y'n3;M!f%geeGeIH33'LD\kghSZ_[-UuWci:^c\PkYsq0#1S^&[Z:q76rplLk;Ti4l"NX3EZS$>:!CE.bY3u@na@o;5dKGl5LiA)u'q^:8^r6%HP>Z]i9$7bZEZ9d">70]ou"l_TDP^J&OPE(U+O':?kVgiMTK>jf9k(7j@V*hkL:4$<Xqg.E^3B41VqDJb(DN!AnTOG.]osGA%5RO%)WYj**>`\UU_e\cWtZlIei\hp2`X1RSK4CuQ"`D&9W;Wk`A=eL?+lUG/1UJeN=Yss1l4/hdpTK+$$A:MDb?R_gmV4!H$`^ZS3ZVS%:S:8*I?>R:*a\Ff=Y)3&-F!mY!^ZUOghmEn<7'-h#V+$D=4ZrC_TdiD18td/%gr2+<=pX%AMV80\PVp/>anB?gN2lkBk5c7dq.rh%juLXt<er`1[_IPp;MtWCfFM>5XMeR2Y*u[A3QU^`97I&AiiVJ;kiROZL:T=?/n*J(<*.K8:$Y<u/=(@)'[7i,g01:#1<eheD.&f,%@1N\STeX(@]'")H;$+_\rqVCr;AHP%&0SP3'#%W+9X6Nfk"e4Y4aSr%!m\WOVr$H9Uk`3)T*PBEa!(OtQZH$b!3Ga\.L00Z(_38T%U<`Q4Mn=qP*Q^`"8m5MjB1h]B;4qSo*=YDM#o%7lIHlJoO<G!(6$&DV9mNG"F2,S9Bg-0KT^_[@6(XB1?`5imVG9-Ljm#VBDRfdp%jR%/>\MM(4\.Ib-V%UPee4?[u/c$m-(Pe2sXOFfAimn"*'sA)k6DL:QnFk!t_GgoE:"[qaH7>?^`F\11CcZSFidCR"So"1R$<YB4%W*Ia/)ksO;nW!;??'G#(b/]PhI;I'M+NGWN0EAn.gSe1Sm\QXA#CRt6AArh""rIgG90pkTg`$l[.5L>r/mKrWV3>s2WGE`K#CrQd%+t-GU2ol(3;IQE*Cg5\_ZScn,7Las(&TuQY#8BI.(fBai(`B3r>rPB]bFJ"QcpHrS)N!%L@-S..il63AL0D6ZZPg[8o>serc6s_%%2s5;=\i6Z3?P-p36oq5bTLmRqd-bNPH$W=:kqA&Rcn.iI)8800oM]XK>ElOL2DVMoiFMV(*C]gu5lah$Jl_*q5r71IT?+I0+gt2[%QU9a+p:O)J]QB]>O[95;\_90cSSD"*<$mn_ls]rP1f58]kR--T8h<Dda$Wja'na(;\s5ggidqnU+#Lo1d>Fq=!U`G+\&8,I0uBFE%:;fqmq-#bcN0=NiI*t@FL58P3P?]*@qLXo3'43q'@EmrEjKsllQ,]0O`K<YJbcLccB9bG)p!%JhYHH906#+;)/MlI:<X$47=hAQo%R87NIf(enOK.<.C5m1<A%E#h8,RLXK\Ots>FNTk[b\]<73H:qonYljLV<u^\ei8/^@j,Sr-mZ=@_!91=:H4BVnJGoGhi_k;5'ADU%U%Hck+`_2"7TF!f&fS>%`34-\$I71,pF6lVJAO\Y+3-_smC9;K\_^\1m8to?>d:4?0<$.cL9W6U<jl[.fs`dRRqeW41@'AATT7tH%8m?OI2Q4e_fuC<#)]"iNC'CdmHnU=I=iI_$!(KXo;oudE@"/JcC"0o?gb&'u1LE`r+g>6,[`\$#b-p_kHT_5*-I?Sp^.KBd#]s2N%c!Z/-3@8h_dkGmZ02%Rn$mQ'.N^;HgqVp,ch%YjjBq[8hYNB@/KbRBNXA<U0cnj_[Fq&/ZXT5oM?L"g<$DE^e5T:sQ.]4c5@9.;P%-DmmCTr%l*N=@U7(=G)ePY%coKf^VWHKJhT(?&ZA0%+C[Z\@,uhA=/!2AR<_.3J+Q&Z"[NKVnGp=\]8/dD^_,NcBmZ[PAQ<3#:Qk%mFGZ8M`\tRFI*j+KDN,u&U,%S#7&'jFJ(,-$;IjGiP.o<RLbCoS3kX$Tcg,/GU9Bod"^OQe<O`=I.\oA,.%Wb[NYsYX3gTGcW/Z-%E/4iUn9-#)^S.F-Yol@0?Kq4`QV*nKjBtF`I50$inZ,qh-=6SUd:,/\CRS0W3H-0tmLF/f?+.1"BBU37J)g;&g++=@)4h8aKQir(%*Kh<pglcbRA(Y)Z+"W^>QqsX@g:THM@]]&6iXL2TX+l[^eOAuIceX#uR#`q4ht<l9C43hup!*o'KnYgdLoW%,JE)fc;,$_+cdc4b%V)0X#RjH&NL3UZa:2:M=./.ZXhOX+%j<:%@kBB'3=Ub]jlZ8M<d9ecFl\%%)%SJNu7?nFN!4Z$rkK.@VYe$3bK0+JC34RlFgmuam%f+tF[^:;`]bGCB@iajO3-,^*7KWjBlR#UC9X2H'\D,7NgCsX=(q8o![[@,&la^DC1rnbD$\Q&;RKA/<7Peku*C,O=?-tS.`f#>d4%;^5Seqf^WMCdTNA5L5s?r8'rGf+1OW+3!>KlLW]O=a?YH3W-N!3?s)LTLhIC-d,qG.E?%'>^/:QV8-X[Nbg4QgogRh;h#OLEoJ(@%^`I<Lf&g#&C>*cAgTa'^FgX3#g#lk74L(/OEQs?[M&gf7-u@Z^;Ac07:;'UMCa9HO3Bg!l"kf9^rM2+W>fpPT&_;-bGj5?`+fC-%%"9%H$ODaf@\@_Lp'\2`=_WZjBnd>?RQ-$UQd)("K&HkI<VIc;W[<0bm0e"V*AS(U]WdkH#dG">&ndhE4<JmJl'8o+f;T7jtrC'EG%Cb+V&"hj*65#I,TW\O'S)6mCd_sj8Y`1=NG'=VjP:Y`Q85J6Tr"OY)5>DD.Zqbk@[mE3g`HgHg8d4:R^Kg*.X_:u_!0d3Jo+.Xn%%Ik%8hQi$#d?P+b):Bb2E"lcpP7B+R%_k1O^NcQ\9#q&4DI2ep5kRD$-=;.c-9'2H^m'\E<jjCSuhX<@)WI[*fj"U129:3A)E`fBG%!iZ`oY`n+d)q;f[E,SFJRml60d]Yl7,i5&MJ,F)33f):%:P^5oHW*7AC3rj--p)]Cgtg#L7!ZX>4CuU(>mNJhd1s#mfOD'6T8m?2%1rjP>L#*eb_1nKVhH?lGiQr2,,&L1Lkm[#\^tAoGcV>L*Pr&Ep7#@p\,T'/?US]4tL"?;-\0A7$X%eDP5IiZD&f*HaYQD#\<'2Er%VfkQ5Gj',6?-K4fjgnc9G5YN7e5pqD_p)AkSm<a4T[1hTV&j*QC&h88*X7l67.bqqTAL7EI(KRkDQZ=]]"\_gc/"ZC_:rbA#B-`a%7gDRPPQ**o8/tE`!Kj^8d-3T7<ECElf7T&&=&u]\,p7!7d^_[oJtIdf6A;M<`roDl3[F>a*/A)o;U<3r+YZIh6]CG0b7H#.W$_gi%17V`A<)t4iFcM(r]?5X1oMp*SDHDIQ=H6eu@k1X@+?Y&q`K3YWL'roc#`mP'`sN9ZL$XZ>g4d'gC/-%j(p4<r)2_YqWXsW%SXQ;(%oha'91cC$;01rVX4cb9.9t7"\PYk:Zk)(#_5:+L!33#>o#a!u0(a%lT,)DQiJju7t^<EY.@TBV.dEn4a9DunlVpm;4@!GlsioYZG%n4)/r$'(ujWSjV^jauaNQ42!YD;!k0D<\R@pj`3d?p@3Zh.0",diTg--qVF`HJMu'X&HDo#:,jMJ4,&.C8+'C:_^@C;L\"T@BV4f%[E$kF3L1eZXa"!UgcB1"[:pf_AD,HU<q\2??t:mJ#_Ar/8aPeudV^o$&LB<<)`!P@3a70eepOtU"Kt9GQu0)2E[s-sWc#d-EA!5p%P<an"SjVYr>QiZAe!3\iZFLGs`Eh+dm[%&@C&$5<l2;VmriJV"G^C==H$^^fS=<0.51s8dFm<ls-d$+L5sN$Da"'oi:t"1\h^$@!%c#1si2S6k-qL?E>D02qa2UTHpp<?1N;B4C!9;l&fWKUD+=it\MBH1f$AH`uX=,u7E8_,]Q&:Ph*3,(uf.Vc$g?GrKFV-50#'B6Nh%_1&Q,%#%X_-WG^L])!C\*(N&.TfH,"^iC#^JC.8,'K8-jf.P8:8H,lIWL%/]B3^dgn-q01gH64-%&*r6WPu6/6XJ@N"+@JAOB)l>%673$3/3e=SFlC5,_JdZcDdWR[\Uk;Pm&a^;oB%P!R+Y_7*kT%II.$E+Epr^:IPh(K4REr1K$d$C=lkjUePmeK[N'P_b-b:g9?g96%RXnmo@Etr&5F;`(:c*J[W0[R<6M."FV60E#idt2V_4`PtfA3Qt6$;=K2jl;bi7GQ(e4L'VhC3nTXp"!.1oRL1H5b!`*l]RpXb^<t%[e&mQrW\hLG8)B(.'_<d/RtK:A,W8jGC%@$Lu[>GYi7cDg)!.9[b:bk]Yk`t.D$liSht[j%/*dW\#'unam=Cu6WSp%iCM/m&9K"F%,WH*>kV1*Zi?goE10J2AQ>e(j'[KV2]AZaQV\>(F#eQ!<$iiHN\$Co.DLCPAE5XW`c_E?h2s8W,Ha?:_DJq]n$+=K2=5KIr]--,-%cflsF;BN72.g:e31%85$Z@C>2QXXUM_Q[F^af#s!G?gJm1SDq="$/RrQt`X6%h'L*%F)<r;C:/P3FO[s2)#'mH*2<]/:_LS1Gg"H%i38[4FO,KJ=:.t(1(#lqVhuhU;&2><$d-?aP9*DD5\T^U6Z9^2\&e3$q=O1=N$?c`F)%u:SCP,pHX8p?Y3W,D]>#V3DtFg_JUYb3%(-kd33?b?6G8<C@r7ob+aHbO/!/o1kGRj"lO?m`*j)4q+$Ur:4Jdpe]>`-ehT)^u8=DXOU)QG.AKKl;>Zc%6R\e<P!bS#>6Mhf6f%<E)/]5):rJMbBqoI!u'o.b+q_:LTa3^W9sgj)bK]4BI[]in`1f'W=AVe+7Y+Rn@e&f(aD9XiO8-a]L)RBQTuhZbiVT%^iag6-9Kq%%L-JZ&E)WJrID4(.mVMc2G92Z'-n@/f;.9W0c$NY#!6Ec!SUMP_+_tWNr?KeX@;GF%i92+DjU)TCtbA1ZgrWNU(_/$^@75bh%Us:%VV;0j9CI`L):r^KEZSskN)3F,K(ST2Du'&SIPnHr_MaQ_S+NROH6/;f@[n<F7Ei-8Z?Rb&L_Q2,R9$+.pX9;"!/FRYo9=$cm!gJh%SA\WqM5D=hXS'6qcjYd_O79D&=u94U'nTDFkBY.RD$Q/p#=3nNKg'"-J3aY/LMg'RP8VBYk(71WDTr)rSAdWahDejtOB"^<3rK\)%>.Nne?&;R:_0M&>_E15R-(0mmq0KYZ6XQ\SNKjJ23i0MH6JRCAiV(A%M5/-a=*8?u<!PPZZm`$J*[_E[(c&[+6WMtgK9Hf-*\7:Y%1MAV[SD%Wk%B3pibKs=aJANS6YHKI76rO;@!7VFVLQ43Ei4NEN.WU_D%-6p7P-.^cQl)R.:Z9prU4Y"]P`C#P<HVe+#gcL'%";0S%OsC.GQsJ/G0GH8kRV%H'llIoQ`1!AL4r"MABu=OLh3T;2nBr.,fB(O]Sg!(E=Qp"W!.T!E:mJlLkj*q`.4k%(Z:Cn73U1hbll&3X%`W_<L\aCZrAOnqFU<?OB"(bKQKsYUjH4r$-ogJXC6OBQtp4Ai<!\lE"MDDTYm8uo2.'50>PoC$hRTbpO>RkjU$Qs:bROa=i3C'@:%BMELsjO+i_ou`=pb;WF^j.2[^#Ldg"rU</.$HNO<9bh46d$>=(enm9TX'nd9q=*6?7GPPXN!q;m<(D\DD(6eqGuH$Zc.bk4Zb<?(%\9V:5+^hp^a\]\ljlF5KQ?m!ZD_%dTEgHC2\8@i?VXNJJTkN%h,tB^6hDYnHoG3DF^sob=?"n9S4B"\Ane26m+_,3..//mpjjINc%U"ameX@:\j`-i;I5r!=Y_3-p+V]a+sUX!7$R:I,?biLt-s-e,0Mc:B<3nuh)AM_?[Gq!+hl\Il;of_rbVu?m5l/mYFG]QL1a4lg#%c.g^iNnBoTNt67&+$pt/UlpS$Sa!q@#T^q:JHn/Ej+Xs-SDIJ.B#El7Wruu;kR2pVCtCJU%jak7<A?oRjJr@rBpjNnFogTUWh:UI%DhU<50YacF6:F%MN)[N5W$sJEXG,u7<+M.Z`r-RCAPqd5cb/Xa'bS-lP0FeprmkBEe^LU%WaI=5<=/A_F;W&JaLVAaeWZ6GNK8RA%K"3a'fEU(dF@"H#k/^B,X]\gU\#jqe3=S426->T;`.NjZ7_$!=FWC9*S?Ni*%D/BR0A.AT]DrnGhHIAj8X/&,$S3ghX-.rr?mq\N%n1^OmH<q`KN1if;MJ.j,-L=VAHfRO_-gNSh$qd;tS#nOT@3#&o7RX1B_Og:)8gE$ia?\@2#GgK7fn=3KArQ/!dF;dN>1:u`<`F^=%kmUB(ZHBkBaWG%a2*`iSe,S[qF9kdil/i=8Zjbe9ek(;/AZD>&FW_?]hR5Z/M6f:O/';t2e5ZZBJ:lbi`bVG+ac4jIYJ26>G"X.j%R,4&77!Dif;!trY_)C29%4n)Vkl=Mc/K[[Z]-Lo=eN7=&it&]o>ZDms%W,r!29^fsaoBV<Y#7GY77)P]GbU,]mZ(5E]/D=SeU6Y^%A9PnRC.^UN2AW'D/`GXh>9t+99m!BR<#6(U*"p><\G<ZkN/(C(0O]lo;GdN2?Hp=+E\)*0^&N&gVO8Ck`cjVh_$b-(Tpi;;#k2@7%iI$/b&cD!U'gIDq#ELGF]VK[lcr#4dA.s4'g-rNB_`94CW:#l<=;4=kBAeKf3R)LV+3(M>=RJ&ZZf!6fbpDODh-P2>M!\cg;lfNH%C&J>=n&(mj\'XSq#[+M<BUEP(TcP_3YBd4,&Cos;VOW:3_V#.g1Oh.c5j<-"ntO>T#mn_j!F1F;6>@kE$LLTBlfj&/\H6lPI%HbT%o2)o98/@n1LGe:,UK1Qm90'T]"TX6J3#?dQPugk[Yhsilj-s<s@nM;JX^Drf\dQFi\Y$dX-V%P%:$qZ%7<iR)&EX#-,d:Rml`)+f%BdrjFEM[mHoorX*Qu_o_E\kA?i!+Vt/NIJ(p7a3@TWMe?]@l(#Y<Uk0O,D*;YhNNtY`$h&s7`/bg].1Ys80S2"dfaFKIO;L99k_:%'^PoR5r]D#!SBTAlp"m=5f^b*/U9oWJL'h$!-]G4,lFm(rmWZpWo=Eei%!eZDkD?:[dG<6kF$2"Mu=XAl@ha1"7A8@WlhC7?bE%Y%87f%PMajh*fuA['Y)<-ioS]c+Fq;VuKaIP^;SZXKHRM:lXYG,U\%)c[Q6:Nb7IKIVMJ`t2'[-A^@K8Mo[oc\0S1+Qol#L2APnaVh%MiURJVog&KF!<E.@YP@Vp$IOk"8$..6f']f/Y!4cM[0PD?)^ZK,,*)nYi'Uk@bc<)RpS-m;=2m$Tq4n]!.K"YC9SX>=iNH"@nm!:%i+.'F$e9KZoJ[/Ng9NGmkV46tquX*()**f;A'r[lWJ`b6)%>Ps44E3Bk/Tf.H0C$%r1M`T%>'8ATYgYo86MR\XQNrPdFGf&O3sTi%NY5`)[hVfYQR]"3>tLjpgg,h@NLaD)\[6#%9U\FC$*'bXJ92B2W*Mkr10k(5VeUAYnO38LP8`"!p%2bMV?80cF&i>UOZJ8UD^c&'%lr(,c*W>IM52nu<;trE*-98mhhtYXsdFM32SB;?aU,V4U<AeX<kc3:fRo:,bmEMZS:H%D/SfdgE]Y98IV7R.q.g3K/<empj_9u8V%3>`X,Dh;,s;e)mG_G!"f1@(ojJ'l>B?-ErJUuQ+iU=$W=3DVf-j,>sD,?l$Q/@#mqVit4;1gI'c=k6[u_F/Z%K2<)KCM9g-B=gpg%"DY[mVOu"S)e'A]IPoW.*gK]?U1#Nn%dHq9@7m9DC/#D?n^i6G=iCM+b[DMZn0cTIKJGf,\tfn:a]:EmMS:2+"M4H4/nQg]doe#d%c`1RA;hD[J4NS;bUp`%2)Ed5f3+(f'L4ga`B`3=T[V*!^O%78M:4uKL*#U5+6OfNf1_X#-Fqq8smL9]i>LroX>7/jE&&!hCr`J?N%[\hokVE@R.B4AKuX5SufSu/E5_o6F]/#52iWdDr_6;E0VBPaaBNYqn'PkF_9mfSb4Ys5jh\Ig-Z\rIsE3)DVL8!D:292hmO6.M8L%+VW@8cj't-l4ah$F<bAm`)ro4JF%`pf-<s1rd)@q#CUL>HT#(l6N2ac>ZI;b&0<T_n@0NtOYNOOW'l2@GH,S!Je.:RA-lNW,MgO5%InApo4='A7g@A/Z4bg0qT]7u-'>L=u&Taoh5F8&1O>-F9W]#,Y]jn.a,$7@&2&D@ol(>kc3PtED7a?gB"Jusm6Dr@>?K,8KNr1*"%N=0)+FqSV`lr!@=,T1Pn2_F<+c$u)sf8b%cdfdu9b<sub?&QBPRZb<b/*`p(5WMn&g_DdsMhr"?Ge3\4&jQhQr,EHW,SfW*OA>7X%2-`WM)XN`bIDr69aV?<TS:@Fb!g)k:C=u"*:9dI&p%XY61hbX7m@b_/L=ER9]m(;>1X(.]j!G@@.'037)uj/6Pj3_/OS@hp),_@C%%5%H2hjh-=i!5+Yb*]Ej5#$X+U7">BkS(n50-7YlJKiLq5@a-nW@!M&lS;)qmI/kBE=45>ml\5cG-Iu8-ocmpM2cW&]_#^:d*8B8%c&UhdaJ:a#f8tQb@d>;B5pYa_n(iEBdc)C!?]!6!$t_?JG-ajfG#3Y1&f`DOa[[b-&;lsZQ$mVBW4P9BZZ)Ilf"Qh4DuAHt#.'E_%PC=;ic!X">-,Y_*'P\6i44-GR(hV)d(Q>DK\eJ2!N\s4_i4n!"-?qJb&)[/qq[@'s<;1a-fcFRl;pV,t0:3lq*3nrr+CI)/[=Sd3%lKFs9N5FO<f<+gQkZfi1^AYHhb@1cP4`jH0]"&1q!d+=(\qW\M/j-LU,?Yg/DWA(uk2`;uZj1m:pHE>sILk8)/2*8BTjJJ?\07t2%B!p%jJ-@?VldkSE8pV!$>b?P,6KNdtJoUUe[\_d_3oq!2;S*KKr8s_BdYM<!GgUD>j/+$++Gd%oe]Ym*JJ7j9?Ibbq<eUuMhd-E$%#O[D*c4cIJ*3Hl?qH)qK1GfABF_8g2\ge9e9!^8ud3[2Wmki(cNlO!Kh8otG=kp?n79Udk<F1t(0cCs&,j6XciNoRe0mD1\hj[bh%h;Pc6H:4-:1B&GtY?'Fd&3pqi9V67f#/%#^SMHi6@X[1=<F^*]"h5858#XXE^bBp'mNDT8r5'cQ]$sO=Ks=$^@M81+1#6&2plP^F%VR4^-AlE%"7'e6q=!O.SRGik/V8clS-T?-cgm/q(MVXL;qQt'3O'd60IXZh<]kZ158%j`e?m77%?U[s-KdqrTU97.7eS_+n]pq1j%lIEVJ&O[7Q.h8C$iXb_?la2k<$?%3^r_RgTB$ZS4gp#@W2op"A;B')+BW"X<eU@GS)ist1F`cs2(qoHcmUc.T"l6BNbq"6%I.nq*%]u2!WY/+,>Jo`c<QN+nkc>H3t2;mD8"YL.?*p^eC)Dk_ZD@D77I-Pn?$+n<V?O!5'ij7,^9t]3El?E&RDa"!<l+Hh<%,Z:q\u=G0%7>>`njEJLc?h<Da]U@+_`l.n`'1a,fdZus\<m-Wk&c575??+!>,,SG)Z.eCmH$F/`E:K&B&Bn-;hM81^BaNHI1e+ItL9lV$3bZU!%grM:+L?kp#@Hs[#&kq:5"M>*7BLem/*"<g8)Op=\"BB]]%.\1q8<TIhVUWR`!Qjho=aFLDd'?h1=HA4mb6-c9"(%3']UW.Ei3lG0%Hl>%HO\"f)hPD?g!-Eu!aq6B?cK*o;5SkdPmh(S\5e.F/X2dTM,a]_,XEj>uVQujc\63S7.sIeVQjU8se%QB$8tfZ.8Mb9Q;Kn44%&Y==+MkU.^6$p@=$h=&s)LtZ?eCdF<-:1)7Rc%re_dSp#s4)7WP`$je,SM&.A3<dG9NX94p4f/-:*V'Mj/JeM?XS0'Fu<g.h,,\[%)c[H\l9.U]6)`U-B:[E$E?qDM_82'\\91/dhj=k^,b.eE=2s(3CK&AQP1t#;mb!fs\9D<2@>Wg+Ftdpjnnrp19o8&&[q2.@E`;8f%&%=(`QHW(FrrHJRr+]g,l\R&%</j?=^*9Q.?rq\f"c1,PQP%*8Nt$ZM@`Ddf^"]K&,\:t!Bbp(I)aXl00Pb91\3b6!8kW!:[LMK`%f-p&1e^P;aTN%tt[KKO0<X`S7;^o-)?O]:7j'Pk-:uP$PW/7Z!"S:R/d%#k3WFMc2`2!e_P<^cS.;W"Y;]XBlC<`Mr^rS+fWk&K-%Vg5>"mXVEZGRH>eI#"G!3H-mq!IpEq[n4i'=_QnJ[&6Y0*4.UO^Z$.Pq%$suOk6"f;peR+E#%b2T<[&d110><&>,BHV#/\b/M3DZ%klp1.:]Nok;hU"1s/51BC3pT8DKdoUX7D`'FfAm<`8W98-Iq?l3M0qhj?BL8n-V+@U5k#94))RF1U?lT+<TDg"Xq4/Ap5O2]u\P3%f(69^]S7te/*Z\H?!He,%3=XFdTbNl0*TX\_`/)7P*#-I/@"'5CCcs#;sKE+oVTN?QC,XqaXCUsUM'Z.d$Z(gH*t\qTs&2mmV[%u%f+H'lkPDSQfaINI3crNmK5iDHEW'.VA>;3s4mW;8d`Vu_cf(,.=@314&_7oT;Tas7-3l82DBD5u#2(Zmg,3EYY85+I?`p.CLZB/"%!KZ/$4jUbV>p%.iIJ*Eo/)$urO5nA7l,.OGMY:kP^K&Fsi6'!&_gNh$]m)r/P*;m@?l'BCh&+mK-;D*U89&#Z'*FoZ<FruTB73.^%>515k@@E]:D"-`$ds)rfN]MqN1t$ZOQZ1Ylm<*$hH3cLA>2E=p5`5C0CUA&$J=Y]DWGXs>>[L>:$mRg6A'%1F+\dt2UGS.V+hPLS%?>SefEAp("MgJZC91f&T%(a(gPfZbh#m].*)Y%QS0pE(1<kDln=Qk3KbDVU(>b6Ic/SK-d6=;#UOR<NMF19^81uT_+blRo\eF@9/%Z(-!9aH[TKB?lLCl,W)KS&Z=7eFiot7Bq2m\M_4[+i_4-`u"q"]*F`Sh6r>!Qe?6sB&'tGSFO/E#9*3HIAClSm\+5kFn8_A<,N^m%gq%R6\_[5@iC6@Pqfp#0g-4G6h6rA(qgFrh*&hdXF54EVd,Bq"+*DfQgP;>Jn'0n<2fBa^I.R&oBCB^'d'JOE*dc\TIIR1H'hjZg%<jMO#L#t3WFqjE\E$RiR*6o!-E??SL9Mb?56e/-nYFf,11;b5RLa!Z.WD.d<)=ur#OeTC@Luh?TV1'IQdAX;2ji:[:]fbr[i#i17%-^ECB-m$2PW&5X0Db_`X&WXFYjD7X:BQ2VQmP$u!n6#T61e-i,aO>XQ%TY]38a+dcPe/ZbDet\C9AndR76jdh0*>8'mR$\bfN\b)%]Y,/P/A'*q_[\_VOX>:fMJOS!ZGSi_4K(m!Uaj[bp&Wmhj`3`HN*'ICM'CbOUObdp+b!rHYWN2>pja2H%B$^9-bP1%R*JX\J!jNW%fBQ$A,d"?6q6E<+@4G2&1fh.iq4-94K0W:gJ^TJW9h:C]Eu$L@<rBtHhIXj+:$L\Tmf&B'nbl!u%,iPc4D;[];c/1^6sm.D8h\1%%Q=Z:VgGY/BKDWUF1P)BaY/aMK#%XQ_a;BBA"Yn\B=n(-/JEc_dWHq^'3<]l,W^Ei/01g:uJ@=*=DK59<&CmoE8phC387l\[I3\'2%oc95KK1YhkFm`]@NcHG"Rh$@A9OW<$*"\BePZJ^_MZ?VVLi;>a3(ZdGW[D7GL./@j,SpL/S3daglo7jB;fMe-;+2*9\LrcQ$jMbF%`n6Re6>';WGfCL[M8XYB@tjg8C),+@+9i22`PkX:PYa5*T\h<`I5lVA_dR":>!I=+B^CiJM%04I$4ce+Y3>Z;:#SAkDi0TUqMkPq%P3e'fh<do[\qg665_r`Unal\/=?M#!h3_Bf?l&$s;VCL9pH48<QIT[ifWj_4H@J+le\9`LF`=nb1gmMbEs6iSAUd%=Nb?Uu9A350%U'@jY'-r<29I)LOmEaCGE1IdCO^8JWl3h:eeRe\]Xl>tXaLmoJ3&GaM;Lgsu3QJ:gngo,gopK1r6nBSih+&LK[6`2rX0Z(+&,NC,%Jq-VA,q/t-`:>e(;dk%"<d;>R;gtfT43C13/\!^N4;L?-04247H.\4pnN#b9O)MV9>ff'rju210OSS>#dV3>(-@3&BXPjiVd*7XY%@+]nfBU90ue\W]UhBJIX$_LnLm>90=AU'Ko([<B?4rn+Z9oBi&ItJ.dgDkmjW0umZPED=uX&8%teX[+J#&k+@^[#$W/n???\CG`i%g@Y@>I8pEgR$VElCJ(0eqQ8u]BKk>/*C`kAmLMfu2KssWr8&K7(hmoTnC$(g`*oIdS\iY+H\I1-h(:f82YW,8Q-C>ec.dT"6ZI>%%XLI'@2rFKmYKit7O[I3-Eb,be)?l7$5fGKRKLsGi[7bgE_W6,+Eoi<s>&/q%(/e[s7&J@iJm#&0!ehbs!$Xb8Y`kGVAYg:Fnm)cC%8%^WF,p/K@7!Bm[=)qMH.1Gf:)6Xc#AU!G,8m@RhWi"-6>-6%o[HY[W5i>[^].`27W47.jnC!2g2ndl!3#tBK:AW]og]a.!*ln=H%eA+I58POd3Z0Bj?*1E.A(t9'H&tP(PPXt!o*TG6I&!-SnFcV/YFO"TXMDOEsq%I'RT`D#d`IL3^;!2&#XQaXWW,G9<_n34\n.pB!%j07:8r&C@^-U@lZG%HJV\#"nrd&nAY_:t.FnQ,>\AV<]*"J]"#?rs<`ZdTpK>%=X@SRYrj-_]RpB3peXk(:^WKEXKN,p`Sd9mW'I%#GuO#kgM"`,S-jo*PWqe1*7bS<ZW@n+<<I],VW1<[Nb8uXV*5f&B$pN3XdlY[YB[6:CWl?>];"q`Qi*S6b7fUEq1q(aX80P4WSc-%8Kgl!0CDnUXC`3tTTIl,cnMitKY<j7R=4#1418m.k_+CrRn,*K<.5%I>b&kPWrS'k-9g)F&Sl[""aq9d6i)-^IuZfbgTQ,V/&[+m%'dhNgHT>'P:e@tSolGG#&iXsP[8*C\6@7hcZDF!^G?%\FmK?4[(2^#-kHcUlnR=YHa/^AHl(Mckq=/T5]=NtJV)t&9!,SfE&=WC\%lZb8812A@$L::BqD7J2tFCl2YU?I]ZC\gTa<u#&)e>&Y]XC^.fcP$6;5'Ra6^9LV<8[e>MiH9LZ`KBQ$rPH7[43!o)\S$m!gtO]@%f'huFT5SXkN_cgk]u.OQ]8'V"pCHHbp("BjYdoNo9!Pd^I^$<EI1D'gXmge,;u;E46i=^@1,o#?/#EIm"0?#.WE$DDAVsGLhR[oj%D.2P(W@Q#O^n/&,@*JPtWKUCP;orqKk;^L+d9`4L_/mS+d-q.R>0tGlILQShi#Z6)7;Vu=l"e-=f*/i)!&@OHSedON31L!RkucLu%`,>s7d7)j0^7sc'W.PL%6EZ`W]U[7UVn0B$i<g<N<lQ=h:)%G?32Q,;6`si#AS(9IRq>Bfkm^+:ONK_gbET&*9seBE-Y]K[0;MY)%2A!Q/-VttR-q[hhhud`,ObB]9a_((9E6)Q47186$Zi_b(k?'.5Sm]M6<H^U5_lL%u3;1c6.)A;+Ql7bj6us*bVh(EP"W:l!8Y$@r%]S%d*J_O!n$u<3@p?Z+Ul7i8=_+Gt/=jRg3Ytji&!,i&^";F+t\#b$F)nhNaT2:3]QTr^lG&&>Te_&L]<fS,g_1@Q9m6I7ODaT&@%g=m5oW:+R1hKF*I&Du3u(p(sDej)^u2@!?K^$WY,HQ2#u$h!mNa=CV3r-C4#/uJ_,c.r/++@<4Nke%+bG:=>=k^`%79VZ'*:XGaV%9%K1k44WU7c?o+pb/Bf&[8d93imY-iY*#nK2larV?XKWZQ`%1$oE4%dD<iVR@TmO%&Mo-gL,PBnEgWh?Ge8+KE\J[;GHEA(^rU4.%(AIYfU"</l8qCeq]Spetc%Sf<^5BJKeA30#2T+1')7c,f4d,7Y4GY+UZ=<)b!WYKk3!U$Y.P0+o!.k<*Nk5#HZ!jTrXlh,W!845F%#TkoO5U&:*_apEFW'GA(6]B%M,+3F(2FbVT+!W+e^IC=7dMX\S5uN\o;rUV0H1;L2"_@*YB(eB]<n`WR/></SA<*K&$'VFkf=Qb8%em>LfMhp>(1l$b2->(NBSueMT&sm^d6d*fN)6$N?GY*J?d<J*^=l"!;FG[a!]RYZW1ktZ7U"9o4@[eCPd&,ZCcWu<^`g?l.\gXZ$%XDT7>*0Ob;,M-oThJJ\bJ630BQm[L]WB0&#5X/6(aKWHn$9_<u4V*qcn]@NB@SDhk`8"+HPk9!rXoC<=rTGM4T.cm-$ROIpp/M9Y%1G"41F["^i=D<m9+OFT9>q*Qa)PBJn:u54.Es]Ql[CJO)]Bots4AeCeUA)l9;nJR"&Q'E/O)Wu5<QrWdEN"S4On>+5#s\\5j[-O?%-Q=abRI-db32M@)ih<,&GNP4?<_*1OqH"6hC(^+A+ZeRMb0:t*8&2>L`#>NNM2Mkb4U<]%\jL'jIh[fNKErQ)-Lg0haB+dA7J2A<%YB%[RTbcf_kLQ`d00.lSNS`VW.DcV?CgVNe!9KQrmMbn9a$=KlT!)meRF^-":Bg",FthQn_s?-F>/YF]#->+X@>j:lZ<mu7k*iha%,]R0b]BJoVIfT*RQcU6<6<L!@j7N;2Cn.Z>!pPOHC%o1MS0tGcfj](2Y'h<?2\)IhE;pm?',K9h$"]4=`Yi>tDW?te?1m\I`GJg,%'t3/Z=_2jXj/807\8u!HOaAIAVe>&6niAs`C:S)%j4n\CGN\%E4#bJ<k7T[JYE]LJ359FV2GPqnfcNGrlj)sK@e^@Yk88F2SRb4(%Dk(AClT]W_\__So4L78[EM@_V2pSelj_pZ(c7\OTCYZIIZ>h.,T5?g2%EF*WIY^%]Z9cq[o83peP5\E'P`c;kMVURL#.QqG=bd;3%pi!/pAFHQ3DB:<2#[a`,.DRK-ZoJ:ig.%HS=fKnML_LA29CHSF_TJD.qK;o^TT3<H#,6ZnXpI%FO;d%JW,.N;M^@;?"i(Cb9gA51%R))L/dsrj*NH1[I:.1G]H."?'l$mY*erf,fRK=!uhm;R/8$#At<+eYDebYDK.d0`X'kC'./[A=n[ORk8c(Eo2A!.W3!f[:YR69Cu%F4J+7`PsX<_s+0jd5_3WX_1YAJ94f$*?8$2^m/BIZ&(rWeaY.rACXPjQ%1O&-gLE#R'#A;%7,'+duLB;.VqW-fV<fQAicRoJHIC0%/TS!jg_;f)-TB$48j_nNhFC)BlF\#OW^6fM3+Oj3n(&-mIMc"'.MheYdFGMI3T(<o1o4u8[\&faWXoi^KR5u4pL#&>#qe9T?sb1k%_oOQDb-1MDe,c+ujr'c#_J''_N6kXFrFQOLP,2XDUdJZGcMX<X^k>]pfrJjhK8\6(iU,66ZuH.2IWa``J)b/a.3ufG3\I!;2+u-_%@K6.QHqH@fR"5,7_\BegJ$FFc02OVp.;>V9,p1sRqWFtd!&DQY4\A=rCPb3cZ,h[Vlmsq-7XGNfp=WX7]6i^H;u-%19ohldhpT%A%Q>KP@S^[#f2iTEc@%(=t=J9Ia'j,usWWljg:Il`%E2W<Se;K_)K'4Nb).r=c9*_MUM2%i":24Pb8L0ZVNZJZ6HGT)T<o/X7c,OET%GpR+8b&66(@qi?6=SBY>iBs0@:H=g(o@m'rf\!#uR[313nUrJTYmsPe%k2T^cZN(uJ0l,Z>MEfrS11j/TM`(Z'NDUa`iM4tF=pbn%p[%7A!'#G7^?3F%HZX&&I4Xh=[LpkJb70tcDo(mZn+Y)icaWYD1@hnjnDg?Hd1?EC9:qsK6GV:RWndimZp:,D!Z.7hEh(;#Ke5X4%jI``a?)0m+J4.p:Xt^5d!(E_G^uEYt<%h7R$K19EK12>P+<?pfb'^?U4^RZSJZq7:C-k@t3hg$FdX1qb*`Ko+*9Ka&"e";8'@Vp,%XKmN(Ten,\!3$&^@]1@]44k[QT-s.*gGuKpY:9<t54u>&<Y=YIH*f:?-`>.fk$_Z^2^/4VObl$AZg+WM9ec6c$7r.+Jp>e5KV!!\%:"//YVWMRo^M6E]_GJ4j1"n,`)oW>Y+N\KjZAccLqa*G,BQ#ARfN]Fua,6*":[)=hC'0@_Xi58m"m"UpGl)d\MH1h';W$l;Inte.%hH/BO3.%,uS<J,>"*"tNMSfmdmHZRHAtYs.g`5>/e]F.9<Y:-2_[`T3/oFq^;*S)H"?5U>B)=TTa+9^97@I%Dm[jhqW>(&%E-7ak%=B=jD!Y#kg'2n'+-aN&krPB!eB)2/lIKBQW?`?5J/AEop:>YH`U-h.,o>mJ,1PnW82j\`j`:qU>.hCt2RbOOdem=eua$_KfiZr\8%Q%r_,lu"*3a_j-Uc_8c+C28'sVSWI0/nXNm;)t]-a_]P]ZRd0=1G&cY("6USH]LrQ5nYnXJNt+m3UVs#U)b=W)Cj=AW9*<e&um'R%2:!Ya5hiZT?hY5ESFP/@\"LDhKnf!]9HkX1]kMRPj7.ue?2(5eY#rDf.US$Dh(Dg(=0G6?#^@?S+[OWO3Gk)3nUg1!k;(ap"YiIc%(5:K,%9=3t)97>9a\7@`LmX;RNNP0gA8,Qi34%`k9A0`DpsQG..L%/6P:6cGiKUeo8sKNlJq8Q;BV'Fu%T5;MVcsnde*A%ShZMbc%hG487eBdrhXaY$q);UcNa52"%&cZ6W-@+b)>i(b,pWqqO5ZWB9="3Q5\0#a,c8['(/VDnEl6peX3%5&p@h3fK'lEN>bccS/moDb&%GjSV-2Aa\BW#D*46"I\Z4$bV<<V4%OlJ7I`a(W.Kg/R,C*',X]#!d#6nHNLS#oh!c2IsUXAAjM#(pK39,Ca-/e[u_2$>'2=e"A0j%6_(`Lq`@FG>fH<Ym$4$1\?BZA9/O/?%.7jK=7MtM$,g4+HWAi)Fo-9U=5hhj;R5NX,#10jIDMR0e30$mj10k/=5(j>E@Ff/I=-M8%](^A(h8_i\5ADh,R$&<AT9Qj2Ip2jAYO.2Bl`L!0`4S-Ab0(s7gZbR\<1nQX&%ED*@Z"L@a2lEY2ch=?JAm0b$7-5Qm*CBK(Vs(=%>Fi_V239F3lFne2Z*518iiY[kWQCfqU3PnK8ql48$BSKXFLG1F^b+[rL'hsYfL?K<Q:2i9e#I?RH=gO7m\MSbaT<o9;U].02Nk)Q%nY,\f<<3BZ7R&<&2s2uO[q@Pch4N0+H$<;7me4<MD=.;;]Y9R%]PC?oJm-09Ue.dugn@[:imm!)cb%5K?dj'0B,\q>i=H1N%ZQm(%<#9spRB(?e#,`DO(\Kh2a6$JimKfH-m6*<P"T$_G'`tBK+,iLN]N8:CX#MK!fkgBkKu246XqlB>RYc.X:uEG#Ai3kj7sRFf'eWUB%F^;*WBdS7=<?q&0cKuj/iWA1A>P'J<5ZGDM.J,htS9(SDWR<Co,l7ac12&-F#*@,?`:ne<[7hQ4'd4^IVs;mV?m;g](`^UC6KC>+%"`F;Rmob=liQ#UjT>dg6)M*?XPMF9MQb#.q@\anHLQ5+2XctXNqi<ff61.YE\X8kp5eknC9V`_^Xg%AOAA($\_4<PBqG=+.@UI%e%5lRQiiBIf1*So/cb_2c"Q,=RrGcD'3,T'LJ'tW(/AKi6cLf8k?VHO0<3cGQDHKcG+McCJVRsHl?-R'\3(&M7D>u(`*q!U83gBoX@%(pT:a!Rucr]nO+t&93HSeNA:%fMmE*WQ6qu1LkK*`(WK[6,ZA;V/.sVe!L4JSSHBa\&;jU'pp&^OLUs@Qm4ei&l]qjDa>p>LMc:G%]5#((gW&,<L6CQUnX6FNV%-k/V@&TTr!SWO(LjW\Oi5O6+Ph+&Q\Z53>$mPE4=QE>7<"a4;DFQ@GPO,,M4sU>q_M1ibp';d86@bU%X2<(..P)i7NS\4uck86k%cd-T[;].a67BEWQYglf"te>3nq=ZeRm+*cP,l`tMLM2K[o6/R>%k0lgKJ&5>+!*t)61$F7a\58]V3Dq%llpIKf3pu4C-0Y1D1*32hUd#-]W:Wd&Xusb#B/qAR'1AO(\_h5^:8Akqf2)5rkhF^e:9Z*<sLK^]36oVh:I91n=CufZ+IRYRG?AJ%gq9a"EL+$j+ueuU7/$,Y<rB\Lb]A_f];DZc#[cj"NqdUe<rj4uZT1*]fPt`N$h?sq$6DHUEY9H;mUF8B9pLh)'4%XJ#:D!UHu.MF%O0SF#6gZ?+/AfGbg4XrV"nGf*5r8rekAm\NQL!6u[3#n_(EqUfA0'%Uaqm$I+[.,nH6k/(p3Sf>KRlUZ]^VL0]caiXK[;`RE(@ng%X5Q,3F:l3\j9OOh<ILTRbU_!ZePXt_,'i`ZKlm<RftAIAUe[YSO*YEIee%M^]o#iuS*PkkfNh'lo_)I/Ui3C_n%?9(pB$NhXQM*p%0^\HDTQZ5gO$%qY#gIps;oeN4lbgmXmP)'V:eVXnUW(<4%)-0j2NGnbEDg>_O;p7(9)K:/7.Ee2]:qt%LMWh6=gGL=nlcf"7[&S`%#oDD3m]e<b%rIqa[P6D)aMYA_?U""?a@Fm$@7_"[aJ@R$4Ck#8nOO(dEhK<d[/!:%W8-uJI0RS1b1)l\6T+#b!O=J5Q_]ak.+J_9%JJD_B7&?8S1>$V3<miXBU/?ocO.%@>_rZ!]4OG+I*_D":6@/*DPVj0+a_*f`AagTn0a6HrVMusDl=#Le"'<SG_B299P24J[=\a&]%3<X0-6(h_F])'Q@4nFQl(K&&R`dImL3+Z(dnjT9\jLbOQkQ8uA3'F0p$7.@EaI0bs7)=EhI5Fs'5afm_lL_d(lC;q<mM*Z:1HB%f%.lrc#Dq(:9Ca=J2\%4tJ&.cN!\N^C1;8gs+<gL3QLn0+1/V;fc]1E:#D/PPer+geW`4`ce-#VPr/3J-']C<Yk)[<?hGKX)Jp,3BN%[_$DCA8Z:T]5bsu2U3gWZi784R5*9\16i,E!m"&$b?)P)r93`.Hg=KXSO9i@Q`;(aP!uNT;8H<S'W4PcOTJBuZ2m:0RU,CmI35ao%PUKs23IPd.XrtQkg28^2KRWJ'P)1$5SDnh8$@gJBHOU``E6m,L._DjeOL0dr5L/8J3p&;C$sdJf/.LQ40Vn-i*_NH)bUS5n/$^9n%+Od,aIWdnVlPf/)&<e7hVqVW!CGOr7PP*'\[9Itml4g#[X@#?0j/3&to_$(8FfuoOU=*12.eP@1>!dSZo8>KFd$P/[0IS]Y2)m_5%^#ZJRJG(]SU`pp!5GSl+&J<$R5nS=FW$X$]`e3$2^SQ2a%o)5_Fb:K;S?`Cjd(Gi)'^K.<lL_04B(`:T&6'*nN5SZXZ+.;c,1$fL%Mk`ZVKpYSg(mt7F'%mi=fF%/"i>u?!8>T!-1BAkmj&C04O"6"\@^:tZpkD-JiJoEms2<tK&nT*f6]fbtHS'cD'Sdf9<&'PmcCA9+%["OuNX@+?#7d#WNPJ`C.;[5&eC.]=@26V`Qr@U(odQ,p]c#(;<%u(DJ4kQeV!U5t8J$)COFK!rlnffR[>],kgL<%4$M#qN06IOb2%StO-*hDJ79aKfhbXA"9"OTgH-f$JB;JU.T_1j,rI@Shto3k:cZ_OkoEeXDs11R'F#-V`9:a>%r'US&MM5p\+c5_sLk_(d,Sb&V(_%&MtNgR@HEN:j$_O@Q3fjC.4d\Tj$l):g>J\FW]PmK.^=*)Jl=S;ZX$kI&#FBC#fgC0bZR:(6gdkXM![r[20`R5XB8EjRm,j-CjT<%EKUO*]OIGe8VE5RF\78;]Y6rPT%r#SNC8EX$6ho866GO6A6d2^l9=T2kP$NX.4NFKd4'i0K'K)l=DEUH'kj=or=cHMfnCGT0B>J\%5@I<b*70e<dug2RC65p&be:U"D):b&=V_dqrb5tkDY$!Nk3Wi,<nZ&lk$'c?2/_87f=6,'A6V"]SSata^!k4am,n,`c.aTc2t*>X%aS#6ULZQ3tcJ_uET6/`QgLm))0Unur$:O9OGF*rnF5h3.p6g]FZ$GX)h!K0DRl=,,VKr(*>@-.:l,UKlkF]_6o)s/uB'Tm'E0%6K%j"X:3m8@S\o'.GkD":\:(8XQ8REHt<lL`.S).9/#`Aj.ghPdJ%3%;dfo/qb&6*W[]-q/)U1]J*UFhWpsUJrJ=+R5n_`i/ALAr,g6%EGG$ocA5:`.'umB^)bMd!cM2(VEHi20HhDjB4"85oRm]Iqga6$_]dFek%mg]>70:NY'89^FZUshBU#ju:imf30;#%E`ipj27A1bt%<$`C'Y@S0f<P(kjIlc89q-fXC&b/>ZQ(_rF,e448GFAqpfXIZ7B9(N]=1CPZ<6W%:V#n>*A]rj;:F^B<AkpE[['_=\&H%p6)ER8f%0`2\Jm?YsN]Ie8B_/6_-c`f!H=Im(08#1-+qVqG1Q9X_r>m]T&gG2<'Cf:[*?;lmU3MW?Y5i-"B8u!KG*T9<u_NfNt;g#&+)u,:c%6)Y>,lJF+:`DLsUaE41aTdrNX?-%+(N!niXLHq4DC@JYfjQ8f,IT@m*A%g+Q(Fdl2nm_hZ5sepMXr$d'&A[A*Y3SH/Wh7U>8Sm\?%q5baD`Bj8\XKWWc\l3'd-A<;iEefkU10ipRNRQY_OO)?/4K_s9edB_iA"T"5Vhr(]"Uq:%B?>hSN`T`TG849TSEHZ$)`LigiS?@u%R$t-WB5_Ui4">&jjmUc(^M@$1;/?-'Yl$)\euXrRn$$)'Ql$c+M0m8%-dFhd:V'M`L#S;A.D?WORU(Y3mT?T*%FQ4)gO;E#X9CRL%bVKq?D68uTq8AhthW7&Xc34)Xf3;s,!SGK.S6+$VL<cb&\@f=ro5s;k+$Etro4Uc\W)1"oToX-e6/Q2BH>*iCWUflV&-j'FcIi[u%EH,Z.pCm"c]q$SZ'eCge;I[_K77eSDW,Po1S_ll%&l0%i4SMA!;JrWr_j`/o(OU/G3C^JZ*P5a,h<uD\n!hq$me6rtj_rf=2gQfh%E\(Vj\B^Jo@ID\(/2EDmp1pm/D=<@?I(0n7YYR1`_<Oqk26P-lTqK4uN;rfd*6Vmn#r%R?]D]i4;[a=dc95n[$Fa*6_kBCuh^Fck%'R`%(YpRQ[EVVU)RXET69UbHN76"n"?r5tB\o(qLW@'^Y)>u#p8_%3L.j5kI%#VPfnnJ#:2<b5g,AEVn_A:G*aJ`G_f`pCHRo*9`%j&tEH1HqfV++)YSrMi2Y_f-c^SH)Xj7k#E)oMdo-b]$KRQIO`O"u':hb_<]cV\1tll@1ZZUD\eea+De]YPKI$IMt8S;Kn'H(5kWe%iY:u'J#8=(N.k)[r=FogmgFPjk2hTMj/05"p"6C.\nTRPgWkF)Dt'',eQJiF*f1;[Z+D?g?s#*n+uY02>Ui1%R#gp*of0uI8Xn@U%)0DAX)Rsmj+\uWAX.,Vkc)L$'K'9KOaTfQ/!^TN]KNfd%cBl-A/MI#PGG`P[!e2_R=p6_4dW`=bc*$n>g(#!adt+m+jnYdYn8mYk%%<L)kPf7U9-kM%h;VKY'We3`VP8X:aYDLT"n=?=RKD9cCO:F?=G@qO>NNpJ0@%7ElEYQ%;lcH24)mhZQV4fW5D]S7;YJE#g:Z;Jf%KE#`h^&O.cq:G6ZO82L=?!.>XJ2.OtrAP0,V_K$DR:_"lR"JDQ/^[R-@C)gG1_ZqJP!s'jlB)ft`\j"M&08aS8$5dR)\#YPZ&6H:%9EqcK_R8n6VulgaeI%"+Bjh/=]YGJLE$M_`GUl0P5t+%+Mhe9=lP)P?psP4l`'"_I@_bnsDmD$De2N@IFTVc9j'U&)4n$K=#fKW=%AkGE;dhY?ak3ToRCmf7B*>H^;AUG1A?\tX[.&F_\YgE%@D9ZMdPq[a2ROVtSHDMr*;BXd%fR=1JV(t6b?l\=92N55-cYl&=B0`e&%bJPCYXf:sVempgX]JH*[UjHlD*S]J?dedI;pJ:%S0Zqp`1;gRM?5PuWfYHB$W1964D%^7;/3;kW*ESX`k;AMJ&IlC;/9*Amd4j4P%gE9:YJ`H"8VP@^:RHcn6Gr'=aXDfd_TU9F-bG)pD3OAj/!k3@#.&d9i,W-he7>.a.Q&]C;.As_.H13'8psbp-CKU2kHr+!bcDZNm%k*3[=p8i<+p:QREh4E<s6MpbMI3l71\%W[EmP#<)M0!P52m^Uce8hPn.GINoW26%>^WI!#7sudb;XH65e]X6q9+?PCB\94:Mca[R%Xg2\.^$1V5a4Rb_HFSK#,qcSV&E?`9:UO6LYXY+5AJo.+`o246<NH*k+de@B)^"o4)%Z224A*)%F$:JuSl$<%D9XN=m`m<N]KNIm%-2d`5q?e*DmZWIZ#MpeJ:_..-cSY2-9sGCWAuj[4J_!Z\;KYL._u@cN!(:,A)GlsAr+_(SnAIh#"k$('JM;UU*s*2O_+mJMVV8rP%W[udm-S,AN+9n;ClCa+q5Ab1IZ/`g,ft@bPd]EN)@)]NhNL$<#i!g#NEE!iKN=a*hYPcK`BY!iWH[jqA9XcEuHob[Wg7D+hKXRf.%bl2sQH?THR0WD6TI"-]:9<h."PL.ZhaE;e8oq]>.oh=>hn^\WW&X%7bUf+R>B^tq.J/Q-TeEhjB8i7r<!"JO4B*4")Hl>6kWd81U%q4aHhb\B[J9NW;"K.cJ"2<0K967+'_[ilA[XNs@?NDtcrF-t=^d5[o%>=^:j7("ak\..jB&QYnC5te&cgQCd$CM[J@UF2a#.Kh1=%XY;0/rh;;o916Q"d1)q)d8GI!VBf,Z()r_L2rcUqU;Z+gj'bA$4*G=_DEWiqR5Q/+;43I(-+i_9B1=?B\.N-_1geKFM:qA+e]dW1%$"kJ6W]FrRF\I[l[.C$@li_cLfGY/5AWt"/22mGt"fCRq?8t0hZC9],aD1\DM5SWuFQ$\%jkWO1(DV2"WK6-[g`NAjl/2p+crQ&H%5.W!2SM2%Zq(W"DOG<6QHM*5Q+Y7MbA3R!O$b</>pDgFV`S<N%2mLgF+]:C9?E(-bZ+1h2($j5&bs=P&>2DJ$d=7^)QKafQZU!QI%8I#>e;sIK8iJK]&o`ko+P$m\/:>Oj^h2?U`)-QP\aW*lGY,g*J`"5_D@tOR-g2K+g3a.ce(u/eX5g:sNX!Yrql>4gePkf%=Rj&&^%M6pKg["aK+T1LMYgp"._o%i-=1gBBXNlY^[;7@(d.8,q?"kB/46!7NhcuG6J0Q*c7g?Lrp7D74+.B:cQ"]4;'M_:V$elLR;>R`I%%"XucNj*(TS@PBl@5%l1;DDn1Ii]=XTSBs<.msFR[a.3?sg<ulsp#A.NVd\o7a?UtA#..)T$i_O&'Y>nhG9oaBVW,-lqPUi96+ffp%jb9o+8AqW\#L514"7I<d()!Mt0FdLrV;i6S1H)@gVIoe^>\jd]qaTE7=8cB$HQ#k<TR=D/6Cj&D[,)6l9Df;6m!IREqd8W+p9)$T%Z?I!qqY#bqFu_\=1t7IOdb%PRb5U>cqX]nsa>W^s8;J-5na4ZY-$bFALh#s\V\H7RN5jE<$)(7!:\8r$_lK^kfqDsI>hcP\p@[Sr%24#0:,LmC,)aAQ@9k1.hIc'gq#OT^L>C_$4!Q5O/V;r-\&cO,Z4=`plZk6cq"NMP2BWun3dHlE-OUp2YFg&%h^N\kQ0\g<?n"\Q_%9X*`00'5ONW1od=XDUHcg6(3epFWEk9r>aHAk<a=)TYOuRR]?pT5XYaSaRbX(S^^h$EJs5$R8)S*N9ip/VJP9o'1VNB_V^h2RE^*%Fg<gh-!r&XD<fb6!aadZ[=?A7dEAS[;n*,Fb2+>0huf"j>APB<ofT&En]6mCJGQ&^DN0(UC\6ARql$q!hBVo"@`Jt&:%he``fb_U%ET*4"7*ICGY\hs2;O/a=A$+Kaj"#eZULX:t?.!1kG,hI5_F=t9!':,+kf4.+)e9k-$KC8U<'@@d<oUCoRh%3D1H/Y64sRs*_ZPCU%DtqnJ0YBOt0E?#d$V_?o-fuIVkCJJ8jXIUn?s(`V`C?\O7eeD@Eqd\V?%D+8`g'-3QV&hfBg2AUFrVf62%Se]kR6KnTuuM.hXMi4%'\7>&B0u2p`-,)D56V>0m?aBdA$A:RWFh>Likj6NJ'3r.k>dBj%)QOO3/r.r:0&9;Z.M[ol9,,Aid%L&:#$Z00FMo](Q\mDUC*bL%\rS.B<oS+f:W?bFK3^<,eJ<A@\g-2FO@#bFl;BHp,_e/4fu\Rt:6t.9h-a6:&*;(>fXt.Q@9"X%KZ9SS]GsE;@3mj[E?R;Oh'^TH%dh#jj,tIm7G^jSlVlCFO*=(kM5oM9AL1<2,f9oI>*,,j=A8jp5F*;bX)CmIuSN?i\$lq$BTYo,nIZ:o'&i_pUmW+Z!:"=S)$hg7?%J>"NA""&]4`!\#,X!rLmf]C?l@C9h,V.,GuL(FM%Y202'peVES%UkML6T&'k9e2Fa8-`$)_N5a2=f-(0VE/e;?)ZWsMuu[[GF;u8%0HsaH-#r!E.tU*/MV=BHJ''e8n@%Dg%!jeBn)A1E:;9"T>)c[BX=-aM\-m8h@Q(m=[$7>L*&;&NJ53`h]H-^$R@Ti4,LdW,9kd7,%k-dP)&lT[jX?jlu_(BcA+8$jhdMLRmD@D-qfkeubAf8_iR/Q$m<dbPbWU^+.jhCSf?:V0phDtYRVB\LJ:d$(,q/i)+SD1SnPmn6E%4J?q*\"L0@f`PhMoF9d_YZ=>iK1Gf(9S!/j"nPP@=/q%KMLMVKIMV;\DuOb%q\om+d;>/j3O5\Bh#Vb!D7Z5*VW-[#[oK?\6166u%VJBCa&ff_,TYu)!<@@n(D'`q/pH:D!*lr\cPh&XBWg%ihPpu%2X%qoA[B37["h.J]'"tDHh/dsBXg/PJ'e?`aY%kYBn9ViaI?j<E%^Ij28PR'\'2:.Q*JA0-U0csiIfssN)4in"jaT[5`s'hg:'PJ4DYKLS\PpB.u5PI";7bqiN1!-TPCDm($I/6i_pT[$hBjK:]dLZ</%i=lBgBhiuG.0frB\?$N,=e,bt&"tRl5HSnB0CK?L-Duc&GUd^_<V<BmA4k]4hFuJr:2tB0HW:m97-:@!&-RC0](92'R$5Ps-[ZcL%i5YEgKQlm`+_Zr!dV^Y2<Tr9p=psaM,V!AP.FALWMhrY5>u%lrgK`+;`-^r[cr](<I?VB?.s_)$WuEaG@kNt?P@TO;XWpK&Vj7aD%&H8K`\_7NrYp,cOdt@cbQ2ZsY&C.a^99Vq6`)/YGTqTA=SlC:C";k78.AJ]O\[!BDApJLTl3lZK/W@to&qb'U>-GYb?PTbCKskeH%L"D*AX"k\U>fh9Ips/d6lklRhO4J:,S5"aIkEDKJRkmZlYg#2iQ+(E!DX#[JBD'duQ6**`<Z3D]^QaW;^1f-0mF4KgX5kp84_bWh%0<1%S]QuX&7'FbMO-*Iq2HDJnKk@nj[o%j.@GchY8S9^M0;LcClDmPo%5Za<6b0e^a+\/72?@r8XD6T?U4GTRmI7DY'HcUV5\m'B%g/YLqF9I'aQ+ob\hbL"<2^]8ahO[IfH=oS)^?mBJBPELOs*_l2UC(5^UumOg/5.JaG(RFtqc`qkl=sYj0)&K"9K4Dj^^7:CnVZB8%aU\riKgC!;UpP8R`m=e;GEmL:dmI3SA"d."[gB+G`f`8LFsTr$!N\cb9#NL2@N`]8)t:OS`Nf3Cj+5V9jbI)+$'1'>>9S>sTb0_+%lScq04r=\]VqICsO1MKXnGpao1\H8,SEO#Be1,)B\.(-E0#6YTXGI@i7#n+-2uoQ+-Bf2tp:^5f+qNbFB+nl"'?Y3+n@T[ZL6"[7%QO^IWrR[r>"pfinLcS)YiI;:,6uSFbGAQGH_Lm-D/O#P$gB'dQA6X_k"Lj*+m@-&R#Qo6OO8uM%M\:>P>F7VR=?_2e[ffdd'Jq3l%.36E$d`+U&mn*\"^'BnE>],E<U;AB+L^'k_nKN/1Z.Ne@9W\Ze_"Xku:F3.h4IAai'[%`]r6baNTK<U;nIo6Tl.DUt<.RGQ4So:^%*"QfQUqJS^F2LGE?+-$",'b?`G#IrtL##*R8@3)3)5(dsi=G0=I1d$Sn106jJ;tO:F1tXi?6Ch&]*YQD8,iA=!ZFto%HLYr5XX80%?`!4\>.SL2GO&bTIi*1G:-`ujD<0Sm^9bHL<\K'4ft6Nqf>sbk,=Cb8Y/@aW@,L&g[VHGE0tYa;0b"FZ(.7M@?IdfKb.^_9R+?Be%`cX7,KTrRt^l?ThZffFn`C$IcYjGSEJ[6PHh!-cQ6ru18:Ks@\!k;W_[)6T6+TdoEV_F)nee+[S(t4Vk]1]#A)WjGani=k8eK(Ai%Al(n5$n]Mc+]KRO$i.`fb9S*`_LMXOB[eM$H?mUp_7lpQbu_Z8'Z!l48mECP@%*ob(ks2(!&Hps+Yn4^\`clK*MQOBV)_Si,m&>P%^91].E-@UD6dfsl3hB(cGA9]2j>Mo95DG%^]Srq*1H:\t?/"8%)D"8!`=Z82[6f3h<[XCb](6V')lc2S;Y"G_jd<A%iC"eHh#-&i%1VZp=59oLI8Qjiu>h8:h\dR'&Xh?^HGP0QKrV&,c-fM3<j5+W)B!YuCO)aWc-KEZo?&#bnX3J.u=.e0gg=0e2V/>KS:Y21=F4+Mn%Y9@*(RZ3e\FW3W`D='eTG#,l$Gi#*Rr*<:lI;tUVA<i*PP$9XA+CDqYM/ED??'Q?;?$VWKS@!6"9(k$T2+t%pc*$hR*<_'DA_Xg#%S91nCIOd'b7niiU]qR>5.5SQLB]g\B)HSmARE_0DS"S3m@;V@"'#5EBlciY"n5lk:oYY>@#$:3SA9rKA3me&!'=u]>`ftd"DGKK;%a'R3[fF)(WeQ5pe:%roTeR\fe_2.!hClSi?M6_[D4oeBjjkA*^>_$L5J909FqH&q%)95&-L\->TY`W#=-bE]X-f%D:*ibYR\BZV3%>3o]>Me</OpuIKCP\/',2F;(5qsIG?(tSc)!M1/D7Id4>4A/To7X8ejE1slW0S/b!/5\De.?VcNTucciLRh'f%7inQK^.5tO5XT9%CMh=]*)mYP[BA%9h8aqoZ-Pa2&E$41FTq3]JS7d7kYFKCh)g^#ZQ.pCX7]hL6\ONd9G"SdPm[!mgN(-ufp3%ZXS-17TcA6O"(QFW%5+(U/8I.u^4rO0@/TNu6PBB!>i&G9,6VoY*o]_GV\=-)j*Z21q=o<H'LY#HQ&I6GqWp-P"ZuO7@TFhU/BrTUYi>j"4F`e&Q935=P%#)d7r+E,'b*=?[)bnd#E9UJ&@>rJF*aKR*6X(P6G/&'0uQ(0[bHD7kjqC#k-PAEr;7>W@M']rr#746S/0hXRV3/nRC%&/IPci<%S%PBn6YS\pdOTgTN!]8Da1"pcH.m(BT00)!E_516h5\M.D54e-Gl32=*$mNU''<QB"4?$E[)m`OFr3o;fs5N,;jOI!Y8,8&HZb&U4<%J:ikdMG_53<@eTeG,Iu;<RHG#*idL#O"?s^m*664G?/;nmLn]BRbhdJ?-bpJ.hs&1:]m*C='7&/Xg_&l^SJf913,]'[AeO.SHX'*%ctP'6DUQi$8N7oA._\M/3^)Dob4<Q-md,06Ahi5\h:5ZUZf]SJK(<8s$e4MSO,aZF.?LRnR)p6C-USh#`t)PCn4]iVnIj:@:6*8[%Lj(bkIq9>L>&QoXp/]t*bfr#S26sXTEU3V8hrdOXf=\h-^HX%qIk++MZ$^!YhgbK@s7:a=n,IjK6lm?5.QL94T^bbL\`[DSTEbV=%Xf^7NZZ/KsbGC.Jj[;NjL7iEAk<T-CR:RR0V)s'11M6C$F8rg&lTsRoR2tkSluGGQ.RIVA9SJN9N[;<<&dW1?=H]_okNo4NXW^u&%=k"8a8uP@pb@+0'@TR]f]YMkt"rN(OF6i*uio$CN`FK3rFF\[7rU2_qNklsh,j5>:it\8`1g.6=LEQ`Of"ArUYP`0F1_-g3Nq]6\%2G0%EX*0+Ej"^Y8)E!tB_uV^'^ArOH/]EdX/-R/EaP2tuV$l:i],:Nr^(bHcLq0#M6EpVYh&+;j(U_6@baA0`%C89"E*DX/SC#6/%iL,RtBrDL2iULf#Wi\QX0hq[&rEE/#Da3iB1a\!IJs8HD!kb'sO)E5i%bBciRMoaY7e+dtk4G5aot[*3jH#q4k'rA:QEs3QDJd1L%_2OoY7J^BA&MmD(5@pORhGtshrI5#N#pMSZB%=p__pnlZ6fJ.Al4R3A9P71=KfEF4=\,?B=ZW_Lq_FMs<`lmPNAXn1r)85L3eVlF%$f.uJ#YI\8KiB]LHX3-U=p0`?dl<XCPPC)/gWj;;b;"ZfbfEN4d(cGDqCfV#K(PTH3oT,\cl6k#Uge'_-u9Jt>ngI=.isj'UG_d(%85R+&;(LhgC+5e5n<lu>&C)L)'<TEqIl50k)AA;),'JHF;O*E&>9QpBgf-kQfJ/5/f$<M'4Cq3)CoOWu-rq0W.Ps<ZJl2S]'BhB3%dh"VuW%tX!]`$!Fe4GW<YOEr?pT;"(a1o&qo,n#/L&$[s2eSAqm`t'&'D-i9I>R(XQ[Tac=D=?q7BWh\\lIfFLMbKY.VGtG;9Kj.%.1t'-6n\p1nZ@EV.RIFKW;\)?.Q"Ll]rY?\YGj,Z"OGRJ51+LHcsf!RVp\D`<Rf)XVnOIrmY+S*/bXpF(Xr?Nm0hf93Cf-OktuKK%S'r"fq\'VEZp-EfoD[h+3s$LkS6+-ORa?I</in)UnYsjaN6)R'UCKmaXjC*^%qe57-\q[8D+cif=dAdW%l9/QopY[H.;-4oA+2gM%dr92G#"P^U3=E]]aS@O@>LOm=J@IBIOO=37BEW`dco?asU7dKTVf](:huMH7QU8u3;!p('hd?jcD#r=]5fSXN,EWP.rKYN]4(1.9%#:/X=m-.)EAh>W`'sW$2SDq*cSllm"JN$=B3aKNk@>cnTOS,R$8iU!%%1-MS:O<sd5(u;!qRi^4doBEVn,LIc:cotsm@pppAf<")%r+;O>]I!c.VI=*>)Z7KSF]3n2I:i`P4@MuIN%e?E&P4dE_#XJN3u@r\@156VGrC_l(:sRJ/GSg(QOj30Al5LgZZuGfScD#eVY/%9%[LFJkd%j;W<)ibV;[!bb5D;4u5#1`3Vo0pM08WW)O(*)?r.T`9V[J:&*%<G]Y2PWsW4U%!pWlJi7G!7\Wfne/Gaq1tW2!>1;]s0n%;U2S0'Xfkjq(.7S%[q?KFeiOe98V^tpJ<WD,cQ2,=U:$4/UZ?2r?SChasB"J6N44<FgStV<sV"j4BK^)I]ZGuMs*oJFfqXj#nkc6%^3s<?bd1,5PYKYrQfpJ?T>B:of95@?7*ADpf;dYiNVgf,TCk5I"ZU(gM'f8!W"^L)Ws-;d4h7THc#-:A/bTX&2"0i`!kog1B3K8K%"i,"Zoq>")'s@->LDGEm\@%:Gp0`c\SAlP!M!C)7`*FN^H"e+.LZ51'/_!=W0h&<6XbS\XX[@mGVL5sqAmL&i@sN-.O$Dp=;.68W%reNl('D2iW5G4-+^A8+MMl<^6_pBfX&GB-1Rei2r=b+MF)V!?ujl6)O%h?kE>Aa5u/nJ!urHFE/4[djgApkY7.LVM*h`gS="=5lJ%ZDfnX$Nrk08L>;Oo+MO*/RQX#!6j3T]$#[_-8kGa43#dV[+@s*4(**rP:e;=?i+A,con`MBprl+`]l[6'hV\fj6\;7^@?Po?T#8r%0(5A0#7-t:As<iHX-bT$eC/816dJifI"m[&bBmmF24XM-\Pin=6PPZVHJ\YNI@;E8E::+V*[?.q(XE-NHFf!3k7uZZ;7(=6b`97+%jhP*qo94f3e[eU;P./2KpQK'=L3E@e77(qc-Kun[<@*$7m<,TdNalMXB\],"p2\<3L@n?ug^XX)BPB2DhtXm7b>Mn62-$uXneVTR%b5;gf#JKO!%>j^#+Q*Z5EL9sB@oC/`IJ3BT5&.??cuf4QW%u8G$c)4ffWX9WpeGssA&'dlc%]59#)Z/!";*C!go6#YiO8U[^WNFT%#H8D7\2$8T!>Y^TT[">`dj00k-;e'!ML6egd[61nT^gP*-5#/rAQ5O,$cu?GDBaoc8uA?HL15+-9om1_aqlN$'6V..9]Gjr>5q"S%\1+r4VhVn.AQUPZ0mm`'Ml`JRIplpXd-t*RWW7fqQ(-E,FnVanlnO?ROLFWp`;8Kj&j-nd2[p=S%]JCm[8U+R*;FAYjL!IE:H(lJ%-QS%4[oQE>`iZI+jJ$j.Z\4C)pkRQ?N_I[rkR%RIkFdE3Kmn$BMccCWEgXcHKWORJ3fRgmMJii0ak/)'i2@H\2M%5.P:XPGk/$$s%-%niX,93:kB0q'm(PRihe^"i?UUGsiKTe-b+XOtDd*_!PfuW3/4aL\eAWRPF4)Nb8M%>iXHGVT/ZH-V<W6@!XmN,7E4RoAS7o*:u%BbRt1M(6eF9cD!.VauE-gmi412s1Ia!O>@klU6V_eTq^pb&qhkAbd=+`b.F?.u'C&Jp!K4PChii+2!:G)Q#:NU!q9-AX<#Y>@PK$%1m$$GkXZ>7'#Zmg2-C8XEbro?QA%'d^?UgJ:W5nf!30O)]PTBblAKQ(l7XY$J4CpL'@4%EIFLO!,:M5+D8i`e7FfqSg*`$Jik`+A%#M%eqedRDSq2+%sO?Eq`Z4MnH_%)u]`?BP3d`9(sWK\5Y+V6fB;Qa.Ca(3c=%&/Idcp%jMJY!G*j+\?H8Jj.:Sc*L[ihj"lG["JQ%j'TQo0]V;DQ-%:_9%0EFWAY&,D(8;9O>^*Ogq9gQj5t4Oah>:ne</`b(&Eu@m4(tBbhHm^'>:;7j5,2ab(I0g.:Tie:4;Go6=!f?%8#6jVh,LColb6Q9RgF=)XhICtc<i/99f-/gahSJ`e<E<o>6/l>+s3jDKYfB=njAjGADr2tcDc(88Z7`),$t](!JqPg2l5&a*!\:.%A(GN71U$2GTOGKFCl?#^'XLF1nE/-dc0#_5fOcX1jVq3?XJdXE]H4#S>uK^!#iHDQXim&r,[NA/,\lVl`Kps+Pgm`qksJI4V:HI9%RteN.'-q$JVsaa_e_&0_.&EigY+Rmqbj>:-7@Cj(1G\QBYhiVLFPl3fU2p"Z0^d_%`MEe4ee(8WG9qOtmBsTn=a=C,?Y*9X#8&5$%Lh@YrLWTP1IB%#Omnh`7MuXF#,fL%8QP)QX.E$P)J/X\fd`pc`U)F[m!MoEVJQqEm5l@J/WY4C^65->$$Dp'iWbbLP(fI8T+Chtg%Ln9e5H(Ubq>I^SS(i?"PeDiA1*a<IlnuiVB\"EC.P;U>Xmu.jkl7dHm&n?$))Bnk0RRiMrHW0a$J*g"nIFR?T-hGkS2'/M[WZ7YD%39Zt#?nr0DC0IbAeor>_VAtV*ZqNfbUq'1gA!'*5_/_07>Z@Ijl=^&*LmA/`c=OGQG/9e9dF$g9B`V=22'j9!BCj=RaOHiOfoZ*P%.'b1)qXBS?22\G7e:on\-s:uiBtm)]hp,R;DTs;HFF/'7aF@h<6ZDe^n\aIspAR_'7k)Zt!dX2I%"Kg@s5rA_q7.@/mQeaZR%)e0%iVgRGbFo];/k6a=llpZXY2,1nY=>EN&m*V<LH(H\b1js=G?Y#c^p^%thQb35KLi&I&[5,hq(m[IM'Y7=B8g'8>&?Ab<L)Td`gNds%0P2CsM>%b;>ok3WJ%mJ<dY1J.:_$q!Mhk?X@&c1t?&7KNMqX/AE*VNJD2nRr!mF'h>/ZI'[c%DJ$hg[&d(-#N'ibe9!>LO==lA&4%HibFHLbBM+8!3-p@uOm_,5T`eUk+(M&q1['CU`6k2jX&ZCu1XZK;l.,2jd.jP%3Ng;g,Zr=*f[*m)fjqn?rHsXKX!<Tt#9BkVjKl%rKhq"ba1[?,P\XqC7Ur>[:rZCBB=TDId`Ns:XY2tknLbpkG%^*4Di&9<")MpNpt6:81dFbP&e&MMSqZoVq'%<"\QX<5(gd7JC)rX%&a^?iJ-<ai`t9*5CsPkFH=TknY*Os%]UG.<!`]L\OJ_"#"+-[d-Q0/K'P%=9J7Hor`K;pEaNGkP'QJFt/:%aU4Fq4On^M<<Lh*]0%Z2giMBfD#a#gfifgY!O*S[XPI`Ae`=YXX?I)5O;<iOZ&QTeJg?G23LoL5gSZW_Z!6QAjA4h*XWTZj_+4(2Ap\<9\r(Hl[@tM'AQu%f9#hgEU1/kW<nQ-0\bfJ/lm)rSuVRP?Y;SXnI<f>]9oK20@Bbc-+GHC;Ub\3kQ+7:4dZ1&%51ST6_3@I@@ol!d8=s5n/D-l[.?tI%H+b(FB>31"i<a*m?^b#ZDN+Wq8>>%h7kp6sjl'Ih],4L]'C/n]Ajk^nkYC]8,15=k0B%UEjH(J+2pgq(l#He1e]K)VO1AQhdL:uj%QWoAn*>rXc%N&%VHOj8jM"N6rQCg5qj)Zlo3CAF>'S1mO;lECFi#9Jq:[@<s0J56m+>uZZY6BSgr3V&\D+52(X^6;Hhr3pu0PFVo%[OL0W,2t)&AYaGos,BA@$.%""Y2P]#K)]mfEC&9eWOb(2pQX9e95LR\Nm2DEjth3WKfK^NWPiVICoT4-hH"1B]WK=m*:512B<X;E%R4!>WTs;\n.ZKq,Po;UMW\s5#<buTN?.F[!fi2i2*q9cKZU&WM6CpeU%5<B6n1a6Z<V]`hZ0F'H:Z[iqF5b/0J7::GLX^S)a7*>3%2*>;`K6*'\YUbK3TSY_C@FUL)ZbMSE>"R:!6+o4AMR1I14&?pRQ#>#&po5-RgDhXnL]f!1U(a:7nmp0eI-Y_@d;D[XLGpU2l<n[:%d6lY%ldt!`g><H_WNTea%=DWa%Q15Pml/81gT;/0BPR+PVfY'j5ujl[)kNVcJ#_Fqi;kFD'sG+sfVtpP-[MsR6U$bK:eqfM'&XuL%kG;$5V*f>85*\M=ZjR4k;qi%,cWh7@3Lm)c>!Rf+\FOJJ;M/"Bc!5KN[>o]fT(#)-:`GB8K\iiH_BVE8\Sblf`i>o:N24e;/[sc6%5j!dFLMT^k\uE\NV?;##&A8!fWY\@6\(Y,(_AT*?3n=dXK$%OIluS`,IhF7\C<0(:>0)Z3X)sEcBQqq]Op-j58].P5gQMjd%(d.g%]t6&995dH,8(jbE310S!a\W-$*O>2SZpsk_i/!5.c?H/7l2,B/$E1]p*/,U4:5!2EO`M6J69qY(a\W'c"g`c&S4O1n^PC?oiVrj7%G;_OKj]6PRJp`?D,iD6.%faX:&$//<0T\PH@+atI+@HUCJ]_jtD3s4j2nubFDVU%p'cFiFOt8o!9\)@VjQ>V(=aP"R@p3bM&_`P;%\I5dDMb]064(;P^+SC(+Tm0O:CVYG81'%8lpAd'H2oR7kS.m85g^aWZ&lf?=Rc8;s^%g1Q;P"$AT>f-VTft_K*'^-S"3_P0kYb5m%)G<%EoBR$R@Yq[o5Q(<j[#Z2(djB^1I/^IJ.]tFlqijt&B+,@#)(="(LelGRNUcaDSDIQHj\Y=r]eM[>MspVU\bs,6[K*tOa5/_^%5N"`1cram4&n?2YpSHti6?P]T?FT$Z*SCAj#mfK.X(mk(,g7=V*0=KZbg'%,/p$TQc5q-;q>#,u/#?\7U<F+'r`@W6=gbRN/`hb&%Ma"/1%[&PFms51o>.:q:@O.+*MZ66/_Fejb?pc5%i2&&:d6TA<Pc3>tHiI,:V;jHjLmfh%2ucjbqrc?ta]:fg^g9@SIgC:sNBVj3%3N-UNl"9o+`+D@3,U=[.n9n?75]oqBg?A?'dh[Ap7_cFVF*)2k+[XpfC;ksO(43d\k&S5JZ/7I)5MXmPodq=[5+8=Cglm`t5:MT=%a.oY0O>'!1EdPoMB*Yr$WAVaO]*pb@Q5(.2Bk2)l@Y%/Mj<1r2f2'jB,F5QS9<)%+o;l"$_;8b`]V!6#"&"g?9O:eYF@[!3Nb`'T%Un-Bp1brTj`"G)"L,%1J(TB@4'B+nt*5gji+XM^thGtiMjQrB`FKtJX+qP*6X6o'54p/=#*_$ZN&D'ChWa?SfJcT@=WPEq,E;lTt%D7`+cm&U44pRMinlVp>mr69G7,N6LX/J%to0c[hg*,PPu=BM9HjB02?TN%9@XnN@+@LjhaW-JQ^T7^e.WX*?*Y\L`s$_4BV<WV-)%2&M20;3r>3@YjZDFfD28j:7H5l@H\TUpV&8(:)%U,.,Kj\a0Kl:W707<>fqi\"EHuB'E4B]6b@LRnJb/c)*ekS+C>LONe[)aa8+*%.OFH9kO^5i>X!haL^(K<QjNQjA`%\;FAAK+EcCXi5BHR4)?lH_:Kj-UM"3c02*.5!$fWt\j\b#6:Qm1YDD[)9(C[YbWZ_DoPg5mG%/][&e-"alKY6POcq:DE(^1kY*3JOCN!2knDq#T7N:kbQHo-T=eU4"l\\I_FajG%*U=BC=]j6$5'Wr2]nm\@B)Gd_=X=HVH+e.Eib%L97\`Zgmo?NWYD2`">^'Th89"0$^5so;bhlO7PmrTuV>^2^%7>MOn=.4fjKTeO2brH=UUL)k/@_25<.'$H4G>#c;DlQE[q1[F.eQ%<@W*tEV1hX1`n+q-%PMrOH`<-)mD`<,84$ce&ESjdWDkX"F`=MP/,iCeM.*D-ZgYIRM':>Ntbk)m[fkSi7:T(5paKP[95j#aaCmg%Ji8U`1TM9?YJ=t3:a1eg3Hc^W6qoq,KjYF$#L"N;'q@bpgn5$MCJs<A$HP>ee"Ck.4]+=E'IqI:>3VnTO2FqF\"pTKL5&TQN('\o%*[%')N;fRG:r/)kGC"pB<Q3((bN@*1kuccQ=E%-^/CkPuHGiZ$H&`JmFg)RuQA6:tZ=;^2O@0fI$5q3Q[-I6S4lU<PHRb\s'9'hK%qNOjaO@dk%<[X>eJlF-6Bqh=/`@Q%q<$WL/eD$uFM-ab<GN2ea/bA:2WgGBbKX4\",68CELI-:fpHOKi?1$Xm*&Z7Yc1QXrC^N_u%5Da5k%[#mgD4+*:.F^#9`UG%4XTh9='QT`29c5G!puql.DBJ9]L0f(A^W8=%@p"r!Oi'f16Le[8]TK6X,f6Y2Q*7u/`TjV0PZiZZ%<q;VK+G=I,d83-Y=A7&Ji40>(FnGm/Aep,><`_EO"1(WVEd3OH4nXt'D=O;tU-q5uq'pJ<="T^2_c5FT$=U.##SG:<">I5-iBf>V%4=?`fjjF1c,TInKd8D2^q2f?YgJ]dZ"KidH;)OuQ7(&#RS-cUaUKF$j4\S$p(WOlBSN$S&0pP";0.8:hT`W%O5kXBB6mdCONuT`r%qlR(S]2(9V8CQcD8:>C6)\pM@n@j3p'!R2FHopO';\Dkk0EmHC_%F)eU6X"kXNPjdU7SBFEW.T8O1]PK=+-:s]u9b*)k$7[-&ElJ%_^l67U8ql8W.$n/0+AsoB,,)-@UH6`\aY+XrUs9q^1<trlYRX*miuNH$mI/iSQe\E_g,@pDj%im+PJ\;%&I'S/;^D"f6+@j6?I;/%41BRuZX@;bDtOLq,u^h;c.\V[\te?a/1aa((HIYtepuTdUFseLNGB,uLs/^4;c4NV*o>]@<LS[,+!61"5C0k:U>9jSba('`>\Ojg%>_iJ*-(5o'dd&0<*-'u7IQ;@EW)Mg6hWaL7:h;A#8NW:'&5`4B3n=Ub!du_`8"W?&E7nSIe;7qtQ-rQ)\$u44-$mD@aXN7j6SPGr%&m'`7KJ#ul9Dd2)VKC]u<jAW+aV$Jf'^L2ah1N=d-0VS3])6+\a7C.0b"[U?%1OWt_TZ@&Q_$>Z`&)D[--t'+A*.0mSU0_qh.Qa3%(\ToGJ*6K0<.4@i"RYZjU?giW?Lle=X06gC/UighGa/IpRp`3@?D]0C(MMsqQP"+th$bckr5:7G%N+i(ke'Y'i>35ZQ3c/;Jt7bf%f<[c;1l'MZeST!ml?QR,o0%#ar,O^a^"XO?o60i8Dr/eDN]1nOD"uP)]_;mp;gE)i[*L61cq9]"LQoW-=?k2AV?KOcFLa=]"U[!M%j7BX*`@*G7Ha"%bP1PdV<41VNA&S[$XCJA?nh:[@-&B5e+PQb%En5>,h]%I\b$?28(gYV,MH0Ul_Vm7*QjCVVQEe>I[EK2'FO/jO%6,U&Y"#TpU\q],k`G#nZ\7:ieZNum&Q]HLgV'3J=1N/s>LDgamNDf#Om*#Ys\[k[VYU#Ur3.Y2J(Cr!!dL:]?,#UGY/9SK*OP7*_%ib#5RX!I_:MGk(NZGP-0).\]=9R1]I5eA!LN;mTgo=LM.<3_VXep3jnqa?'P/"R64!a.Z4E@%&ElkpMR+:q,l->MZ(W$)SH^t,@D%375\u,ii#%g^t_\T1q&7N."ch\9:f8babpe9N:EJMN_a5p&rO*`BB>=87YYt%*R?=X1M8NUZ%f56>Zk;K?X3@MhqFlU.%?VCY]c&%"0e;<eK4R]2ru99#Sh><C[5hS";>'MUoBad(plX6j]F3saO3D&e;JB4N6N9!a"]S;nX1'c:m!aZj_31iNE08n)Bq(7O==K8Nj#I'%R#`ELmK.KSHdErNq5SQ-+`A3b+5gE#.#D(p+X<pZHX1;F7Uf;M,5l,m>`%!9X*U^A:UFS=,*4B%!>W(q2,q,JHl*Esq$MtO(`]m#%72;#R"6s!5RY5<(!c[/i4YfFQFF+rb7k@KXAO"p'-("\=6?aX1;<X%n`[r=!?%]Td^!<iZT'#VaH;r^,QJlo\fmL&"h>b,j29[$O%@M2<rD]o<H#AAEa0G%t<Np/61Wu_VpUqX&DID1JK93er$0sNu1QR%B'Mb$D)C1#"D/#7A>XH,$blofUu=Lfs0hLh:QNU#/]C@%TV%\T[t"8$_<CHa<V3k=t3<1!lM>cZe32E*!hCanUJ_DFqABEDOlPC&QQPD_;HGRM`oAnBZT."d#0=?3\I8W][1*3DHB@O,T3+*%-4]%Edp(.%ppk&0tjcB':iB)lusY&4s/t22N`36K.[oP5SD/7EWAa)FF<[,OSVV3FK/*jVL#PslG$Ha)6AN9e=&l3+!ND+7`(j.e-<u=%H0SrRZ+f3J-[_#tr3m@<Q0<"XW_S/Lb*9,uk%eTfJ?%04og61j!tM[r5ZrmLqd)_^N![^2:)+JC.Anlui1H>?MF#2r1'a;(VNVkl%d1S"[PWItS1Nbj?cp64nk0mG5MJatf"AYMih4),'Z#+WJ`RQ2l:ic\6"/SDBd3Ac?'K4C^;LHp1_DpWm=.VkfU+,G,K8O0ZQ8R+?%;OW_+A;64-&N66%RSn/o@&*2?>m5YQdFO*dGf,GbN[\hDNQt(hq8<;c-[S7_gQ0KY;WHe.hD&X[@Y<W]JO#08,la[;M#+ba;$m3.%/dlriR=O%=b&WKgSgj%a[%O!jp?:U^e#"u$Q_[Q&V+nTB+)&0/qE3oAetbXm-&](:Et221>o/ZcObI+NYUH0;J3+lCg0iuOKeO%C%:=n[X)Hru?4^S-shJkD'k@Ua:5r"fh,,l?u7?M7V0rFFHSQ(q8JVrG-qPo^F!qk@^bp?Z6kr/)NS,[QCPSs"Uh]RuXj&m[E%#IIU%,N3U2BqN=g!pER,D.Rn0K0es\j^FZH35Bh4dCK*Z4q2Rf-tir##![XGZ;!D5-Ql<;iXrSEmq\PqV.BW@QK4N3<tVaD:4eiR9=;,'%EKjL##ibh)Hr/nf*+t`JAt1/*XpRReH_pZ,Ci1i\e09VLa,]2ma5or;D%eK>g9J8eN/r1sWg\?=`FJ2HPXJU*ccYG4N,kF1c">3]%ZlthdX+Ea`k;o3j[Ps#eL0RE@Z;#[)6/b29+1@2m4%ITJQhK1I;eZtbm@6gVIbm5UVL>^l2UPuRlZAl'f?X3ajla;jlH@MCB@M=e%hC1lpl+M.Q0#la>-%P./=XErcla.;)FmH]/d^jX3YsW]\XG'I-41-&1ffQZJKt;JKXW$B)ZccphS#7&=n"*mRs4\n<^?tV3B#f/f%'_B:jkEp$'pJ*Jj>+9/m"_@'YZX@[BB@!>oA\='[%;&[c<?m%Kfp'r9@l%^%M6ghQ.!$t)Z2sX?cUJE=.=M,9297p)9KNeJWWrP0%U2i!f%Ssq[H;pd*0J;Y]4&Cu4iJ5V4SqaD>H8S6"B)$R:<if(&DODaW=b#^Y=bX:E:+-\0:l?`Ja6FK6K<SA@X+p-.G9Vd#lXmrA%m`b-Z$$'qj(uAO$?b<iW:5<[=_uct,/Hnr,?4<#0mk)S<*FsKO9<%giHp5NID$4s0rr%-Z4g,u!_'gK2G+*VS$3K`XT+Xticrp[n%>Um7c*lKY'`\eYIE7!.U6Ti1'UdA)Vqe/oM*q#dAd4Q$Y1](XbM$nO$HqbYP;fSam^ZRTZQJ()hU2U0CT/)@3BIb*f%!)4.X,]"1%F,1_"j`eGi&,;N9C2ZHY^MM?/6_a;p-_O4>!aO8`\2Hp6qNJL!7I5s],3VELD=CB"ZQ$r<TkKSa3o"=5R59E3Z:qm1gq,UM4[`mN%?%//UZ.!$6cr=Z(lcUEhetUMfa!e0iS2c3Y0`oZLMX3Z_Xa42X9k[/O<7Kr.ho+bR2,\\mQ&hPF8lX<*1!u^mh5iRmpb.c@'Z`_)%J2m9k1sZFqBHeK$%`;FN&AA\aIM2jR4B$"N,;hH("f+iM1<0*V$4\gEd$ts/&U,?lL='FCIAMJLKeQ(mkS/8J0lRJ5L2&*^q7I,!%.fJYTjJUo.FIL;9Pt'c80E*gl;OFqs@OTHGXMJ?Hkb`.I]2jN`G]P+,B-.uo]g))<>`a=Q<B/Yh?]<JaeDJ`V](;[n^$"HdlDVS]%Bnbu2lV6*lSjYBI/(:BDfp$7$rh`qYWHLq?VfT<rgX?bjPAV-5D996oiO:)fg#,RB2j<6mP[fF9auO21D+T5>GY#S4nSjoI<)2M9%#g8e03!ZFl]EBGla@/-/0(<hIhdE<XJDb"tlN\FlZ#eEN,PGS%"sgu>EK3`;3,CNZrMhN.(QHX=7EXB\pMnas4'BN>mPY1urVYsu%r&lqEgGu!d!^W5e^H-*Ik6TCccMY3ML6r3f9HnH&oAQ7?B.jZF2B3I)&-VN`IDL^]aZLEe*U.m$B22N"Td6BE&_$1p*7Q7(!3_Pp%/F9nkn2/LoWXqp'dtPltbpV`@e6h2jU9C%58:1?:9YS[pl-Msa[%0(KSg$.2QQZ\SgYlm4"/-+)j]C(cC/__dH@uGq@dJo:#V9HW%!2\%?CF[T?N$r*[\,>Mmh6eKa&)c9C8Q+YPK^>TdbWo+O+pFPSHdl!=R6"94S=f'(2.RId\"\-D*T!\P(To$2C5NWLD:Z;`0*pK:%,M_s,3VTD2_C!=dr@@!On,f_I[Y6(l"6@:.DIe^&/T;q%doT>skKQ"t3_-s>e'Fmd;j^5h38Ee$CdWN,Bu<#P:J"VpM?P[g.]u`(%^g,SZ'4&R:qRQUnW=H:![rs&EiPN]\OX2jeH'/i!*$GenT03'IrKH!$oJ5E8^+1(6E#g1d<cAbKUoXG<1m=g,BicbYZ>'HljpNYo%bO'&"W_l@"D#^fTo1ES9G;H5c\5in3bkaYELn@c@Zrb!UCPs8O73pF-oZ'LC!e?GbL"%cQnmdes3q&lQ[TDY@3Q.ciPfK]ZdAjl5%2-;(uY1gg;W@s@VMdSTU>ZckCdjPIS93'"L?d]O2"S>er:@20ShThcM>SG@giRGO%l7f_hB\]Hpm[Pf.'unP@U3QUefeVrXXj]`4%bko^&?++gkL_YC)N)B"Nl]fe^46MR:EpKOKEbq7'ZA!Kt)l8(nc5T&n2GY=A,OV*_\/X2#c5G3i3Hr]\\TRJq^"PMom'(>u4q>O"%SNf$lpJ.BH!8';ar4RHT&D(fj6[!W2:EhFJ5)ZpqpG?&FLTU137H!a-m8A2l\Sd!+!Z=buiWV>8<e0[i^-ej+W=MDY73ulhG7ACh%7eWu/94A.L5o4UW3?rnBa[J.K_`\43QkE6G>s"2;o)1"d-GL)@*,Ck;o7"--;?T@tgTJ]S8GTQV5E<6u4u+8DDEX3%M^tTs2161&%ZFc*QIeEg/H6%'B':$jY$gS9.8188EKS]O5E[egNluH]5Bf,1V7Qff=2sMZ.<jkpI*n=E1m?T3=RTm"+%8=I&=2#)p'K2iO*2^'<%@W/W0RP^+rQNX(M<>kVMQrp_m]_WYfmmFjJMeht1lJEF<pB8FWp\c;q!7RO$3'Xhp-8s<G"N?\^Ni34GYU(i8,-`FH_>nBZN7"Vo%,4e,+eJEmr?uVqX#D"*)hK<5&<KjO)N7+=qU+qDW<"\fg=f446.)g/7&tDSF2!V^YhTYNQT;a@)*1>.&6WX`eUC.'eDW.:_.2N+B%=`Hq%hoV/]kA*=,mWQh'=qXCg_Q3a:(s=@cpWkO?DnkoB"DcIM,e.tFgNA>+.%Eh`J`X_12,/RuZN'FW:Z@ol%8GF?:u+fEMjO6p%JmjD<'0Jr8;lK+WpLA5$`4h<,P:59jCl`HdpQqNH(OQrsDCrEPn@'2328Yon:$N6lf%qc%IhVB@.L0^1r4Eo)o3I!c9<h=('7#<r%>4uK)lN%pbG4Q_f,SblD@A5s;(P2oqG]?T6W0;$6UWB/AOX'i"WLp"dXG5)<"MBf'eq2sk$3U:SM#,f9g\Olj9)un'aG[N=Vj.Ek%\c'='%3D$4LAGa>>_.@f_"?YYdlCME_UBONmPulm`*pDA+Ki#Un_LG4iS5c,:Y4R,ZO;4<8ugc:T/[S)4C6q$Aa7Q-H['2&^\kaT%f^lW->OF./s+U],Psb(YoD.G&rE^ZCS'i_a<o1$AYYkUDTL=.<r;oLMePj;:eW%Fu!M7?bh&MO.0Q.R8Wg8tnY_l-cI(sBYI/ASJ%B>lMKC/h[g1AqoJ0Sh?[`O%%ge:@JE?m&=R0pj(O_1luOG[<d?>#DZW[*X_J75F,fBjcY;Q8gVoSU#e)G'LNuI(j.`O>:1(m[3*N%,Ma7+r]&Y`1ZW`;4DUa82j'!.J^3nt=1+A,H3eC'Cl#)paHlVLTr8nt/c!gT,MB`2eDVm3U2CfZ<I<u7'7"%NX],qG7\hTfUV<tc%XAo(>%CI791b"1&nd2:RgB\"MUKhC[BXuOpo*`)U1PTbMIOsVtaqW^\JR`\I*<tc!<aAlZm?0"=hA+A6>MBrBgl>BmVqltKH.\c+%EJJeT0K"k8Y9BSm)4LE!>lDf'W6BDUT-Wb@XH[b2PR/o=r)]/,lAo]>fT!(h34"IW*M5Q\o<[qVZ5TKNYKU\*?=9*A_Gqbpie,Os%C*eA_96[h2S[oW5E!tIn:[_m$A`r`tU-HF1^HW\'`c=ZHQ[G[PnQB7!>Z=;XOR$55'X)ukYLOK[l=O*BIcRjISqb*s;#bX8koC4\%[&YRG6f+^+c(9CYo_t2h^&1Rn(XVWk3hCcse'RpT+R`4Ar_CVMK-QpgT3dOH%fZ)^,e%-1qUN[_)HT;hb<FbHnjuVQ]__8u2gbDW%jn18cHh!)CpmWL#cTtX"!i[j:Kf&.?%G&65rcXq^LbVflYGct4:_C\d_pQP;!/U50i[-@;(0-e+ntmV^&:V.k[rnr1.ba-7%tV=W%_!$Y@&AiD,'ud!=Bb`^OX:p]jDun<VCL\ko&/77'e3OQZ3#.hEmX470fM(J%hVUdiF^8^/B0JJk2kplPm*2M>iL@0r95i/BX,Noo%T@^-*`Q;dskc:!HYTpbi9R"R,cI8:H<Mpglo3Tu7D(#a)%e@("E+p\==0^\/ACVi,YB?J7FO6bre?^WEn$]_So_g7Q-?8%l(&ft1%[.TU)Jo$T_&[(E=<)(W'k&8ngmEBLmF(]lLnR4YDc*u^iYBm:_S2rN0fpY#<BQ$T%]P_Kd<F#1q.=>,(h`c`q@e`o1rE`)*&d"g\%r^-9Wq6!#]9*ZbA_2W8B2oqa#5dk3`X`+Pl^D\u"03G`0$s(ZIGVVp3[ushI$KJeZ\9.]#?netSY`6l_c;ZMDqatFAo:]hgh<5nk%"KJK>'W$f[)KB5p`CDs@DtgkgnYna7AjW6\G&m%GW/(,EPVDb'UiQ#![.;f&'Dneg^O9RpY^GuT4%WE-Sm<qNXSE?X._,ti7aoH-%+H^l=,P2NbJs\mK^+edgf&CX,Z6Gun=<(u20W4.H?]R`,kL9^`pJuNFV;":]#KHBoE8,R-1LNu&D,8b0hhg[;eiLU^MtphN=0B2O%X/fYYW`gAt:4&>6;4^CReXTMI6A>3kXT49n==kE\!rH,@Wap\8kUA0X3'R^BEmPu?O@TLml@p`P;c1dbg=)0ck0"60-6r]W@U(<"%+WH3;d[`(ZR^"smE@*ZSRE.*&5qK<eZrNRCS/-CaJ?Nn7N8O24"6c>@#l1\N-XV>ZPnXs-m`:9[?$k#jjl]op=]I=`'&s\YQHZ:r%Gsc=QdlHlYROapBIOfklW,mgJ!U1)$Z+C5E00*9s!RXFF]8T0o2D-j^PionQ-pe97[8j!O+ePISg)+U'jQs>V9B.Md;KjL&2.?5:%2G.#*R\7[0XM/WXP4B6g7RWc/9"k5OPe2C)Vum8BbbDO.Y_4Ts%N/U=EN6j/W4;+M@40L\Q$S#h8#;6g=H=[[r^mdsJ8HfR<B[=M%P&*`lr9G>JKOD*eH_%pODPXAG$Y(C32-#3-H*LU$8gM(^E\nI9=#u(!=HXohM[g`_OOSlCAe3`,'Ff[Q6H55bL"*glGt;_E.^hdh%!&n1F:@ScIQGUot6]l[g"i.'QbLSjo4j!AR,/I>(R\F]"J3.#<(9D9W=KE-Kgi9'+%TogB%oWrS2FE77@tF"t1!BN$kf&"*%ERug%;E`.#kdUdjoRpJfp-uQ!U&aV<^R-^a2Lqg_\$gf$p=:Qe:&`ErQl#1,"P;]&C^'?smVIW'iSJb)qX/2+Er^#o$!3"%D@.b2p9o\4%H>d<+^cJ9.O0,In_^_OJ'C]9.Y$1Jfdr(TA5lBtLhZ@%J\KMc?6W6->[EbZ!(I=G+n"mUY7jN,U@Ws[o=4Z2e"Ybme<Du&e@19_/%&lPP9^bT1F^bmb;h5\X`^C%O55(+W4-`^&<7jJ>^g8d>=b\"sM(5H'%.]T)lCH/cKn')qLlj'#33+qPiWOntr;-c,Ld)]<EC)0+u%eRmBC!'#Rm!bQG$!WpffAHV#hQ&`YA;5b>_#^+;*O9nm(M%oRB<3G:'boX5o5!$q=ao["&@tCQrio`B2qE#P0GK%R!]M64Fgi@b9%A!Fp'n/0Q\,sDNelj8b8H>\V%/+L'$a<VgR@eB1+naW)!l:O#+7`nRb3R3>cOiPuplW9:7[lp@K+,MB@mW*"Bn0of=TqFG6(1<uX%LeJ>dGlaNf[G=9WEq2qX,%la""F<Fi;DiS1A@BnH1<&"Ad>?DLCP\3/Io$/R'^0]:3mA.:/GUXEh?3GU5usF'O)uF%dHc[mf@BH@%Urg1_@)TF\,U=Z_S?8Kgo2dLGVp,#^"m=P>a]ZrYcf@M(-WNoI%Nkm6g"[n'@@5<+BVl=;2.Y7oHB)'Z^IW,N4(39NMr6/ng#N:O%qFkk6(lMe^%-mQ'?nGPB$6t]6:iHcl7C0/"4CYlVBuq#O7uM"U='S!6Tj'R+5OLfJ*%Rs4>Rb[e3IBmNrJj^D]Qq<m,#4NnY)':R%*otS\XstOH"#RYS\fk>%B^K9TGLNGRh^==g=Rla6QQADA.-i4)WGUEsAG]sLg_+thfd:'ThVT_d]=h2[UWD;(iSq!,im6H80P7Y>%pQfgBK?[-N6g\L?pq5>83+hg=gH%euDf-UKhVCA.=i/_o>3tEV>Ngd#rA%i0mn`u\6:Us7VKL3m8X]#!)6^1dON?,L:DpAb'fM&Z%,[6ZE'_CpE)n@;!?feS^JBad0<o%E-*<Tg%*@>i5D7epA_6UVoRAgsPXn>+*5Hf`>?Ar(t2]8d"XB'7SlSoY/9-1.9j;^d57s25T%""7)55]gE"!8U9TY4S2Nd<.m!.HYKRL&tVt>Y3&)Is%+l^@\l/iYuicjkpW[PGlNI?R:815LgTP1GlgsHdjlCATU*MHK2Qm'bqsL%<hg=">:mmqNM&:f<)6l#C+=@?4UcIBaIuE_*N":g74nA)fBQaE)4D>4L7g@cW\,$MEl0#ZMENX/<6isWl'jd$(VPYU**HnLNO9<M%M#&-'??87ZoZ^9NNGPDIqWjYF'/T-_U,Js\Y9jC3I1$KPc#CR3%HUM9<9V+cbKrY-1uGtnd>-t1_n`BHF'S5b2EFB'eYl%m.mr4D%X"2Cad)Bn$oe7LZ$5MN>('9.(<+C/$K#d]c@os.3G7QT)84dZY/9^GA,iWbLQa@!)g&Y2NY?L4r+Bn^t,R)kA!>Qh?iT?Ej5W6B`%T046/l`Q[I%39$J\t[Jb=gC[4>8*\bYV_/(oLuZY.!Y/IG>f1C3?ME!lrG[aC19E:&XKiIp\7SG1.0o3\Kk*D\+/6eS#UU>5JaPJ%#0^rq3X9A$3JB.[)f&#>l<^igQ."4r9`Lff>sAfVF2kPZZ(/0'PNDbZN^AGUL2X6#$=oR#N-$p7<$n0P^IJ#up%LaeC8)Fic-EU9%!9+'Mi)aWqW*ZCCi%[H0riW>'&]e_J9[EM[pd<-Arl:jL2,BEfK08`A%3@sA/<G>+\leA9Rk#TE_0hDm1rYc&<:O'0/?K89_XHDh%9Yj)J"5M;2mr!9gNY6]3?<hRuh`jh`kin>7aM"qO<[@$?HCmF$d9V`A[C>-s@XZ"4[h!7r-R;@M((&YCo2l%lTITCWEn/!/E"YaN%d]BR"eaXlid!7@qD52TpF2,I_]=U[:'(t?T?=c1%!.n28,H<1+CMO\&l(u=fs6>M0><59^[<M'5GA3gQK=]SlT=$F:kBBcYe\,J)%0rsML#E-u2"6D_]$fifq;,aY%(ZsM`hqt9fh)o#"P72qm\Gte(GH:l4q1"EbApX)OD'Eu-9+8A>GO&N$QoheS].@#1+X"K]%_73]%Vt76.VP'e)lk,YWCp1BbK28!IZ@76=XLr?<<*-R'qtT#lDs>.:k"a1u4iX'Z2(R'*AkFG*NqY!sZ5I6/@0I5IA4YgPb9Vfq6606j%kgMgUnMF,*q/<iYWDnPPL9a)4*!NXNC.Kige;AQmaLYmM,alW^q6Z]IZRMs<&=`dmgFuISm;iatFS>L/ODn5b%CEgY^VID.9R2Z"%1fD-m'6L=4@s_0X2pp:Jq7H'D`W`gU4&YOEPIk5H%rA'hUk.=?dc5$C,'T\*b;_TT2)/JcN9?]+I4[SZ5T4(bIrFZJr=j1[]8R/:%0-h?P0-ra>]8QLHkPaKFNjucq4Eu3E?`aiba-'d)^Yo5h/^)Q.l80EC!31rm:F<BiV@)5m7:jij1<Ugc&MjVtCQ,9pA;3RZ*E:j]%W"8r,Ha5QcWG-#)#NjL=W2`&qD--06\(8J,MT`f!ZrCneS_$ia$r_.G[24JeQjG[?`Q-+NbO(De?E%tVo;020@eJ#oJm.!$;+oa-%S0E*fZc]]1oD7u2ehaj5J/8!XYUZMGJ\\:LT>$/j:f/c-LQRT-;\p8b?5-gE'I5LWjuBQtZn78P-;lJ_8t;B+7ZT,f92*9$49Pu%%)#7<e/2sJemKG*(5m7A$=ec9IX6f[7Slph(>c"Og]jA1Fku/>p[m1k6M2f21VW.;C/N,3:Hs7egC*).qNUeW<QE7d"RGm\9NL*//%ac,;'gDL2d%1_I#q%-!A*/ZSKc_'[MmZ07t05pJdXu=D82.UrY'tJR1*SFiT.lf9>?;%HW>tnXOHTb`nS8V`[Vp1XM'4PAkd[=e5%4P#9mM,>MS$R]]oT8`a$5VP#%_3=s?<t2'sUKb#Q;H2D_66\JP's?i[ljK9/EA$6"%8eQ_F`D?"\6&9[!e6G*qrN,8Fso0I)%(hL%>%@Dc"l*S39E,;SoVaa3$2TMD.?mnoZQDYhKdnnAC6GJK.`R)mPX>7bn`;Z:gM*mp;i*FbFY*6,['8i4daF$4E0cd4ZE?epjELf1%:aJC@;Ej!+VVgDb]=/UcD_K/DG^i$A`VW<FPID?^Dr+fdO$3nL*PXJX?Edc#(Z[P#^Rr+hjf.,OnN-uD8UZ:Z78b_d"*F!5LK)WU%CmAVu<Pc/q[&B6n=!e>A+J_up`t<=nH[Odm$b_5s=$qsmnM;m_/Q@<0=QtNM$K.g*T;!j5HMLi@kD.=4NjVl$ng7d>(f(LkA)8S!%Zs2f*Y&FTT7_.X"f-*/@-]b[m&(R%UAk`S21l@&X>@)To3tFD%f_VKR:sQX32"l=+@"U*D+tiPAjYcRb5rDBGFl`ls3i5eH:60Z'%ST/)nNA@>YKto=AFh=Y,1WO\USuo92oPD\;`TP@tbO;3M:B3@<[m^:6YUouA\G*pl0A[ItkP<HZhoFt^8>A+l$P4WnXf4#^(aWr_%Z'APZM\[>:?9Egu1m(3M292C!14sHRhI*\-0IePgYKPV?#OX>3=]^4MD<dEj7/n]5R+A#&<Q+s`lLQFOFQoqP`k2`9IMCmf<S#Q[%:-$k:U$,949d]?(W^Bos?4@Yu``V\MXIk@6]e@eENPltIL*BYm75QeTGn-3f&it7^bkJh-\\H1!IW#N1hH`OPh-EK4ipDH,Vm*Xp%50C>Mdn4+k3Bu:BcL!R!P:8)onOaIJYf!uGYu6pG%oY?7-Mh,QasJmXH-8NTqN>VN8LC^#@7Pt2$uLGi]^FXXlsj19<@_ot*sZ4?%0(%rp,,bV&"7F]C=UE24?V$6"nZIUUl7:M_VU,gFEQW5*d_*.mVF]Y=1I%h-b]OGa%uHU)Zrh!o4Nt/k=%%m\A`^1e&\1$(f3p_7%?l[8e2L9Zu[MTO=^HO.1*4k.%\=p\DP[NVZe;5XJ[+lF.W3#)0r'Qg:eZ,dg,D*V#7Hpi&9\%PDbaGAH:lV?7<J2QaJcVj78>q=q%4PBDW=)O8/;SC8%<Xr3X/U'kWYU5559SQ4"(Ll'`C`<(8(g`]l0_?M!9j6Qcb%ArC\=a7eZnTO23.-'&15o$q08/+V$0=-@@A*t2%Hc2"En=9FuF'>"d],3^,E%lJQh16NOU)2H.o7<P&XQ],Hf^Hr,*8[$P00fI@g#:q-l'W?+b0TVgG9dI+G[#p4GZTc=4E&Bia.FdQ%.>lS!HuDrW=dL-@C1_Q*5%T5dR`6ik1%OiZ4#AKmq7?j;E[tOA1^J+L$"lXSr.*FfkuYB!\R9AD2A(AA$@kMA!,.I&Jh2c:+`jWQ%A!JdN9K8@cZ[<\u!K*f98d@?/i\8)AH(J'Z"gul##/D6B/r20h:V`B4kGA:+Ln*0ZdKAtAU@;Y=`mk\8)*4cA&Z70)ODLX(S"Xf,%HD68"R&%$\G\-D30UWCoN^[]&B7>=@ATD](4hS7a[LtN#P)Hg$'(9jf2>Q=hp%3?CY3<o]Mu$F6fgl-*Z,Ha1"9_M!ZY#JgWPF9@%?3nhcY0>4<<aLM]9*295U6ig'LD6fi1Tii@)iKiK`^1`Niea)VZ_eW]TS.rnXX`NWQmH?gNgER/G$(s/_]W"5GaG@H?ZkKr)Cm7e%!_]lg-M!j<N@WYHQ<KYX%dq<g+uLo&L(LLWbar6:/lg(]%4.dkVYEjNhghlp&k!2.bCR;9)F-oC([L?uOQUqi\C`eiKdJ&f,*:eH%kW"Di'&:_"n$0^t/0\`ZmP6i-]"*o-]Y0Q"T%f1F`S8SHT"MJ(++J+!4B(2t3[7WF4/qYH<+5j_qQ<+#[8rf.30C(r7[7m>>o&rO%Y-M3M)Ti3?Bb<@dKo@1m@&#=VF@-bqA>SesH<l&V6US!SA10?d@MNuI<2IN!0oOYHg4TeH##V^!5?W9l?o33FdlGcpB;6=q:p*mR%263j"<@BOUFRuKH_cFB2TcW'\;K+G(P=j>8HWk^\m>:ddOjEKS?8B2\*bd\+e45[<+ND?..n(gbN7W"]LK2aTc%VSN`6kh^g=`!t%+>Vb6QbdB%0\peYZ<(#H,_jb*Cp.4a;pog/JnS,8.\q@#<@Au].s:i!>=5W`d>2NI5d/F^8P9p1.M3thM7V:G_VP%1haOL4bb^*h%AeUThRnk9Xp1>!Mg$YAZ]KBONrjR1d.m;=;\^n-NY2A?$\-Gc'dJbr)Fb5VETuu"?PW;G/S$R@b1feapLkIHJ`u/J_!"279-.!2,%@9FU!2utn$.r,Fq]rT*cK<!?(r4;M)$"#f4L=4GZGcZ5T7tGPZ/0V+;*QfsgW'<OPd-HJ]-qPRf;G:)6IYQ-Fj^&ALKE0lV'WY(!%)gpl6O^s5#!jrm4@a\7&WDbW/R9Wj:^*rS+"4?T"ROJK)PPnG4LRPI?H-J171Bs*OKIStl0SYWrc0Ur:dQ"Pn':=UH6tML!fBKIe%XDhf@J!Z,0*P&H8ZRInfDg#])?FqjR>eDRO]_&W8/N[uKL.Ff#8Wba3HZJcK*bP;oJ-7?X]C6kZpbi7GW94e`K-g.iZjMbl_GLC8%A0*L0jBr217n([n:B_d`GbdmBAaLR]YR<]db)*/]\kD:t&i)q1+ca:L!dYNlp?j1m]+Tg=Le@bq.:W)E]BHRt6`SW]R^m2%+@C@[%!<HHHXXUn<_\<>5<\5:<ZuPkA^(#JU79MTe09smuO:F_gR2Eh/WG0C)JBg0nV8oT,Iem?RB8m_?E%4:f0=jPK;$pl2(j)RO_B[PY%2B'Vn#??)\J[a[=<EU8q<9hWj;HC&b#>=pkD1)TVG8\n:("?2M.]jq9U?YL.@Mo*%ZUdrG8VO7jTPY5(b)<]3,G+PVPkJ4QLJlC?%k&):O=>'K7Fbltk!CgJb1!<rB$hJS(90A)K(n0Q"8CiOF=_d4gLZCj7^aLi&!WpERC+<5`)&3QQX*/;3M@GY;V;$VNR5KfrcB)10%(m5\-H,&;2kD1W*e/IU--F4d-rdieRih>Ki5C4!ac)')NU'7Jh<fh/6Ba:$<hc,RA&h;UDO$O5br(QdW`:_C)=AhU*c7L*&4"]it%L$E>(=Q:X,b9K16FEDLKl]iNQ^/0^`*;XtWM>ZoWs)Lo]&;8]e1sWGoko-_\ei$dGX`&UJD/(%4ns_[qMmp*S9nZ6S_isP&T(?a+%F:T1+C*,+FT)N0c[l"^5DsJP+7CKRb95jOrOQ.C/R`Nh2d7&HL[Pk^tCju3P!eqG^`U;T=`I]hPXIUO4gNSY%%4N"m0FTMNS/ta1%0g!)&&pL7L(;uWTCk/$U2M,u[WBV,VVn-RpV..NBg2+bkC]Y/gD8BHHJ6a?DMfl,ZPQG%T3L@r7^E_B-3ao[aBjQJeG?^8gDkMdJ%c"I"s0$p0"o]XkB>.a1H-d$:M7X=+O3W8_d7_"IjaF!GI6$"0u)8;$>-X2*>H'KLPK-dkV'us[$]+_RjVe[S9971+B"=$$ok%@*s%NG=U0%l#k]IeW-(=a2VC"3opRpl`ce6D#<oAhBJg_'CFk+qTHZ"BuPKKG@Bf+:!DsW`jkEB"^&0H_pd9`?dC/f`FF/)\Z5mKleah%Grg9e[Aq%G.Uh9ad#PD$J38\RirP;SBbqL@MHHW'=)%sG,oM=>S$BJW@nquLKP'>js/M><]1[k+LPYHEHMs2f+c(A5..#B"M?Pon%[U?=d[RJ+/Rn_iq,(!6N>ZJ9_+O12(77=d@58KECf-A?/iJ=I@"JEu.VIC5DkPt+!&+J0crZTKS=]JoeTest56`aM:a&t66n2SR6%@CQD&3NIqb<?9YZ-FWI0?KnTu?NaGVKFCRa05!+X3"As`GK]brIQ-`=)WDVC"0+o->).\3BfuF@[r-;AKM:SqAQM7$>`i++&h@Tu%6*T(e]u,/cK6)0ac#g,/"N.qickFS4-nT#+74f#bbo>sSGt[&HR&?;?hD2pZ9CCc`7<_JTk-B'up;20kD(bd&>O-,^qr@C3n!03R%8cMkb5/Y`317I$1#GNQ.++>c.*Uj4Wf'/AWKYYbqQ(Xp;5'Bl>'[Sn!?\mRk-Uj8UoCP+UTrbm18>Zu+BYJTaW\,<GVGH\%qd<$t%.e&pd=&pWHgbLF26a"KM>EgL_<\8J5]6bCMq9lB?c^i$:!ZR@d'"j-Djg]6+\%"+$%mhpDLZn*tXRaU29JM^JX2;D,[sX0%J>Wds%'.4r@nXE]F:Zo!r[meTu"_W((a[p,]000nf00=*c]C<"IH[aGV^89TU]4C#AYhtN'"REi&m_Abqs7*l'oN+X$`'ib,RaXeX>=^9e%REnm!LI)0OC/$3lTI-_SMEi;q3%YmbDFLpj<P^kN$WDfBmtCBT/$C2S^cTkjPp^?n@FO7_UY0^&J,AB2RCnP*?Y@])"=_AO$R;g<%E2X7Vg;CJEro8A.(S*4)GbSm!jcfb5NobYgXfH2Z<G>8"NI=1$7+nSdQJ4MO9r"^QT5+Hp3V?CD;q4!li^!S(@OGY6Rk+]+^9/V8%92\.;cl'R%!*D0%q-*_d^sIMaN6AW-"s\f-muQZff&3:Y6AWRkan$5lF1G-9*g1#M`ZETSa:Jmfij$SLR2D'.;dq`$EVP_d6"qO"%6]!p]BSnH"(_:st^ZY$Z*73'&7ia.fh%@B&Wkh+Z_h$g<p-loXGl+$R1kQ_f$D&'H5WgPf]]RU<&dG6EQra\1BqmpA"Y8#dl@^lg%c,p?0U`^cdT]-mArn$9H^HtdUH5+g?3ML_P@MScf<9?Ha$Bf0nU8]`HH4+._#cEK&hJ^#Db;8[PcBP`_#I%3&@9m\D6A]nMo^u<e%S0*$hqs:sSSK?XW:`R^8.<YE,Dc1lKp9_PK/&-L9YHlpUL*67C9P_sGKMPtd?+igecOYRj)91*.oS3FBiPLT%;>:$#JHaSkl6[#t%.MM(mq6V%'\L6GgV8JNI$W\=UQI4>haseD6:5*t3Ul[kMKYG77!Wcqu%/eC;6n'pHMM<ap*iC<#L'2f:kkEF]R(4`)!_=Zhc-&;b%9ZGoc*[g!V^;pN1ei2:/g\e)7+oQN%c7hE""4MSM%+p,m2Ys$hboLLFC%/WRmn?_1[!dC4+f+0r4OIRY]CV#n\>)i#NBfU_GCkNf%k]dW\k0.P.LX'WI(F\<#!B*'?mc,_LE8k[f^R@YE$it7EnuA^cI%Zb-HAWZ1FiZEWM_,g,gM%n83BUJ%mHo4*?>(0a!4,\"Ylt:%%b5,\Z"&pieEckhejLA[rT[3CJLOSFX?Y4BJcHmQfT;-]%p+.)5Zo:d.bP"WcSVWW#VK?)Inua3!$[>+e,6Ui\;0?0b+rGX!M.e6&%7^CDq,s$cUCRh1,Y[DlYb3mkT/]:d^8FQ?SPZ-[!b+Z.N_MhAlE.0naGtM)HXFLEtbm>lpH^j*-'I"l[&/_DSJ[1Q)W>OrhFG<(F%Ai8V>Ao7T&`g&#M&ePft8U@dF%7Z,d;frYY4:MD9Nr5RZ^]6tgMZG1bm\I%Ibm#*ICr0l1k=c[Y3&'?gRZ\XaD'b:0lD"E\cY3ko%8%`'o7f*4WV?tL7PJoG;:[q!DI1EBLlnUps1rj!4b/'G_oG6G*2]ZmOae.]Ie1\TLdHQcOcYgn@(8(nN\l;q4[>5ak=Gd`hgs@Fi%cu[]Kb0Iip<A#RfnP8hXaR(Cm#cMN5'Jm1R]]Ei3p!\Hm,`S&j%Q&"FngNc1Z_?')gIP5&jh?sFYrCsd")M6=#500"4:,HE7Y`Ph%81PF>(".oYC-BAYU6l-o..5rgFM*F7,E-!SW$.,`U>m]F_91Js7A%OT1JG52EN)?c?K4r[Y_PUB*`&mmKhWtNV3eF7>=nrKqIXc*%@UJK\k06tcL)?4G_t/tOb6rhaf4ep+)%t>R\@qh@EUX1u,aZE%!0-]Z_X;71Q\Y6>/RTR8VB-k"ZE4EmlZ[K&c.Ym/i#qNd4tm;`%Sjli@U`H"6ma4b2i/mc3?=9eB21qsX2K]*;h6(p?5&aFb?j>t4#d3"6&['gEdh8$2gNqkISWRZtGWcCJA\'H](&h.)+Ze*]]M)U9%qP#mlTWtoFWO6ZnZHDZ*AWUoAMFGc<1N>C`OQ^Rp19Ks>ai'e57$N7VP`H3cn%>L,G8YI7$gNG^2W^ombfJ&k,L\NP[&"D6@2u!U%aMIp$=S)uP>!@_LBciS-SK`4RI6Tur[(3$j9>Gpn&fKMp`d-\.6m="*;p!e^:$/KjjgS%JQ%ZlXG`537_\?\SV(.Yd])$GC,pYD+%9M1u\@AJO-3`<c^Y8[-FnVg(@RB.VGGQ@e4F"J`qoV$](+cLO!$&:C\`UmUN8MN;/L+^t``,$=4'],hM5W$5:qrsi-&,ZD\)^3*m%n[i&lg-=JDfC'oo\!-"&S`rL^pEn7MqsGo'Qb@k]5?_N;C<t<Q5LImP8S1K)'_D=3/lX)RYeqNT-mo!cQ\O]N</#fs5Ot.:b_QV5%eaXo8<kQ-:Qe1dK-&fCPh\LX<?]4+Z5^>8/$,l-.(+>O'gO'jW2/\T)eS2$;G&up601FF<gKs0S#.-D(?+5V]ePsHgBjt(h[qL+^%=V#LOQ0+$V9Ng!n*h4T;WJM*"@4D.?2?pOPnlC^2]cgThbTA'aqNp7Wb_+R"M!Rk_m$uV9J;Ll)]a$D\mV5<FhI0if""5]h>j8kr%n7i5jC1)&PV?u`F6`J`"9T+L-K0]KAE^I;>gC=6$3ltNE&n6FC'n_Ie819nSo)pK4*hnZ$)uuBDKN1XJ)PT`DLs*%XPF*O;LX)Id%J_VbD=%70@)91@7p1t+MPOhX?_:Q6bWG#5Z5\V3ONF"6tn"CS:70SH[:KYh,Zlq')!Se;)dr0,]b_#.t#n<4![b06\h%:WeJh>CG%GQT;keoEjN[oB/[H^TI_2(\,lauLlG_r9V!knGNGBl4D8>\VGY`[!@I#I#H\f2(#L8>e_;]FH/3Q33#^'jX:o::<=j.ig@&iWJLZ%V5J)@=<i_a7O9W^^Ue[YC7KsaMbgd'^I6?,<)p(9iFON'0.pkB9+t"aMSqF?6AFW/e!4aR-&O&B-u**if9J*t(_TcbduXUGi`3Ve%*>&[15/XWdb)%BbmBL=l_qNnP4fCYE2Ok:cC=P?J66gfGW-2d';K2.@*SA:a_,r(%LGkfQ5pNN-?!XmbNqbX]4Ka1p64)JHHTOli%0JXZg1FubpB;2Zh)9hpo%J7<?(=I>c36'Xj]6*i`b6'KnK5,*CIXrOE&H)_#pD)\X.r0/55R=&FULQh)m^%LAN$po4C-Me8*"/cg%f-htiE=9amJ9pQhf?d81><Ge59-3A;?<3-3I^\'C"Mc9EapH74jA?r#;Qn]e8nXh+boo.e,XlqL^qQ4?1+kLe(mKeQm(DFZ%5[KC%O`sj]1M[=tG@PY7R,*a#+e>TmkQ'3M#P!2Pq'U2!r@EC(.XUbC#nY55@kb?icA"d?ieru(g;m>??gjqVD_E>jGEe)Ff65Z'8\I"s%NqoPr<6er5g/9sqm.SrS3n^tVO29qIWlLFANq2]jn#.=8\Y4Nn%GjoI%]\qF+a5]o;+&WJmjOpLOKbF98;cga,6s.8e.E5I<_.W(%VFnFtEk]4\LXr$5]@;gA$Nu/^2?![VZFI=VeXSC)eTV4E;U)9hSSbGOL"C,WGiab<$XKmU\=1]X@a"$_1[WfZc.S:p`L0du9%fYS%g:Ic3=+Vjn9WU=ni6$b\mO^%ri+6]s=GTW&&+.6>Rc`CQj6tq(gmcBK$>sK+=(?lra`L,?c?-3jIfG(MI"\G'Qe_!*"_3h'PFN7t%m(7QbB2u)b1B=k64`#_;&?-A2P<kp/@3f^#!F?CcV#6HF%j,J76mS-mV8aU/S,&4[=RD$"\4B+GjCG>a,g[EO:brE2=0g3E.`Dj0%o4<[)YqZ11D-Q-Fmu./lEMeIJ6*]d\,V(i/Ek%J,UH>+c))RCBZ.M,[ktdZoBI:p$hGd)B]'^X4O"(]_-^c)8@,OCBFa:>Z)5<q<%S_r0Ylg5%PcaMF*-+pnu4F),kE7;9t@^RK7>74NnmB+Bd;rYKi!pis1q1?s9+%d9`&DNGISqh]]a.[fuYE0$WCDq`ZO)`D\/7PI<%1NHd7P,@YNB(Ik?U8LF7g-A4SlUtc*/4)Yp@F#e4nLUM)q#rKIchg(u8YcTG86skLZF;F8'1"'+C+(o8_G6bo6!,Eo*Rs:sV+lKE%aN*:OO:c"5!4-oj/DK<fO?9Bm8QHUn(F:^PBbjsolFk<&2?6jUXe\mHbJF`^?AePEj9'?_j_Phb6LgICf<98dql0sq<BqG\oBd1h%TY,Ct\9CFQ(u:J\.u$c$?mfhaK<sc'o"Z458Han:4ddG&pD0`9.Gc6b++Ht^45f&+'YIu?X1d#FqTD.:fGsk,)ogm%'Jm5RgUR+A%arO=S'16es9c@U(!cen`'@[k*XiP@G_K;8l#+B0A>_EJ-&Re1p@9XDeRU#J3-B`8\%1KG!LWl%.!:i-@@jX?ZRe*5o)U%OK-d%&&%H<12O*lVuiPb84L\U\LUo9i)NiCTB9Z$bOPR_)Zijmck2[K7[Y9d]2VX]0d9%(Adi2+rt(FR_Cgi(?\0<_Nj___d!q7gqCS21pfH%%jG;F(X]^1"\Jm[36ASpJnsih)2jl6C3e%PiaOG^`3!i%kBIU#0Lu$4[up][p&Fk\%0s:77sneKEJ`=4J#[^Slc81<=uAmo3<&PL%O49b)!0eu=8br7$>_*mpn"rhk6B'_rFT%]K9F2!a8G"Fk=@@:;IX\^&aY"\?T,'Fk=uH*e6`YD)3.(UDS_84u3BTAEE])lZ?i6YX%)4EMa-4U[*1CqQ$3LiAh3=qUu8F1o]^leRjiir+\E%MgVWS3\W(1!OD4Y_H#SHZK2HSNq:T3b@72Xiu/NMEI)I<1[?;X#USD]2i>%[&6SEKNtp)Y'EsD,<!E\AOo]igSKitZ:utobY:dOeJ9C3NQ:1ci_8c8rDdJ/\ebXUWJ8-$XGA;iS+Ro).?[l3"db3^01(Z^GEQIS%HS,Z*`OdUq[CCS1B-Vl>SV4V]X1;e:k@1FM,"2EOeK0P[Mt"AD&kATR-q>'?:Ro5nA.&8n82eGq(m5cZLL=i:lJru.6DHQUiI2s*%0.SMD.hdQMkqp"i-3X-$M8Q0f%5\e(>"q"MLK%S_fdCYQ%jepc,+8kkq#*22eLlR=jkQDj%%DbV]UWAqSFq0DpI[<Vgs*m'<kh$n%Y1)2$\>fS(%<^/YT@UN/0%l\iJm0H3V`7X_h<hFiRMpT@maYKC6#rmMk%70r>9F`&br#Q#?[^tb@%*k$.F_W`hoYWOKIHF]g/@Z2%[h:tW.mBW8*#<P16,bP+%%l]em/,fC[J?'AYBt122C6ieWDH&[K@BK(8/:8Je&_#t:Xck(P!b1Xq"(BgU=jN]PI*h>s7&qL%$@$>%+ZIJm?l:SO2\@^m1bX0YrH`+-);SM+#9Pl?H!\"ibV%r.=m/qfa5/Y<5:F2$OH%!]dm>,&i@$aYVIM<%[Z##S!TOju*N-"X]jT6L%1Vp)\:(&DoE$*Cr6$=4O&)^rEE+UJS?=uOUd@s*@T'B''m\"F#Na!)"dog!B>O]_H;o*68j!gQ`<oW"Q@^>PYf8;,0imr7283CfT%DJ)TM[_5:Z0a'"RoLMp?k2Y4]mNO.k6EbH#A#:;4eY\B+%!<ENE4?Vi5\)4g]e84iSDs3"C5&XbleCd<ld4)I$@DFDCM_S^SQ0j0%h9J'Nj(r5%?R8WqdnIJa:VT[brWZU'\K/GJ*"?';=&H%ZnDF4R%_N02GRo>&gn<l5TO=Sd,)nBqe=a;Z:b#/JgB:jd*K2nn7]Mc_%1@PVqNhT,Ri*/@Wa$nXS63&3YFQOk4ki7b@Z)T*<]\1S;NN?ad`)H6Jb@MER%kb,^"JYE!;g<J@V["&mC<S1S/juVC@2qukaA]4V%=QJCbk/h_-$E]E/RV0#fZKu$EPeS]EDo,K@(62-N_YEOE-V@J6X`^&_MUn;B@Gt]">G\WV&bT5GZ48QlYX0NhHQ]?CZD#%PS?<Bf%H392LRrs+D\KVg+\F3n0:`$+p:r[Te5YTJ<rjRB%&L)W01B"@![u:K7gWIl53c^0D5[B1DPH*CL<kQ!`i+-Mr@[DI`SlW@jOQ'IQ%ljT>m&#*bqR*3@u<B",B(<\ga`u$1S-2Mi!JQdK$3lgIn&AtZ55KG<$,spFSHJZ?`HiE1!r]8THqdu8;\JXZ=6Ib#OTL@88P[/7f%<k3!gcm;t(aXj@X<n>]pnB;^TUUFm"j.e[An#@:go0sPHR"&0O(CPFe<u.FhFOBMFY;<j+*2pb*D]icqMH/e;(=:)W9<GXs:%XI0%Fk]Kr.m*e%q`\cWQMM7EI#*ts/l?ADT_6ijTG@4updIInGJ44H3!Qo*ng9m\Zj@jNn>g*@$pkZ(/#RE/s,YlAG\C'=LGG,h4Z?Jo%-QnX8)m#ZhAX.^lQT&fQ$AlV6"s!8F5trjU+H4,0U3rp[lW,ZKh'Tn8HPu(#l+ma)'@<3Rrq4Xfq`arGP,5G#6M%n.OP]?L,X&s&%1Ch0^iXeKn@.'oe*UIPXIu;>f^YQI![uYk*H=;dWKW+f,:TG[sL=3KUKCPGR3nBurLln\?<P2T]Mef*r\,l3XiHe=h:+M](k_*L@%[l_q6Ycjc!RuY!UeYno$!<DuE4>I(pMr`D"9o03lht,M.MXVQRn76mGRj>;uFHh5QU&QV=+\R&nm,]HVDIq+"XTQ>B.mp6"q-c.L%g9bX?WT87mNV+MoNF.X(;WJ@e'-G]RL]k0%,W8KY@m_.<)]1&C[T[%>8K@^;"`ntM!6\A,hnI`5m@q?:G^SP.XeS9=3VJA?@QIMk%]fV&<C&c.]c>b"XN\&?6MhO&`,NVmR'jbjQpB[V4ZZ5Se^Q[Xs-YMb0=2clKI=%[J@0!9$OlI1*;4tF5/;rI6H]sa.j(3&Z[1bWl%R.%FOa'u9`IHH=LcJ)?/aLVOcQ-pg`=VPJD(NUq*2U9Q<r+8?Pc^WsdWj!BO0u(C"7r;)Hq?dt)$G<;Hp5?O7,=ccIc#9i?N%(G7%k]FnmaEB5:9=OEr?$-FO.-$kIFeht24(:q/q1+stI[J9?+0C4ag$dk2HB4H=?MUUEVD;Bc&$h&e)@l3IXo^jU:Ldu08Npn\.:r'E%Qkq8[nLA8>c=9(VN@kCd1a-UG"M(nSA3HeYm2)PG`7)JYU?)LR=MQRhP[M$"[gGmGm<r!G:r,8j`KV5>VY!d-\ZA(\N\H,rGj(M_%h8c(qqqY69[?J;`jT"jVCWIDe4Uajr!p7,7S7BNH*B9I%Z(?>J+OujbG%$VO'R1H*emVVtY/?5WQ@I9;G?i\[@\4k`'8J_XD3Z8]%er(]J9nJ1IaK)fTj%CiK<SQ6]JdPr8(M0A*EI89@`Q-B;q7%O9TZp2YPkPBnm`_=o2s/IHe=B`IYcW,q,Hn[;PHWF<^Nh00.ZNEq%.KB*s:LF,"Ik3haj1kN`[m0lL5Q0^&iR=,Hs65SormQArb9-c)07WiAVa(49++O7<k<Jsh^MqplrQk:X56(F3J,6YSoril@e)u5X%n,N66(n$_\5QC<9+91RiI/8>OmAi5~>%AI9_PrivateDataEnd